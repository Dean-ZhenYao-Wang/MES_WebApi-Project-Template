//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2022/5/27 19:54:32
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json.Serialization;
/// <summary>
/// There are no comments for BaseDB.角色_菜单 in the schema.
/// </summary>
[GeneratedCode("Devart Entity Developer", "")]
[Serializable()]
public partial class 角色_菜单 : Util.Model.Base_Entity, ICloneable
{

    /// <summary>
    /// There are no comments for 角色_菜单 constructor in the schema.
    /// </summary>
    public 角色_菜单()
    {
        OnCreated();
    }

    /// <summary>
    /// There are no comments for Key in the schema.
    /// </summary>
    public new string Key { get; set; }

    /// <summary>
    /// There are no comments for 角色Key in the schema.
    /// </summary>
    public virtual string 角色Key { get; set; }

    /// <summary>
    /// There are no comments for 菜单Key in the schema.
    /// </summary>
    public virtual string 菜单Key { get; set; }

    /// <summary>
    /// There are no comments for 角色 in the schema.
    /// </summary>
    public virtual PersonnelClassType 角色 { get; set; }

    /// <summary>
    /// There are no comments for 菜单 in the schema.
    /// </summary>
    public virtual 菜单 菜单 { get; set; }

    #region Extensibility Method Definitions

    /// <summary>
    /// There are no comments for OnCreated in the schema.
    /// </summary>
    partial void OnCreated();

    public override bool Equals(object obj)
    {
        角色_菜单 toCompare = obj as 角色_菜单;
        if (toCompare == null)
        {
            return false;
        }

        if (!Object.Equals(this.Key, toCompare.Key))
            return false;
        if (!Object.Equals(this.角色Key, toCompare.角色Key))
            return false;
        if (!Object.Equals(this.菜单Key, toCompare.菜单Key))
            return false;

        return true;
    }

    public override int GetHashCode()
    {
        int hashCode = 13;
        hashCode = (hashCode * 7) + Key.GetHashCode();
        hashCode = (hashCode * 7) + 角色Key.GetHashCode();
        hashCode = (hashCode * 7) + 菜单Key.GetHashCode();
        return hashCode;
    }

    #endregion

    #region ICloneable Members

    public virtual object Clone()
    {
        角色_菜单 obj = new 角色_菜单();
        obj.Key = Key;
        obj.角色Key = 角色Key;
        obj.菜单Key = 菜单Key;
        return obj;
    }

    #endregion
}
