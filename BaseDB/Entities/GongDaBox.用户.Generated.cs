//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2022/5/27 19:54:32
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json.Serialization;

namespace BaseDB
{
    /// <summary>
    /// There are no comments for BaseDB.用户 in the schema.
    /// </summary>
    [GeneratedCode("Devart Entity Developer", "")]
    [Serializable()]
    public partial class 用户 : Util.Model.Base_Entity, ICloneable {

        /// <summary>
        /// There are no comments for 用户 constructor in the schema.
        /// </summary>
        public 用户()
        {
            this.所属的组织列表 = new List<用户_组织>();
            this.拥有的角色列表 = new List<用户_角色>();
            OnCreated();
        }

        /// <summary>
        /// There are no comments for Key in the schema.
        /// </summary>
        public virtual string Key { get; set; }

        /// <summary>
        /// 登录用户名
        /// </summary>
        public virtual string 登录用户名 { get; set; }

        /// <summary>
        /// There are no comments for 密码 in the schema.
        /// </summary>
        public virtual string 密码 { get; set; }

        /// <summary>
        /// 昵称
        /// </summary>
        public virtual string 昵称 { get; set; }

        /// <summary>
        /// 性别。未知、男、女
        /// </summary>
        public virtual int? 性别 { get; set; }

        /// <summary>
        /// 邮件
        /// </summary>
        public virtual string 邮件 { get; set; }

        /// <summary>
        /// There are no comments for 手机 in the schema.
        /// </summary>
        public virtual string 手机 { get; set; }

        /// <summary>
        /// 代码。身份证、员工编号等
        /// </summary>
        public virtual string Code { get; set; }

        /// <summary>
        /// There are no comments for 头像 in the schema.
        /// </summary>
        public virtual string 头像 { get; set; }

        /// <summary>
        /// There are no comments for 年龄 in the schema.
        /// </summary>
        public virtual int? 年龄 { get; set; }

        /// <summary>
        /// There are no comments for 生日 in the schema.
        /// </summary>
        public virtual string 生日 { get; set; }

        /// <summary>
        /// There are no comments for 所属的组织列表 in the schema.
        /// </summary>
        public virtual IList<用户_组织> 所属的组织列表 { get; set; }

        /// <summary>
        /// There are no comments for 拥有的角色列表 in the schema.
        /// </summary>
        public virtual IList<用户_角色> 拥有的角色列表 { get; set; }

        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          用户 toCompare = obj as 用户;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Key, toCompare.Key))
            return false;

          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Key.GetHashCode();
          return hashCode;
        }

        #endregion

        #region ICloneable Members

        public virtual object Clone()
        {
            用户 obj = new 用户();
            obj.Key = Key;
            obj.登录用户名 = 登录用户名;
            obj.密码 = 密码;
            obj.昵称 = 昵称;
            obj.性别 = 性别;
            obj.邮件 = 邮件;
            obj.手机 = 手机;
            obj.Code = Code;
            obj.头像 = 头像;
            obj.年龄 = 年龄;
            obj.生日 = 生日;
            return obj;
        }

        #endregion
    }

}
