//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2022/5/27 19:54:32
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json.Serialization;

namespace BaseDB
{
    /// <summary>
    /// 用于记录各系统模块使用的文件，可以是Local/NAS/OSS等
    /// </summary>
    [GeneratedCode("Devart Entity Developer", "")]
    [Serializable()]
    public partial class 附件 : Util.Model.Base_Entity, ICloneable {

        /// <summary>
        /// There are no comments for 附件 constructor in the schema.
        /// </summary>
        public 附件()
        {
            this.FileName = @"";
            this.Size = 0;
            OnCreated();
        }

        /// <summary>
        /// 业务主键
        /// </summary>
        public virtual string Key { get; set; }

        /// <summary>
        /// 业务分类
        /// </summary>
        public virtual string Category { get; set; }

        /// <summary>
        /// 业务内容作为附件标题，便于查看管理
        /// </summary>
        public virtual string Title { get; set; }

        /// <summary>
        /// 原始文件名
        /// </summary>
        public virtual string FileName { get; set; }

        /// <summary>
        /// 扩展名
        /// </summary>
        public virtual string Extension { get; set; }

        /// <summary>
        /// 文件大小
        /// </summary>
        public virtual long Size { get; set; }

        /// <summary>
        /// 用于Http响应
        /// </summary>
        public virtual string ContentType { get; set; }

        /// <summary>
        /// 本地相对路径或OSS路径
        /// </summary>
        public virtual string FilePath { get; set; }

        /// <summary>
        /// MD5
        /// </summary>
        public virtual string Hash { get; set; }

        /// <summary>
        /// 附件上传时间，可用于构造文件存储路径
        /// </summary>
        public virtual DateTime? UploadTime { get; set; }

        /// <summary>
        /// 用于远程抓取的附件来源地址，本地文件不存在时自动依次抓取
        /// </summary>
        public virtual string Source { get; set; }

        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          附件 toCompare = obj as 附件;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Key, toCompare.Key))
            return false;

          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Key.GetHashCode();
          return hashCode;
        }

        #endregion

        #region ICloneable Members

        public virtual object Clone()
        {
            附件 obj = new 附件();
            obj.Key = Key;
            obj.Category = Category;
            obj.Title = Title;
            obj.FileName = FileName;
            obj.Extension = Extension;
            obj.Size = Size;
            obj.ContentType = ContentType;
            obj.FilePath = FilePath;
            obj.Hash = Hash;
            obj.UploadTime = UploadTime;
            obj.Source = Source;
            return obj;
        }

        #endregion
    }

}
