//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2022/5/27 19:54:32
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json.Serialization;

namespace BaseDB
{
    /// <summary>
    /// There are no comments for BaseDB.角色 in the schema.
    /// </summary>
    [GeneratedCode("Devart Entity Developer", "")]
    [Serializable()]
    public partial class 角色 : Util.Model.Base_Entity, ICloneable {

        /// <summary>
        /// There are no comments for 角色 constructor in the schema.
        /// </summary>
        public 角色()
        {
            this.可访问的菜单列表 = new List<角色_菜单>();
            this.下辖的用户列表 = new List<用户_角色>();
            OnCreated();
        }

        /// <summary>
        /// There are no comments for Key in the schema.
        /// </summary>
        public virtual string Key { get; set; }

        /// <summary>
        /// There are no comments for 名称 in the schema.
        /// </summary>
        public virtual string 名称 { get; set; }

        /// <summary>
        /// There are no comments for 可访问的菜单列表 in the schema.
        /// </summary>
        public virtual IList<角色_菜单> 可访问的菜单列表 { get; set; }

        /// <summary>
        /// There are no comments for 下辖的用户列表 in the schema.
        /// </summary>
        public virtual IList<用户_角色> 下辖的用户列表 { get; set; }

        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          角色 toCompare = obj as 角色;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Key, toCompare.Key))
            return false;

          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Key.GetHashCode();
          return hashCode;
        }

        #endregion

        #region ICloneable Members

        public virtual object Clone()
        {
            角色 obj = new 角色();
            obj.Key = Key;
            obj.名称 = 名称;
            return obj;
        }

        #endregion
    }

}
