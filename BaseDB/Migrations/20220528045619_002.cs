using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace BaseDB.Migrations
{
    public partial class _002 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "ProductInformation",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProductID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductName_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProductName_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BatchSize_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProductInformation", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "ResourceReferences",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceReferences", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "ProductSegments",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProductInformationKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    BaseSegmentKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProductSegments", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ProductSegments_ProductInformation_ProductInformationKey",
                        column: x => x.ProductInformationKey,
                        principalTable: "ProductInformation",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ProductSegments_ProductSegments_BaseSegmentKey",
                        column: x => x.BaseSegmentKey,
                        principalTable: "ProductSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ResourceReferencesProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourcePropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceReferencePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ResourceReferenceTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceReferencesProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ResourceReferencesProperties_ResourceReferences_ResourceReferenceTypeKey",
                        column: x => x.ResourceReferenceTypeKey,
                        principalTable: "ResourceReferences",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ResourceReferencesProperties_ResourceReferencesProperties_ResourceReferencePropertyTypeKey",
                        column: x => x.ResourceReferencePropertyTypeKey,
                        principalTable: "ResourceReferencesProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ResourceReferencesProperties_Value",
                columns: table => new
                {
                    ResourceReferencePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceReferencesProperties_Value", x => new { x.ResourceReferencePropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ResourceReferencesProperties_Value_ResourceReferencesProperties_ResourceReferencePropertyTypeKey",
                        column: x => x.ResourceReferencePropertyTypeKey,
                        principalTable: "ResourceReferencesProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EquipmentClasses_EquipmentClassBaseID",
                columns: table => new
                {
                    EquipmentClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentClasses_EquipmentClassBaseID", x => new { x.EquipmentClassTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentClasses_EquipmentSourceID",
                columns: table => new
                {
                    EquipmentClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentClasses_EquipmentSourceID", x => new { x.EquipmentClassTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentClasses_TestSpecificationID",
                columns: table => new
                {
                    EquipmentClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentClasses_TestSpecificationID", x => new { x.EquipmentClassTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentClassProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EquipmentClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentClassProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_EquipmentClassProperties_EquipmentClassProperties_EquipmentClassPropertyTypeKey",
                        column: x => x.EquipmentClassPropertyTypeKey,
                        principalTable: "EquipmentClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "EquipmentClassProperties_Value",
                columns: table => new
                {
                    EquipmentClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentClassProperties_Value", x => new { x.EquipmentClassPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_EquipmentClassProperties_Value_EquipmentClassProperties_EquipmentClassPropertyTypeKey",
                        column: x => x.EquipmentClassPropertyTypeKey,
                        principalTable: "EquipmentClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EquipmentProperties_Value",
                columns: table => new
                {
                    EquipmentPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentProperties_Value", x => new { x.EquipmentPropertyTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EquipmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_EquipmentProperties_EquipmentProperties_EquipmentPropertyTypeKey",
                        column: x => x.EquipmentPropertyTypeKey,
                        principalTable: "EquipmentProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Equipments_EquipmentAssetMapping",
                columns: table => new
                {
                    EquipmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EquipmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Equipments_EquipmentAssetMapping", x => new { x.EquipmentTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "Equipments_EquipmentClassID",
                columns: table => new
                {
                    EquipmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Equipments_EquipmentClassID", x => new { x.EquipmentTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "Equipments_TestSpecificationID",
                columns: table => new
                {
                    EquipmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Equipments_TestSpecificationID", x => new { x.EquipmentTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecificationProperties_Quantity",
                columns: table => new
                {
                    EquipmentSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecificationProperties_Quantity", x => new { x.EquipmentSegmentSpecificationPropertyTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecificationProperties_Value",
                columns: table => new
                {
                    EquipmentSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecificationProperties_Value", x => new { x.EquipmentSegmentSpecificationPropertyTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EquipmentSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecificationPropertyTypeKey",
                        column: x => x.EquipmentSegmentSpecificationPropertyTypeKey,
                        principalTable: "EquipmentSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecifications_EquipmentClassID",
                columns: table => new
                {
                    EquipmentSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecifications_EquipmentClassID", x => new { x.EquipmentSegmentSpecificationTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecifications_EquipmentID",
                columns: table => new
                {
                    EquipmentSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecifications_EquipmentID", x => new { x.EquipmentSegmentSpecificationTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecifications_Quantity",
                columns: table => new
                {
                    EquipmentSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecifications_Quantity", x => new { x.EquipmentSegmentSpecificationTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecifications_TestSpecificationID",
                columns: table => new
                {
                    EquipmentSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecifications_TestSpecificationID", x => new { x.EquipmentSegmentSpecificationTypeKey, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "EquipmentClasses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EquipmentLevel_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentClasses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_EquipmentClasses_EquipmentClasses_EquipmentClassTypeKey",
                        column: x => x.EquipmentClassTypeKey,
                        principalTable: "EquipmentClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Equipments",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EquipmentLevel_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevel_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Equipments", x => x.Key);
                    table.ForeignKey(
                        name: "FK_Equipments_Equipments_EquipmentTypeKey",
                        column: x => x.EquipmentTypeKey,
                        principalTable: "Equipments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "EquipmentSegmentSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EquipmentSegmentSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_EquipmentSegmentSpecifications_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                        column: x => x.EquipmentSegmentSpecificationTypeKey,
                        principalTable: "EquipmentSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "JobLists",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobLists", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "JobOrders",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_Value = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    Command_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Command_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CommandRule_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CommandRule_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DispatchStatus_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobListTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkRequestTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobOrders", x => x.Key);
                    table.ForeignKey(
                        name: "FK_JobOrders_JobLists_JobListTypeKey",
                        column: x => x.JobListTypeKey,
                        principalTable: "JobLists",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "JobOrders_SegmentRequirementID",
                columns: table => new
                {
                    JobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobOrders_SegmentRequirementID", x => new { x.JobOrderTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_JobOrders_SegmentRequirementID_JobOrders_JobOrderTypeKey",
                        column: x => x.JobOrderTypeKey,
                        principalTable: "JobOrders",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "JobOrders_JobOrderParameter",
                columns: table => new
                {
                    JobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobOrders_JobOrderParameter", x => new { x.JobOrderTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_JobOrders_JobOrderParameter_JobOrders_JobOrderTypeKey",
                        column: x => x.JobOrderTypeKey,
                        principalTable: "JobOrders",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "JobOrders_JobOrderParameter_ParameterSpecificationID",
                columns: table => new
                {
                    ParameterTypeJobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobOrders_JobOrderParameter_ParameterSpecificationID", x => new { x.ParameterTypeJobOrderTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_JobOrders_JobOrderParameter_ParameterSpecificationID_JobOrders_JobOrderParameter_ParameterTypeJobOrderTypeKey_ParameterTypeId",
                        columns: x => new { x.ParameterTypeJobOrderTypeKey, x.ParameterTypeId },
                        principalTable: "JobOrders_JobOrderParameter",
                        principalColumns: new[] { "JobOrderTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "JobOrders_JobOrderParameter_ProcessSegmentParameterID",
                columns: table => new
                {
                    ParameterTypeJobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobOrders_JobOrderParameter_ProcessSegmentParameterID", x => new { x.ParameterTypeJobOrderTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_JobOrders_JobOrderParameter_ProcessSegmentParameterID_JobOrders_JobOrderParameter_ParameterTypeJobOrderTypeKey_ParameterType~",
                        columns: x => new { x.ParameterTypeJobOrderTypeKey, x.ParameterTypeId },
                        principalTable: "JobOrders_JobOrderParameter",
                        principalColumns: new[] { "JobOrderTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "JobOrders_JobOrderParameter_Value",
                columns: table => new
                {
                    ParameterTypeJobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobOrders_JobOrderParameter_Value", x => new { x.ParameterTypeJobOrderTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_JobOrders_JobOrderParameter_Value_JobOrders_JobOrderParameter_ParameterTypeJobOrderTypeKey_ParameterTypeId",
                        columns: x => new { x.ParameterTypeJobOrderTypeKey, x.ParameterTypeId },
                        principalTable: "JobOrders_JobOrderParameter",
                        principalColumns: new[] { "JobOrderTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "JobResponses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkDirectiveVersion_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveVersion_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterVersion_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_JobResponses", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "MaterialClasses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialClasses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialClasses_MaterialClasses_MaterialClassTypeKey",
                        column: x => x.MaterialClassTypeKey,
                        principalTable: "MaterialClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialClasses_MaterialClassBaseID",
                columns: table => new
                {
                    MaterialClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialClasses_MaterialClassBaseID", x => new { x.MaterialClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialClasses_MaterialClassBaseID_MaterialClasses_MaterialClassTypeKey",
                        column: x => x.MaterialClassTypeKey,
                        principalTable: "MaterialClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialClasses_MaterialDefinitionSourceID",
                columns: table => new
                {
                    MaterialClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialClasses_MaterialDefinitionSourceID", x => new { x.MaterialClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialClasses_MaterialDefinitionSourceID_MaterialClasses_MaterialClassTypeKey",
                        column: x => x.MaterialClassTypeKey,
                        principalTable: "MaterialClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialClasses_TestSpecificationID",
                columns: table => new
                {
                    MaterialClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialClasses_TestSpecificationID", x => new { x.MaterialClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialClasses_TestSpecificationID_MaterialClasses_MaterialClassTypeKey",
                        column: x => x.MaterialClassTypeKey,
                        principalTable: "MaterialClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialClassProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    MaterialClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialClassProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialClassProperties_MaterialClasses_MaterialClassTypeKey",
                        column: x => x.MaterialClassTypeKey,
                        principalTable: "MaterialClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_MaterialClassProperties_MaterialClassProperties_MaterialClassPropertyTypeKey",
                        column: x => x.MaterialClassPropertyTypeKey,
                        principalTable: "MaterialClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialClassProperties_Value",
                columns: table => new
                {
                    MaterialClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialClassProperties_Value", x => new { x.MaterialClassPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialClassProperties_Value_MaterialClassProperties_MaterialClassPropertyTypeKey",
                        column: x => x.MaterialClassPropertyTypeKey,
                        principalTable: "MaterialClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialDefinitions",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialDefinitions", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialDefinitions_MaterialDefinitions_MaterialDefinitionTypeKey",
                        column: x => x.MaterialDefinitionTypeKey,
                        principalTable: "MaterialDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialDefinitionProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    MaterialDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialDefinitionProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialDefinitionProperties_MaterialDefinitionProperties_MaterialDefinitionPropertyTypeKey",
                        column: x => x.MaterialDefinitionPropertyTypeKey,
                        principalTable: "MaterialDefinitionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_MaterialDefinitionProperties_MaterialDefinitions_MaterialDefinitionTypeKey",
                        column: x => x.MaterialDefinitionTypeKey,
                        principalTable: "MaterialDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialDefinitions_MaterialClassID",
                columns: table => new
                {
                    MaterialDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialDefinitions_MaterialClassID", x => new { x.MaterialDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialDefinitions_MaterialClassID_MaterialDefinitions_MaterialDefinitionTypeKey",
                        column: x => x.MaterialDefinitionTypeKey,
                        principalTable: "MaterialDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialDefinitions_MaterialLotSourceID",
                columns: table => new
                {
                    MaterialDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialDefinitions_MaterialLotSourceID", x => new { x.MaterialDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialDefinitions_MaterialLotSourceID_MaterialDefinitions_MaterialDefinitionTypeKey",
                        column: x => x.MaterialDefinitionTypeKey,
                        principalTable: "MaterialDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialDefinitions_TestSpecificationID",
                columns: table => new
                {
                    MaterialDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialDefinitions_TestSpecificationID", x => new { x.MaterialDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialDefinitions_TestSpecificationID_MaterialDefinitions_MaterialDefinitionTypeKey",
                        column: x => x.MaterialDefinitionTypeKey,
                        principalTable: "MaterialDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialDefinitionProperties_Value",
                columns: table => new
                {
                    MaterialDefinitionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialDefinitionProperties_Value", x => new { x.MaterialDefinitionPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialDefinitionProperties_Value_MaterialDefinitionProperties_MaterialDefinitionPropertyTypeKey",
                        column: x => x.MaterialDefinitionPropertyTypeKey,
                        principalTable: "MaterialDefinitionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialLots",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialLots", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialLots_MaterialLots_MaterialLotTypeKey",
                        column: x => x.MaterialLotTypeKey,
                        principalTable: "MaterialLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialLots_Quantity",
                columns: table => new
                {
                    MaterialLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialLots_Quantity", x => new { x.MaterialLotTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialLots_Quantity_MaterialLots_MaterialLotTypeKey",
                        column: x => x.MaterialLotTypeKey,
                        principalTable: "MaterialLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialLots_TestSpecificationID",
                columns: table => new
                {
                    MaterialLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialLots_TestSpecificationID", x => new { x.MaterialLotTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialLots_TestSpecificationID_MaterialLots_MaterialLotTypeKey",
                        column: x => x.MaterialLotTypeKey,
                        principalTable: "MaterialLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecificationProperties_MaterialSegmentSpecificationProperties_MaterialSegmentSpecificationPropertyTypeKey",
                        column: x => x.MaterialSegmentSpecificationPropertyTypeKey,
                        principalTable: "MaterialSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecificationProperties_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications_MaterialClassID",
                columns: table => new
                {
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications_MaterialClassID", x => new { x.MaterialSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecifications_MaterialClassID_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications_MaterialDefinitionID",
                columns: table => new
                {
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications_MaterialDefinitionID", x => new { x.MaterialSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecifications_MaterialDefinitionID_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications_MaterialLotID",
                columns: table => new
                {
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications_MaterialLotID", x => new { x.MaterialSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecifications_MaterialLotID_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications_MaterialSublotID",
                columns: table => new
                {
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications_MaterialSublotID", x => new { x.MaterialSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecifications_MaterialSublotID_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications_Quantity",
                columns: table => new
                {
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications_Quantity", x => new { x.MaterialSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecifications_Quantity_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecifications_TestSpecificationID",
                columns: table => new
                {
                    MaterialSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecifications_TestSpecificationID", x => new { x.MaterialSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecifications_TestSpecificationID_MaterialSegmentSpecifications_MaterialSegmentSpecificationTypeKey",
                        column: x => x.MaterialSegmentSpecificationTypeKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType",
                columns: table => new
                {
                    AssemblySegmentSpecificationKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    MaterialSegmentSpecificationChildKey = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType", x => new { x.AssemblySegmentSpecificationKey, x.MaterialSegmentSpecificationChildKey });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType_MaterialSegmentSpecifications_AssemblySegmentSpecificationK~",
                        column: x => x.AssemblySegmentSpecificationKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType_MaterialSegmentSpecifications_MaterialSegmentSpecificationC~",
                        column: x => x.MaterialSegmentSpecificationChildKey,
                        principalTable: "MaterialSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecificationProperties_Quantity",
                columns: table => new
                {
                    MaterialSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecificationProperties_Quantity", x => new { x.MaterialSegmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecificationProperties_Quantity_MaterialSegmentSpecificationProperties_MaterialSegmentSpecificationPropertyT~",
                        column: x => x.MaterialSegmentSpecificationPropertyTypeKey,
                        principalTable: "MaterialSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSegmentSpecificationProperties_Value",
                columns: table => new
                {
                    MaterialSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSegmentSpecificationProperties_Value", x => new { x.MaterialSegmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSegmentSpecificationProperties_Value_MaterialSegmentSpecificationProperties_MaterialSegmentSpecificationPropertyType~",
                        column: x => x.MaterialSegmentSpecificationPropertyTypeKey,
                        principalTable: "MaterialSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSubLots",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Status_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disposition_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSubLots", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "MaterialLotProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    MaterialLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    MaterialSubLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialLotProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_MaterialLotProperties_MaterialLotProperties_MaterialLotPropertyTypeKey",
                        column: x => x.MaterialLotPropertyTypeKey,
                        principalTable: "MaterialLotProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_MaterialLotProperties_MaterialLots_MaterialLotTypeKey",
                        column: x => x.MaterialLotTypeKey,
                        principalTable: "MaterialLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_MaterialLotProperties_MaterialSubLots_MaterialSubLotTypeKey",
                        column: x => x.MaterialSubLotTypeKey,
                        principalTable: "MaterialSubLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialLotTypeMaterialSubLotType",
                columns: table => new
                {
                    AssemblyLotKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    AssemblySubLotKey = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialLotTypeMaterialSubLotType", x => new { x.AssemblyLotKey, x.AssemblySubLotKey });
                    table.ForeignKey(
                        name: "FK_MaterialLotTypeMaterialSubLotType_MaterialLots_AssemblyLotKey",
                        column: x => x.AssemblyLotKey,
                        principalTable: "MaterialLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_MaterialLotTypeMaterialSubLotType_MaterialSubLots_AssemblySubLotKey",
                        column: x => x.AssemblySubLotKey,
                        principalTable: "MaterialSubLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSubLots_Quantity",
                columns: table => new
                {
                    MaterialSubLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSubLots_Quantity", x => new { x.MaterialSubLotTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSubLots_Quantity_MaterialSubLots_MaterialSubLotTypeKey",
                        column: x => x.MaterialSubLotTypeKey,
                        principalTable: "MaterialSubLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSubLots_TestSpecificationID",
                columns: table => new
                {
                    MaterialSubLotTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSubLots_TestSpecificationID", x => new { x.MaterialSubLotTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialSubLots_TestSpecificationID_MaterialSubLots_MaterialSubLotTypeKey",
                        column: x => x.MaterialSubLotTypeKey,
                        principalTable: "MaterialSubLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MaterialSubLotTypeMaterialSubLotType",
                columns: table => new
                {
                    AssemblySubLotKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    MaterialSubLotChildKey = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialSubLotTypeMaterialSubLotType", x => new { x.AssemblySubLotKey, x.MaterialSubLotChildKey });
                    table.ForeignKey(
                        name: "FK_MaterialSubLotTypeMaterialSubLotType_MaterialSubLots_AssemblySubLotKey",
                        column: x => x.AssemblySubLotKey,
                        principalTable: "MaterialSubLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_MaterialSubLotTypeMaterialSubLotType_MaterialSubLots_MaterialSubLotChildKey",
                        column: x => x.MaterialSubLotChildKey,
                        principalTable: "MaterialSubLots",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MaterialLotProperties_Value",
                columns: table => new
                {
                    MaterialLotPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MaterialLotProperties_Value", x => new { x.MaterialLotPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_MaterialLotProperties_Value_MaterialLotProperties_MaterialLotPropertyTypeKey",
                        column: x => x.MaterialLotPropertyTypeKey,
                        principalTable: "MaterialLotProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActuals",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpEquipmentActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActuals", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentActuals_JobResponses_JobResponseTypeKey",
                        column: x => x.JobResponseTypeKey,
                        principalTable: "JobResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpEquipmentActuals_OpEquipmentActuals_OpEquipmentActualTypeKey",
                        column: x => x.OpEquipmentActualTypeKey,
                        principalTable: "OpEquipmentActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActualProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpEquipmentActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpEquipmentActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActualProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentActualProperties_OpEquipmentActualProperties_OpEquipmentActualPropertyTypeKey",
                        column: x => x.OpEquipmentActualPropertyTypeKey,
                        principalTable: "OpEquipmentActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpEquipmentActualProperties_OpEquipmentActuals_OpEquipmentActualTypeKey",
                        column: x => x.OpEquipmentActualTypeKey,
                        principalTable: "OpEquipmentActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActuals_EquipmentClassID",
                columns: table => new
                {
                    OpEquipmentActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActuals_EquipmentClassID", x => new { x.OpEquipmentActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentActuals_EquipmentClassID_OpEquipmentActuals_OpEquipmentActualTypeKey",
                        column: x => x.OpEquipmentActualTypeKey,
                        principalTable: "OpEquipmentActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActuals_EquipmentID",
                columns: table => new
                {
                    OpEquipmentActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActuals_EquipmentID", x => new { x.OpEquipmentActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentActuals_EquipmentID_OpEquipmentActuals_OpEquipmentActualTypeKey",
                        column: x => x.OpEquipmentActualTypeKey,
                        principalTable: "OpEquipmentActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActuals_Quantity",
                columns: table => new
                {
                    OpEquipmentActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActuals_Quantity", x => new { x.OpEquipmentActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentActuals_Quantity_OpEquipmentActuals_OpEquipmentActualTypeKey",
                        column: x => x.OpEquipmentActualTypeKey,
                        principalTable: "OpEquipmentActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActualProperties_Quantity",
                columns: table => new
                {
                    OpEquipmentActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActualProperties_Quantity", x => new { x.OpEquipmentActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentActualProperties_Quantity_OpEquipmentActualProperties_OpEquipmentActualPropertyTypeKey",
                        column: x => x.OpEquipmentActualPropertyTypeKey,
                        principalTable: "OpEquipmentActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentActualProperties_Value",
                columns: table => new
                {
                    OpEquipmentActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentActualProperties_Value", x => new { x.OpEquipmentActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentActualProperties_Value_OpEquipmentActualProperties_OpEquipmentActualPropertyTypeKey",
                        column: x => x.OpEquipmentActualPropertyTypeKey,
                        principalTable: "OpEquipmentActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OpEquipmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilities", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilities_OpEquipmentCapabilities_OpEquipmentCapabilityTypeKey",
                        column: x => x.OpEquipmentCapabilityTypeKey,
                        principalTable: "OpEquipmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilities_EquipmentClassID",
                columns: table => new
                {
                    OpEquipmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilities_EquipmentClassID", x => new { x.OpEquipmentCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilities_EquipmentClassID_OpEquipmentCapabilities_OpEquipmentCapabilityTypeKey",
                        column: x => x.OpEquipmentCapabilityTypeKey,
                        principalTable: "OpEquipmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilities_EquipmentID",
                columns: table => new
                {
                    OpEquipmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilities_EquipmentID", x => new { x.OpEquipmentCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilities_EquipmentID_OpEquipmentCapabilities_OpEquipmentCapabilityTypeKey",
                        column: x => x.OpEquipmentCapabilityTypeKey,
                        principalTable: "OpEquipmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilities_Quantity",
                columns: table => new
                {
                    OpEquipmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilities_Quantity", x => new { x.OpEquipmentCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilities_Quantity_OpEquipmentCapabilities_OpEquipmentCapabilityTypeKey",
                        column: x => x.OpEquipmentCapabilityTypeKey,
                        principalTable: "OpEquipmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilityProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpEquipmentCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpEquipmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilityProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilityProperties_OpEquipmentCapabilities_OpEquipmentCapabilityTypeKey",
                        column: x => x.OpEquipmentCapabilityTypeKey,
                        principalTable: "OpEquipmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilityProperties_OpEquipmentCapabilityProperties_OpEquipmentCapabilityPropertyTypeKey",
                        column: x => x.OpEquipmentCapabilityPropertyTypeKey,
                        principalTable: "OpEquipmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilityProperties_Quantity",
                columns: table => new
                {
                    OpEquipmentCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilityProperties_Quantity", x => new { x.OpEquipmentCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilityProperties_Quantity_OpEquipmentCapabilityProperties_OpEquipmentCapabilityPropertyTypeKey",
                        column: x => x.OpEquipmentCapabilityPropertyTypeKey,
                        principalTable: "OpEquipmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentCapabilityProperties_Value",
                columns: table => new
                {
                    OpEquipmentCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentCapabilityProperties_Value", x => new { x.OpEquipmentCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentCapabilityProperties_Value_OpEquipmentCapabilityProperties_OpEquipmentCapabilityPropertyTypeKey",
                        column: x => x.OpEquipmentCapabilityPropertyTypeKey,
                        principalTable: "OpEquipmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirements",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevelKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpEquipmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirements", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirements_JobOrders_JobOrderTypeKey",
                        column: x => x.JobOrderTypeKey,
                        principalTable: "JobOrders",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirements_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                        column: x => x.OpEquipmentRequirementTypeKey,
                        principalTable: "OpEquipmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirementProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpEquipmentRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpEquipmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirementProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirementProperties_OpEquipmentRequirementProperties_OpEquipmentRequirementPropertyTypeKey",
                        column: x => x.OpEquipmentRequirementPropertyTypeKey,
                        principalTable: "OpEquipmentRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirementProperties_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                        column: x => x.OpEquipmentRequirementTypeKey,
                        principalTable: "OpEquipmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirements_EquipmentClassID",
                columns: table => new
                {
                    OpEquipmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirements_EquipmentClassID", x => new { x.OpEquipmentRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirements_EquipmentClassID_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                        column: x => x.OpEquipmentRequirementTypeKey,
                        principalTable: "OpEquipmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirements_EquipmentID",
                columns: table => new
                {
                    OpEquipmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirements_EquipmentID", x => new { x.OpEquipmentRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirements_EquipmentID_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                        column: x => x.OpEquipmentRequirementTypeKey,
                        principalTable: "OpEquipmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirements_Quantity",
                columns: table => new
                {
                    OpEquipmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirements_Quantity", x => new { x.OpEquipmentRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirements_Quantity_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                        column: x => x.OpEquipmentRequirementTypeKey,
                        principalTable: "OpEquipmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirements_TestSpecificationID",
                columns: table => new
                {
                    OpEquipmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirements_TestSpecificationID", x => new { x.OpEquipmentRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirements_TestSpecificationID_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                        column: x => x.OpEquipmentRequirementTypeKey,
                        principalTable: "OpEquipmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirementProperties_Quantity",
                columns: table => new
                {
                    OpEquipmentRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirementProperties_Quantity", x => new { x.OpEquipmentRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirementProperties_Quantity_OpEquipmentRequirementProperties_OpEquipmentRequirementPropertyTypeKey",
                        column: x => x.OpEquipmentRequirementPropertyTypeKey,
                        principalTable: "OpEquipmentRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentRequirementProperties_Value",
                columns: table => new
                {
                    OpEquipmentRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentRequirementProperties_Value", x => new { x.OpEquipmentRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentRequirementProperties_Value_OpEquipmentRequirementProperties_OpEquipmentRequirementPropertyTypeKey",
                        column: x => x.OpEquipmentRequirementPropertyTypeKey,
                        principalTable: "OpEquipmentRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpEquipmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecifications_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                        column: x => x.OpEquipmentSpecificationTypeKey,
                        principalTable: "OpEquipmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpEquipmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpEquipmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecificationProperties_OpEquipmentSpecificationProperties_OpEquipmentSpecificationPropertyTypeKey",
                        column: x => x.OpEquipmentSpecificationPropertyTypeKey,
                        principalTable: "OpEquipmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecificationProperties_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                        column: x => x.OpEquipmentSpecificationTypeKey,
                        principalTable: "OpEquipmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecifications_EquipmentClassID",
                columns: table => new
                {
                    OpEquipmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecifications_EquipmentClassID", x => new { x.OpEquipmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecifications_EquipmentClassID_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                        column: x => x.OpEquipmentSpecificationTypeKey,
                        principalTable: "OpEquipmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecifications_EquipmentID",
                columns: table => new
                {
                    OpEquipmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecifications_EquipmentID", x => new { x.OpEquipmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecifications_EquipmentID_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                        column: x => x.OpEquipmentSpecificationTypeKey,
                        principalTable: "OpEquipmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecifications_Quantity",
                columns: table => new
                {
                    OpEquipmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecifications_Quantity", x => new { x.OpEquipmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecifications_Quantity_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                        column: x => x.OpEquipmentSpecificationTypeKey,
                        principalTable: "OpEquipmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecifications_TestSpecificationID",
                columns: table => new
                {
                    OpEquipmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecifications_TestSpecificationID", x => new { x.OpEquipmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecifications_TestSpecificationID_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                        column: x => x.OpEquipmentSpecificationTypeKey,
                        principalTable: "OpEquipmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecificationProperties_Quantity",
                columns: table => new
                {
                    OpEquipmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecificationProperties_Quantity", x => new { x.OpEquipmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecificationProperties_Quantity_OpEquipmentSpecificationProperties_OpEquipmentSpecificationPropertyTypeKey",
                        column: x => x.OpEquipmentSpecificationPropertyTypeKey,
                        principalTable: "OpEquipmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpEquipmentSpecificationProperties_Value",
                columns: table => new
                {
                    OpEquipmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpEquipmentSpecificationProperties_Value", x => new { x.OpEquipmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpEquipmentSpecificationProperties_Value_OpEquipmentSpecificationProperties_OpEquipmentSpecificationPropertyTypeKey",
                        column: x => x.OpEquipmentSpecificationPropertyTypeKey,
                        principalTable: "OpEquipmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationClasses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationalLocationClassChildKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationClasses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationalLocationClasses_OperationalLocationClasses_OperationalLocationClassChildKey",
                        column: x => x.OperationalLocationClassChildKey,
                        principalTable: "OperationalLocationClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationClasses_OperationalLocationClassBaseID",
                columns: table => new
                {
                    OperationalLocationClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationClasses_OperationalLocationClassBaseID", x => new { x.OperationalLocationClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationalLocationClasses_OperationalLocationClassBaseID_OperationalLocationClasses_OperationalLocationClassTypeKey",
                        column: x => x.OperationalLocationClassTypeKey,
                        principalTable: "OperationalLocationClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationClasses_OperationalLocationSourceID",
                columns: table => new
                {
                    OperationalLocationClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationClasses_OperationalLocationSourceID", x => new { x.OperationalLocationClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationalLocationClasses_OperationalLocationSourceID_OperationalLocationClasses_OperationalLocationClassTypeKey",
                        column: x => x.OperationalLocationClassTypeKey,
                        principalTable: "OperationalLocationClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationClassProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocationClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationalLocationClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationClassProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationalLocationClassProperties_OperationalLocationClasses_OperationalLocationClassTypeKey",
                        column: x => x.OperationalLocationClassTypeKey,
                        principalTable: "OperationalLocationClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OperationalLocationClassProperties_OperationalLocationClassProperties_OperationalLocationClassPropertyTypeKey",
                        column: x => x.OperationalLocationClassPropertyTypeKey,
                        principalTable: "OperationalLocationClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationClassProperties_Value",
                columns: table => new
                {
                    OperationalLocationClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationClassProperties_Value", x => new { x.OperationalLocationClassPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationalLocationClassProperties_Value_OperationalLocationClassProperties_OperationalLocationClassPropertyTypeKey",
                        column: x => x.OperationalLocationClassPropertyTypeKey,
                        principalTable: "OperationalLocationClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocations",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocations", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationalLocations_OperationalLocations_OperationalLocationTypeKey",
                        column: x => x.OperationalLocationTypeKey,
                        principalTable: "OperationalLocations",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationalLocationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationalLocationProperties_OperationalLocationProperties_OperationalLocationPropertyTypeKey",
                        column: x => x.OperationalLocationPropertyTypeKey,
                        principalTable: "OperationalLocationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OperationalLocationProperties_OperationalLocations_OperationalLocationTypeKey",
                        column: x => x.OperationalLocationTypeKey,
                        principalTable: "OperationalLocations",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationalLocationProperties_Value",
                columns: table => new
                {
                    OperationalLocationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationalLocationProperties_Value", x => new { x.OperationalLocationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationalLocationProperties_Value_OperationalLocationProperties_OperationalLocationPropertyTypeKey",
                        column: x => x.OperationalLocationPropertyTypeKey,
                        principalTable: "OperationalLocationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsCapabilities", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "OpOperationsSegmentCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationsSegmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpOperationsSegmentCapabilities", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpOperationsSegmentCapabilities_OperationsCapabilities_OperationsCapabilityTypeKey",
                        column: x => x.OperationsCapabilityTypeKey,
                        principalTable: "OperationsCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                        column: x => x.OpOperationsSegmentCapabilityTypeKey,
                        principalTable: "OpOperationsSegmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpProcessSegmentCapabilityProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpProcessSegmentCapabilityProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpProcessSegmentCapabilityProperties_OperationsCapabilities_OperationsCapabilityTypeKey",
                        column: x => x.OperationsCapabilityTypeKey,
                        principalTable: "OperationsCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpOperationsSegmentCapabilities_Reason",
                columns: table => new
                {
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpOperationsSegmentCapabilities_Reason", x => new { x.OpOperationsSegmentCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpOperationsSegmentCapabilities_Reason_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                        column: x => x.OpOperationsSegmentCapabilityTypeKey,
                        principalTable: "OpOperationsSegmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpProcessSegmentCapabilityProperties_ProcessSegmentID",
                columns: table => new
                {
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpProcessSegmentCapabilityProperties_ProcessSegmentID", x => new { x.OpProcessSegmentCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpProcessSegmentCapabilityProperties_ProcessSegmentID_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpProcessSegmentCapabilityProperties_Reason",
                columns: table => new
                {
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpProcessSegmentCapabilityProperties_Reason", x => new { x.OpProcessSegmentCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpProcessSegmentCapabilityProperties_Reason_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsDefinitions",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsDefinitions", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "OperationsDefinitions_BillOfMaterialsID",
                columns: table => new
                {
                    OperationsDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsDefinitions_BillOfMaterialsID", x => new { x.OperationsDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsDefinitions_BillOfMaterialsID_OperationsDefinitions_OperationsDefinitionTypeKey",
                        column: x => x.OperationsDefinitionTypeKey,
                        principalTable: "OperationsDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsDefinitions_BillOfResourcesID",
                columns: table => new
                {
                    OperationsDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsDefinitions_BillOfResourcesID", x => new { x.OperationsDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsDefinitions_BillOfResourcesID_OperationsDefinitions_OperationsDefinitionTypeKey",
                        column: x => x.OperationsDefinitionTypeKey,
                        principalTable: "OperationsDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsDefinitions_OperationsMaterialBillID",
                columns: table => new
                {
                    OperationsDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsDefinitions_OperationsMaterialBillID", x => new { x.OperationsDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsDefinitions_OperationsMaterialBillID_OperationsDefinitions_OperationsDefinitionTypeKey",
                        column: x => x.OperationsDefinitionTypeKey,
                        principalTable: "OperationsDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsDefinitions_WorkMasterSourceID",
                columns: table => new
                {
                    OperationsDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsDefinitions_WorkMasterSourceID", x => new { x.OperationsDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsDefinitions_WorkMasterSourceID_OperationsDefinitions_OperationsDefinitionTypeKey",
                        column: x => x.OperationsDefinitionTypeKey,
                        principalTable: "OperationsDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    Extension_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Extension_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OperationsEventClasses_OperationsEventClassTypeKey",
                        column: x => x.OperationsEventClassTypeKey,
                        principalTable: "OperationsEventClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses_OperationsEventClassBaseID",
                columns: table => new
                {
                    OperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses_OperationsEventClassBaseID", x => new { x.OperationsEventClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OperationsEventClassBaseID_OperationsEventClasses_OperationsEventClassTypeKey",
                        column: x => x.OperationsEventClassTypeKey,
                        principalTable: "OperationsEventClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses_OperationsEventDefinitionSourceID",
                columns: table => new
                {
                    OperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses_OperationsEventDefinitionSourceID", x => new { x.OperationsEventClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OperationsEventDefinitionSourceID_OperationsEventClasses_OperationsEventClassTypeKey",
                        column: x => x.OperationsEventClassTypeKey,
                        principalTable: "OperationsEventClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification",
                columns: table => new
                {
                    OperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses_OpsEventClassRecordSpecification", x => new { x.OperationsEventClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OpsEventClassRecordSpecification_OperationsEventClasses_OperationsEventClassTypeKey",
                        column: x => x.OperationsEventClassTypeKey,
                        principalTable: "OperationsEventClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification_ActionMultiplicity",
                columns: table => new
                {
                    OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordSpecTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses_OpsEventClassRecordSpecification_ActionMultiplicity", x => new { x.OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey, x.OperationsRecordSpecTemplateTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OpsEventClassRecordSpecification_ActionMultiplicity_OperationsEventClasses_OpsEventClassRecordSpecifi~",
                        columns: x => new { x.OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey, x.OperationsRecordSpecTemplateTypeId },
                        principalTable: "OperationsEventClasses_OpsEventClassRecordSpecification",
                        principalColumns: new[] { "OperationsEventClassTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectType",
                columns: table => new
                {
                    OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordSpecTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectType", x => new { x.OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey, x.OperationsRecordSpecTemplateTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectType_OperationsEventClasses_OpsEventClassRecordSpec~",
                        columns: x => new { x.OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey, x.OperationsRecordSpecTemplateTypeId },
                        principalTable: "OperationsEventClasses_OpsEventClassRecordSpecification",
                        principalColumns: new[] { "OperationsEventClassTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectTypeMultiplicity",
                columns: table => new
                {
                    OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordSpecTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectTypeMultiplicity", x => new { x.OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey, x.OperationsRecordSpecTemplateTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectTypeMultiplicity_OperationsEventClasses_OpsEventCla~",
                        columns: x => new { x.OperationsRecordSpecTemplateTypeOperationsEventClassTypeKey, x.OperationsRecordSpecTemplateTypeId },
                        principalTable: "OperationsEventClasses_OpsEventClassRecordSpecification",
                        principalColumns: new[] { "OperationsEventClassTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    Priority_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_Value = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    OperationsEventType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClassProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsEventClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClassProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsEventClassProperties_OperationsEventClasses_OperationsEventClassTypeKey",
                        column: x => x.OperationsEventClassTypeKey,
                        principalTable: "OperationsEventClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OperationsEventClassProperties_OperationsEventClassProperties_OperationsEventClassPropertyTypeKey",
                        column: x => x.OperationsEventClassPropertyTypeKey,
                        principalTable: "OperationsEventClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OperationsEventClassProperties_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_Acknowledgement",
                columns: table => new
                {
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_Acknowledgement", x => new { x.OperationsEventDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_Acknowledgement_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_Category",
                columns: table => new
                {
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_Category", x => new { x.OperationsEventDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_Category_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_OperationsEventClassID",
                columns: table => new
                {
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_OperationsEventClassID", x => new { x.OperationsEventDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_OperationsEventClassID_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_Source",
                columns: table => new
                {
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_Source", x => new { x.OperationsEventDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_Source_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventClassProperties_Value",
                columns: table => new
                {
                    OperationsEventClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventClassProperties_Value", x => new { x.OperationsEventClassPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventClassProperties_Value_OperationsEventClassProperties_OperationsEventClassPropertyTypeKey",
                        column: x => x.OperationsEventClassPropertyTypeKey,
                        principalTable: "OperationsEventClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification",
                columns: table => new
                {
                    OperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification", x => new { x.OperationsEventDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                        column: x => x.OperationsEventDefinitionTypeKey,
                        principalTable: "OperationsEventDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_ActionMultiplicity",
                columns: table => new
                {
                    OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordSpecTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_ActionMultiplicity", x => new { x.OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey, x.OperationsRecordSpecTemplateTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_ActionMultiplicity_OperationsEventDefinitions_OpsEventDefin~",
                        columns: x => new { x.OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey, x.OperationsRecordSpecTemplateTypeId },
                        principalTable: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification",
                        principalColumns: new[] { "OperationsEventDefinitionTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectType",
                columns: table => new
                {
                    OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordSpecTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectType", x => new { x.OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey, x.OperationsRecordSpecTemplateTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectType_OperationsEventDefinitions_OpsEventDe~",
                        columns: x => new { x.OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey, x.OperationsRecordSpecTemplateTypeId },
                        principalTable: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification",
                        principalColumns: new[] { "OperationsEventDefinitionTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectTypeMultiplicity",
                columns: table => new
                {
                    OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordSpecTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectTypeMultiplicity", x => new { x.OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey, x.OperationsRecordSpecTemplateTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectTypeMultiplicity_OperationsEventDefinition~",
                        columns: x => new { x.OperationsRecordSpecTemplateTypeOperationsEventDefinitionTypeKey, x.OperationsRecordSpecTemplateTypeId },
                        principalTable: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification",
                        principalColumns: new[] { "OperationsEventDefinitionTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEvents",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EffectiveTimeStamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveTimeStamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    RecordTimeStamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimeStamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Priority_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_Value = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    OperationsEventType1_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventType1_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventLevel_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MOMFunction_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EnterpriseFunction_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEvents", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsEvents_OperationsEvents_OperationsEventTypeKey",
                        column: x => x.OperationsEventTypeKey,
                        principalTable: "OperationsEvents",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEventProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEventProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsEventProperties_OperationsEvents_OperationsEventTypeKey",
                        column: x => x.OperationsEventTypeKey,
                        principalTable: "OperationsEvents",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEvents_Acknowledgement",
                columns: table => new
                {
                    OperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEvents_Acknowledgement", x => new { x.OperationsEventTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEvents_Acknowledgement_OperationsEvents_OperationsEventTypeKey",
                        column: x => x.OperationsEventTypeKey,
                        principalTable: "OperationsEvents",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEvents_Category",
                columns: table => new
                {
                    OperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEvents_Category", x => new { x.OperationsEventTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEvents_Category_OperationsEvents_OperationsEventTypeKey",
                        column: x => x.OperationsEventTypeKey,
                        principalTable: "OperationsEvents",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsEvents_Source",
                columns: table => new
                {
                    OperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsEvents_Source", x => new { x.OperationsEventTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsEvents_Source_OperationsEvents_OperationsEventTypeKey",
                        column: x => x.OperationsEventTypeKey,
                        principalTable: "OperationsEvents",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsMaterialBillItems",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    UseType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsMaterialBillItemTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsMaterialBillTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsMaterialBillItems", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsMaterialBillItems_OperationsMaterialBillItems_OperationsMaterialBillItemTypeKey",
                        column: x => x.OperationsMaterialBillItemTypeKey,
                        principalTable: "OperationsMaterialBillItems",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsMaterialBillItems_MaterialSpecificationID",
                columns: table => new
                {
                    OperationsMaterialBillItemTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsMaterialBillItems_MaterialSpecificationID", x => new { x.OperationsMaterialBillItemTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsMaterialBillItems_MaterialSpecificationID_OperationsMaterialBillItems_OperationsMaterialBillItemTypeKey",
                        column: x => x.OperationsMaterialBillItemTypeKey,
                        principalTable: "OperationsMaterialBillItems",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsMaterialBillItems_Quantity",
                columns: table => new
                {
                    OperationsMaterialBillItemTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsMaterialBillItems_Quantity", x => new { x.OperationsMaterialBillItemTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsMaterialBillItems_Quantity_OperationsMaterialBillItems_OperationsMaterialBillItemTypeKey",
                        column: x => x.OperationsMaterialBillItemTypeKey,
                        principalTable: "OperationsMaterialBillItems",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsMaterialBills",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    UseType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsMaterialBills", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "OperationsMaterialBills_BillOfMaterialsID",
                columns: table => new
                {
                    OperationsMaterialBillTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsMaterialBills_BillOfMaterialsID", x => new { x.OperationsMaterialBillTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsMaterialBills_BillOfMaterialsID_OperationsMaterialBills_OperationsMaterialBillTypeKey",
                        column: x => x.OperationsMaterialBillTypeKey,
                        principalTable: "OperationsMaterialBills",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsPerformances",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Endtime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Endtime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PerformanceState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsPerformances", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "OperationsRecordEntryTemplateType",
                columns: table => new
                {
                    OperationsRecordTemplateTypeOperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    OperationsRecordTemplateTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InformationObjectID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    InformationObjectType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsRecordEntryTemplateType", x => new { x.OperationsRecordTemplateTypeOperationsEventTypeKey, x.OperationsRecordTemplateTypeId, x.Id });
                });

            migrationBuilder.CreateTable(
                name: "OperationsRecordTemplateType",
                columns: table => new
                {
                    OperationsEventTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    Action_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRecordSpecificationID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsRecordTemplateType", x => new { x.OperationsEventTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsRecordTemplateType_OperationsEvents_OperationsEventTypeKey",
                        column: x => x.OperationsEventTypeKey,
                        principalTable: "OperationsEvents",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsRequests",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_Value = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    RequestState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsScheduleTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsRequests", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "OperationsResponses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsPerformanceTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsResponses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsResponses_OperationsPerformances_OperationsPerformanceTypeKey",
                        column: x => x.OperationsPerformanceTypeKey,
                        principalTable: "OperationsPerformances",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsResponses_OperationsDefinitionID",
                columns: table => new
                {
                    OperationsResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsResponses_OperationsDefinitionID", x => new { x.OperationsResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsResponses_OperationsDefinitionID_OperationsResponses_OperationsResponseTypeKey",
                        column: x => x.OperationsResponseTypeKey,
                        principalTable: "OperationsResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsResponses_OperationsRequestID",
                columns: table => new
                {
                    OperationsResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsResponses_OperationsRequestID", x => new { x.OperationsResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsResponses_OperationsRequestID_OperationsResponses_OperationsResponseTypeKey",
                        column: x => x.OperationsResponseTypeKey,
                        principalTable: "OperationsResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsResponses_OperationsSegmentID",
                columns: table => new
                {
                    OperationsResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsResponses_OperationsSegmentID", x => new { x.OperationsResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsResponses_OperationsSegmentID_OperationsResponses_OperationsResponseTypeKey",
                        column: x => x.OperationsResponseTypeKey,
                        principalTable: "OperationsResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsResponses_SegmentRequirementID",
                columns: table => new
                {
                    OperationsResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsResponses_SegmentRequirementID", x => new { x.OperationsResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsResponses_SegmentRequirementID_OperationsResponses_OperationsResponseTypeKey",
                        column: x => x.OperationsResponseTypeKey,
                        principalTable: "OperationsResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSchedules",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSchedules", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    Duration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OperationsSegments_OperationsDefinitions_OperationsDefinitionTypeKey",
                        column: x => x.OperationsDefinitionTypeKey,
                        principalTable: "OperationsDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OperationsSegments_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_BillOfMaterialsID",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_BillOfMaterialsID", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_BillOfMaterialsID_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_BillOfResourcesID",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_BillOfResourcesID", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_BillOfResourcesID_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_DependentOperationsSegmentID",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_DependentOperationsSegmentID", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_DependentOperationsSegmentID_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_OperationsMaterialBillID",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_OperationsMaterialBillID", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_OperationsMaterialBillID_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_ProcessSegmentID",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_ProcessSegmentID", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_ProcessSegmentID_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_WorkMasterSourceID",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_WorkMasterSourceID", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_WorkMasterSourceID_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_ParameterSpecification",
                columns: table => new
                {
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_ParameterSpecification", x => new { x.OperationsSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_ParameterSpecification_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_ParameterSpecification_ParameterSpecificationID",
                columns: table => new
                {
                    ParameterTypeOperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_ParameterSpecification_ParameterSpecificationID", x => new { x.ParameterTypeOperationsSegmentTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_ParameterSpecification_ParameterSpecificationID_OperationsSegments_ParameterSpecification_ParameterTypeOp~",
                        columns: x => new { x.ParameterTypeOperationsSegmentTypeKey, x.ParameterTypeId },
                        principalTable: "OperationsSegments_ParameterSpecification",
                        principalColumns: new[] { "OperationsSegmentTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_ParameterSpecification_ProcessSegmentParameterID",
                columns: table => new
                {
                    ParameterTypeOperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_ParameterSpecification_ProcessSegmentParameterID", x => new { x.ParameterTypeOperationsSegmentTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_ParameterSpecification_ProcessSegmentParameterID_OperationsSegments_ParameterSpecification_ParameterTypeO~",
                        columns: x => new { x.ParameterTypeOperationsSegmentTypeKey, x.ParameterTypeId },
                        principalTable: "OperationsSegments_ParameterSpecification",
                        principalColumns: new[] { "OperationsSegmentTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationsSegments_ParameterSpecification_Value",
                columns: table => new
                {
                    ParameterTypeOperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationsSegments_ParameterSpecification_Value", x => new { x.ParameterTypeOperationsSegmentTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OperationsSegments_ParameterSpecification_Value_OperationsSegments_ParameterSpecification_ParameterTypeOperationsSegmentType~",
                        columns: x => new { x.ParameterTypeOperationsSegmentTypeKey, x.ParameterTypeId },
                        principalTable: "OperationsSegments_ParameterSpecification",
                        principalColumns: new[] { "OperationsSegmentTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActuals",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActuals", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_JobResponses_JobResponseTypeKey",
                        column: x => x.JobResponseTypeKey,
                        principalTable: "JobResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActualProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpMaterialActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActualProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialActualProperties_OpMaterialActualProperties_OpMaterialActualPropertyTypeKey",
                        column: x => x.OpMaterialActualPropertyTypeKey,
                        principalTable: "OpMaterialActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialActualProperties_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActuals_MaterialClassID",
                columns: table => new
                {
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActuals_MaterialClassID", x => new { x.OpMaterialActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_MaterialClassID_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActuals_MaterialDefinitionID",
                columns: table => new
                {
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActuals_MaterialDefinitionID", x => new { x.OpMaterialActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_MaterialDefinitionID_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActuals_MaterialLotID",
                columns: table => new
                {
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActuals_MaterialLotID", x => new { x.OpMaterialActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_MaterialLotID_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActuals_MaterialSubLotID",
                columns: table => new
                {
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActuals_MaterialSubLotID", x => new { x.OpMaterialActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_MaterialSubLotID_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActuals_Quantity",
                columns: table => new
                {
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActuals_Quantity", x => new { x.OpMaterialActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActuals_Quantity_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActualProperties_Quantity",
                columns: table => new
                {
                    OpMaterialActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActualProperties_Quantity", x => new { x.OpMaterialActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActualProperties_Quantity_OpMaterialActualProperties_OpMaterialActualPropertyTypeKey",
                        column: x => x.OpMaterialActualPropertyTypeKey,
                        principalTable: "OpMaterialActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialActualProperties_Value",
                columns: table => new
                {
                    OpMaterialActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialActualProperties_Value", x => new { x.OpMaterialActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialActualProperties_Value_OpMaterialActualProperties_OpMaterialActualPropertyTypeKey",
                        column: x => x.OpMaterialActualPropertyTypeKey,
                        principalTable: "OpMaterialActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    MaterialUse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilities", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_OperationsCapabilities_OperationsCapabilityTypeKey",
                        column: x => x.OperationsCapabilityTypeKey,
                        principalTable: "OperationsCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                        column: x => x.OpOperationsSegmentCapabilityTypeKey,
                        principalTable: "OpOperationsSegmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilities_MaterialClassID",
                columns: table => new
                {
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilities_MaterialClassID", x => new { x.OpMaterialCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_MaterialClassID_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilities_MaterialDefinitionID",
                columns: table => new
                {
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilities_MaterialDefinitionID", x => new { x.OpMaterialCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_MaterialDefinitionID_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilities_MaterialLotID",
                columns: table => new
                {
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilities_MaterialLotID", x => new { x.OpMaterialCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_MaterialLotID_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilities_MaterialSubLotID",
                columns: table => new
                {
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilities_MaterialSubLotID", x => new { x.OpMaterialCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_MaterialSubLotID_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilities_Quantity",
                columns: table => new
                {
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilities_Quantity", x => new { x.OpMaterialCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilities_Quantity_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilityProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpMaterialCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilityProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilityProperties_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                        column: x => x.OpMaterialCapabilityTypeKey,
                        principalTable: "OpMaterialCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilityProperties_OpMaterialCapabilityProperties_OpMaterialCapabilityPropertyTypeKey",
                        column: x => x.OpMaterialCapabilityPropertyTypeKey,
                        principalTable: "OpMaterialCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilityProperties_Quantity",
                columns: table => new
                {
                    OpMaterialCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilityProperties_Quantity", x => new { x.OpMaterialCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilityProperties_Quantity_OpMaterialCapabilityProperties_OpMaterialCapabilityPropertyTypeKey",
                        column: x => x.OpMaterialCapabilityPropertyTypeKey,
                        principalTable: "OpMaterialCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialCapabilityProperties_Value",
                columns: table => new
                {
                    OpMaterialCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialCapabilityProperties_Value", x => new { x.OpMaterialCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialCapabilityProperties_Value_OpMaterialCapabilityProperties_OpMaterialCapabilityPropertyTypeKey",
                        column: x => x.OpMaterialCapabilityPropertyTypeKey,
                        principalTable: "OpMaterialCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_JobOrders_JobOrderTypeKey",
                        column: x => x.JobOrderTypeKey,
                        principalTable: "JobOrders",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirementProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpMaterialRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirementProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirementProperties_OpMaterialRequirementProperties_OpMaterialRequirementPropertyTypeKey",
                        column: x => x.OpMaterialRequirementPropertyTypeKey,
                        principalTable: "OpMaterialRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirementProperties_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements_MaterialClassID",
                columns: table => new
                {
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements_MaterialClassID", x => new { x.OpMaterialRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_MaterialClassID_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements_MaterialDefinitionID",
                columns: table => new
                {
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements_MaterialDefinitionID", x => new { x.OpMaterialRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_MaterialDefinitionID_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements_MaterialLotID",
                columns: table => new
                {
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements_MaterialLotID", x => new { x.OpMaterialRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_MaterialLotID_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements_MaterialSubLotID",
                columns: table => new
                {
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements_MaterialSubLotID", x => new { x.OpMaterialRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_MaterialSubLotID_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements_Quantity",
                columns: table => new
                {
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements_Quantity", x => new { x.OpMaterialRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_Quantity_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirements_TestSpecificationID",
                columns: table => new
                {
                    OpMaterialRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirements_TestSpecificationID", x => new { x.OpMaterialRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirements_TestSpecificationID_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                        column: x => x.OpMaterialRequirementTypeKey,
                        principalTable: "OpMaterialRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirementProperties_Quantity",
                columns: table => new
                {
                    OpMaterialRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirementProperties_Quantity", x => new { x.OpMaterialRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirementProperties_Quantity_OpMaterialRequirementProperties_OpMaterialRequirementPropertyTypeKey",
                        column: x => x.OpMaterialRequirementPropertyTypeKey,
                        principalTable: "OpMaterialRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialRequirementProperties_Value",
                columns: table => new
                {
                    OpMaterialRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialRequirementProperties_Value", x => new { x.OpMaterialRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialRequirementProperties_Value_OpMaterialRequirementProperties_OpMaterialRequirementPropertyTypeKey",
                        column: x => x.OpMaterialRequirementPropertyTypeKey,
                        principalTable: "OpMaterialRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    StorageLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StorageLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AssemblyRelationship_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaterialLotPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpMaterialSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecificationProperties_OpMaterialSpecificationProperties_OpMaterialSpecificationPropertyTypeKey",
                        column: x => x.OpMaterialSpecificationPropertyTypeKey,
                        principalTable: "OpMaterialSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecificationProperties_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications_MaterialClassID",
                columns: table => new
                {
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications_MaterialClassID", x => new { x.OpMaterialSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_MaterialClassID_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications_MaterialDefinitionID",
                columns: table => new
                {
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications_MaterialDefinitionID", x => new { x.OpMaterialSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_MaterialDefinitionID_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications_MaterialLotID",
                columns: table => new
                {
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications_MaterialLotID", x => new { x.OpMaterialSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_MaterialLotID_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications_MaterialSubLotID",
                columns: table => new
                {
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications_MaterialSubLotID", x => new { x.OpMaterialSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_MaterialSubLotID_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications_Quantity",
                columns: table => new
                {
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications_Quantity", x => new { x.OpMaterialSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_Quantity_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecifications_TestSpecificationID",
                columns: table => new
                {
                    OpMaterialSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecifications_TestSpecificationID", x => new { x.OpMaterialSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecifications_TestSpecificationID_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                        column: x => x.OpMaterialSpecificationTypeKey,
                        principalTable: "OpMaterialSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecificationProperties_Quantity",
                columns: table => new
                {
                    OpMaterialSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecificationProperties_Quantity", x => new { x.OpMaterialSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecificationProperties_Quantity_OpMaterialSpecificationProperties_OpMaterialSpecificationPropertyTypeKey",
                        column: x => x.OpMaterialSpecificationPropertyTypeKey,
                        principalTable: "OpMaterialSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpMaterialSpecificationProperties_Value",
                columns: table => new
                {
                    OpMaterialSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpMaterialSpecificationProperties_Value", x => new { x.OpMaterialSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpMaterialSpecificationProperties_Value_OpMaterialSpecificationProperties_OpMaterialSpecificationPropertyTypeKey",
                        column: x => x.OpMaterialSpecificationPropertyTypeKey,
                        principalTable: "OpMaterialSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActuals",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActuals", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelActuals_JobResponses_JobResponseTypeKey",
                        column: x => x.JobResponseTypeKey,
                        principalTable: "JobResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelActuals_OpPersonnelActuals_OpPersonnelActualTypeKey",
                        column: x => x.OpPersonnelActualTypeKey,
                        principalTable: "OpPersonnelActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActualProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPersonnelActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActualProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelActualProperties_OpPersonnelActualProperties_OpPersonnelActualPropertyTypeKey",
                        column: x => x.OpPersonnelActualPropertyTypeKey,
                        principalTable: "OpPersonnelActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelActualProperties_OpPersonnelActuals_OpPersonnelActualTypeKey",
                        column: x => x.OpPersonnelActualTypeKey,
                        principalTable: "OpPersonnelActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActuals_PersonID",
                columns: table => new
                {
                    OpPersonnelActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActuals_PersonID", x => new { x.OpPersonnelActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelActuals_PersonID_OpPersonnelActuals_OpPersonnelActualTypeKey",
                        column: x => x.OpPersonnelActualTypeKey,
                        principalTable: "OpPersonnelActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActuals_PersonnelClassID",
                columns: table => new
                {
                    OpPersonnelActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActuals_PersonnelClassID", x => new { x.OpPersonnelActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelActuals_PersonnelClassID_OpPersonnelActuals_OpPersonnelActualTypeKey",
                        column: x => x.OpPersonnelActualTypeKey,
                        principalTable: "OpPersonnelActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActuals_Quantity",
                columns: table => new
                {
                    OpPersonnelActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActuals_Quantity", x => new { x.OpPersonnelActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelActuals_Quantity_OpPersonnelActuals_OpPersonnelActualTypeKey",
                        column: x => x.OpPersonnelActualTypeKey,
                        principalTable: "OpPersonnelActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActualProperties_Quantity",
                columns: table => new
                {
                    OpPersonnelActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActualProperties_Quantity", x => new { x.OpPersonnelActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelActualProperties_Quantity_OpPersonnelActualProperties_OpPersonnelActualPropertyTypeKey",
                        column: x => x.OpPersonnelActualPropertyTypeKey,
                        principalTable: "OpPersonnelActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelActualProperties_Value",
                columns: table => new
                {
                    OpPersonnelActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelActualProperties_Value", x => new { x.OpPersonnelActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelActualProperties_Value_OpPersonnelActualProperties_OpPersonnelActualPropertyTypeKey",
                        column: x => x.OpPersonnelActualPropertyTypeKey,
                        principalTable: "OpPersonnelActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilities", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_OperationsCapabilities_OperationsCapabilityTypeKey",
                        column: x => x.OperationsCapabilityTypeKey,
                        principalTable: "OperationsCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                        column: x => x.OpOperationsSegmentCapabilityTypeKey,
                        principalTable: "OpOperationsSegmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_OpPersonnelCapabilities_OpPersonnelCapabilityTypeKey",
                        column: x => x.OpPersonnelCapabilityTypeKey,
                        principalTable: "OpPersonnelCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilities_PersonID",
                columns: table => new
                {
                    OpPersonnelCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilities_PersonID", x => new { x.OpPersonnelCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_PersonID_OpPersonnelCapabilities_OpPersonnelCapabilityTypeKey",
                        column: x => x.OpPersonnelCapabilityTypeKey,
                        principalTable: "OpPersonnelCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilities_PersonnelClassID",
                columns: table => new
                {
                    OpPersonnelCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilities_PersonnelClassID", x => new { x.OpPersonnelCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_PersonnelClassID_OpPersonnelCapabilities_OpPersonnelCapabilityTypeKey",
                        column: x => x.OpPersonnelCapabilityTypeKey,
                        principalTable: "OpPersonnelCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilities_Quantity",
                columns: table => new
                {
                    OpPersonnelCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilities_Quantity", x => new { x.OpPersonnelCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilities_Quantity_OpPersonnelCapabilities_OpPersonnelCapabilityTypeKey",
                        column: x => x.OpPersonnelCapabilityTypeKey,
                        principalTable: "OpPersonnelCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilityProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPersonnelCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilityProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilityProperties_OpPersonnelCapabilities_OpPersonnelCapabilityTypeKey",
                        column: x => x.OpPersonnelCapabilityTypeKey,
                        principalTable: "OpPersonnelCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilityProperties_OpPersonnelCapabilityProperties_OpPersonnelCapabilityPropertyTypeKey",
                        column: x => x.OpPersonnelCapabilityPropertyTypeKey,
                        principalTable: "OpPersonnelCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilityProperties_Quantity",
                columns: table => new
                {
                    OpPersonnelCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilityProperties_Quantity", x => new { x.OpPersonnelCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilityProperties_Quantity_OpPersonnelCapabilityProperties_OpPersonnelCapabilityPropertyTypeKey",
                        column: x => x.OpPersonnelCapabilityPropertyTypeKey,
                        principalTable: "OpPersonnelCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelCapabilityProperties_Value",
                columns: table => new
                {
                    OpPersonnelCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelCapabilityProperties_Value", x => new { x.OpPersonnelCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelCapabilityProperties_Value_OpPersonnelCapabilityProperties_OpPersonnelCapabilityPropertyTypeKey",
                        column: x => x.OpPersonnelCapabilityPropertyTypeKey,
                        principalTable: "OpPersonnelCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirements",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirements", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirements_JobOrders_JobOrderTypeKey",
                        column: x => x.JobOrderTypeKey,
                        principalTable: "JobOrders",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirements_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                        column: x => x.OpPersonnelRequirementTypeKey,
                        principalTable: "OpPersonnelRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirementProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPersonnelRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirementProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirementProperties_OpPersonnelRequirementProperties_OpPersonnelRequirementPropertyTypeKey",
                        column: x => x.OpPersonnelRequirementPropertyTypeKey,
                        principalTable: "OpPersonnelRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirementProperties_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                        column: x => x.OpPersonnelRequirementTypeKey,
                        principalTable: "OpPersonnelRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirements_PersonID",
                columns: table => new
                {
                    OpPersonnelRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirements_PersonID", x => new { x.OpPersonnelRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirements_PersonID_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                        column: x => x.OpPersonnelRequirementTypeKey,
                        principalTable: "OpPersonnelRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirements_PersonnelClassID",
                columns: table => new
                {
                    OpPersonnelRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirements_PersonnelClassID", x => new { x.OpPersonnelRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirements_PersonnelClassID_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                        column: x => x.OpPersonnelRequirementTypeKey,
                        principalTable: "OpPersonnelRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirements_Quantity",
                columns: table => new
                {
                    OpPersonnelRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirements_Quantity", x => new { x.OpPersonnelRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirements_Quantity_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                        column: x => x.OpPersonnelRequirementTypeKey,
                        principalTable: "OpPersonnelRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirements_TestSpecificationID",
                columns: table => new
                {
                    OpPersonnelRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirements_TestSpecificationID", x => new { x.OpPersonnelRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirements_TestSpecificationID_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                        column: x => x.OpPersonnelRequirementTypeKey,
                        principalTable: "OpPersonnelRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirementProperties_Quantity",
                columns: table => new
                {
                    OpPersonnelRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirementProperties_Quantity", x => new { x.OpPersonnelRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirementProperties_Quantity_OpPersonnelRequirementProperties_OpPersonnelRequirementPropertyTypeKey",
                        column: x => x.OpPersonnelRequirementPropertyTypeKey,
                        principalTable: "OpPersonnelRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelRequirementProperties_Value",
                columns: table => new
                {
                    OpPersonnelRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelRequirementProperties_Value", x => new { x.OpPersonnelRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelRequirementProperties_Value_OpPersonnelRequirementProperties_OpPersonnelRequirementPropertyTypeKey",
                        column: x => x.OpPersonnelRequirementPropertyTypeKey,
                        principalTable: "OpPersonnelRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPersonnelSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecifications_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecifications_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                        column: x => x.OpPersonnelSpecificationTypeKey,
                        principalTable: "OpPersonnelSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPersonnelSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecificationProperties_OpPersonnelSpecificationProperties_OpPersonnelSpecificationPropertyTypeKey",
                        column: x => x.OpPersonnelSpecificationPropertyTypeKey,
                        principalTable: "OpPersonnelSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecificationProperties_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                        column: x => x.OpPersonnelSpecificationTypeKey,
                        principalTable: "OpPersonnelSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecifications_PersonID",
                columns: table => new
                {
                    OpPersonnelSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecifications_PersonID", x => new { x.OpPersonnelSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecifications_PersonID_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                        column: x => x.OpPersonnelSpecificationTypeKey,
                        principalTable: "OpPersonnelSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecifications_PersonnelClassID",
                columns: table => new
                {
                    OpPersonnelSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecifications_PersonnelClassID", x => new { x.OpPersonnelSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecifications_PersonnelClassID_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                        column: x => x.OpPersonnelSpecificationTypeKey,
                        principalTable: "OpPersonnelSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecifications_Quantity",
                columns: table => new
                {
                    OpPersonnelSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecifications_Quantity", x => new { x.OpPersonnelSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecifications_Quantity_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                        column: x => x.OpPersonnelSpecificationTypeKey,
                        principalTable: "OpPersonnelSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecifications_TestSpecificationID",
                columns: table => new
                {
                    OpPersonnelSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecifications_TestSpecificationID", x => new { x.OpPersonnelSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecifications_TestSpecificationID_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                        column: x => x.OpPersonnelSpecificationTypeKey,
                        principalTable: "OpPersonnelSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecificationProperties_Quantity",
                columns: table => new
                {
                    OpPersonnelSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecificationProperties_Quantity", x => new { x.OpPersonnelSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecificationProperties_Quantity_OpPersonnelSpecificationProperties_OpPersonnelSpecificationPropertyTypeKey",
                        column: x => x.OpPersonnelSpecificationPropertyTypeKey,
                        principalTable: "OpPersonnelSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPersonnelSpecificationProperties_Value",
                columns: table => new
                {
                    OpPersonnelSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPersonnelSpecificationProperties_Value", x => new { x.OpPersonnelSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPersonnelSpecificationProperties_Value_OpPersonnelSpecificationProperties_OpPersonnelSpecificationPropertyTypeKey",
                        column: x => x.OpPersonnelSpecificationPropertyTypeKey,
                        principalTable: "OpPersonnelSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActuals",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActuals", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActuals_JobResponses_JobResponseTypeKey",
                        column: x => x.JobResponseTypeKey,
                        principalTable: "JobResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActuals_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                        column: x => x.OpPhysicalAssetActualTypeKey,
                        principalTable: "OpPhysicalAssetActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActualProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPhysicalAssetActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActualProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActualProperties_OpPhysicalAssetActualProperties_OpPhysicalAssetActualPropertyTypeKey",
                        column: x => x.OpPhysicalAssetActualPropertyTypeKey,
                        principalTable: "OpPhysicalAssetActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActualProperties_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                        column: x => x.OpPhysicalAssetActualTypeKey,
                        principalTable: "OpPhysicalAssetActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActuals_PhysicalAssetClassID",
                columns: table => new
                {
                    OpPhysicalAssetActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActuals_PhysicalAssetClassID", x => new { x.OpPhysicalAssetActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActuals_PhysicalAssetClassID_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                        column: x => x.OpPhysicalAssetActualTypeKey,
                        principalTable: "OpPhysicalAssetActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActuals_PhysicalAssetID",
                columns: table => new
                {
                    OpPhysicalAssetActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActuals_PhysicalAssetID", x => new { x.OpPhysicalAssetActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActuals_PhysicalAssetID_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                        column: x => x.OpPhysicalAssetActualTypeKey,
                        principalTable: "OpPhysicalAssetActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActuals_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActuals_Quantity", x => new { x.OpPhysicalAssetActualTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActuals_Quantity_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                        column: x => x.OpPhysicalAssetActualTypeKey,
                        principalTable: "OpPhysicalAssetActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActualProperties_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActualProperties_Quantity", x => new { x.OpPhysicalAssetActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActualProperties_Quantity_OpPhysicalAssetActualProperties_OpPhysicalAssetActualPropertyTypeKey",
                        column: x => x.OpPhysicalAssetActualPropertyTypeKey,
                        principalTable: "OpPhysicalAssetActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetActualProperties_Value",
                columns: table => new
                {
                    OpPhysicalAssetActualPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetActualProperties_Value", x => new { x.OpPhysicalAssetActualPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetActualProperties_Value_OpPhysicalAssetActualProperties_OpPhysicalAssetActualPropertyTypeKey",
                        column: x => x.OpPhysicalAssetActualPropertyTypeKey,
                        principalTable: "OpPhysicalAssetActualProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilities", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_OperationsCapabilities_OperationsCapabilityTypeKey",
                        column: x => x.OperationsCapabilityTypeKey,
                        principalTable: "OperationsCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                        column: x => x.OpOperationsSegmentCapabilityTypeKey,
                        principalTable: "OpOperationsSegmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilityTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityTypeKey,
                        principalTable: "OpPhysicalAssetCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilities_PhysicalAssetClassID",
                columns: table => new
                {
                    OpPhysicalAssetCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilities_PhysicalAssetClassID", x => new { x.OpPhysicalAssetCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_PhysicalAssetClassID_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilityTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityTypeKey,
                        principalTable: "OpPhysicalAssetCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilities_PhysicalAssetID",
                columns: table => new
                {
                    OpPhysicalAssetCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilities_PhysicalAssetID", x => new { x.OpPhysicalAssetCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_PhysicalAssetID_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilityTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityTypeKey,
                        principalTable: "OpPhysicalAssetCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilities_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilities_Quantity", x => new { x.OpPhysicalAssetCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilities_Quantity_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilityTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityTypeKey,
                        principalTable: "OpPhysicalAssetCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilityProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPhysicalAssetCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilityProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilityTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityTypeKey,
                        principalTable: "OpPhysicalAssetCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilityPropertyTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityPropertyTypeKey,
                        principalTable: "OpPhysicalAssetCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilityProperties_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilityProperties_Quantity", x => new { x.OpPhysicalAssetCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilityProperties_Quantity_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilityPropertyTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityPropertyTypeKey,
                        principalTable: "OpPhysicalAssetCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetCapabilityProperties_Value",
                columns: table => new
                {
                    OpPhysicalAssetCapabilityPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetCapabilityProperties_Value", x => new { x.OpPhysicalAssetCapabilityPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetCapabilityProperties_Value_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilityPropertyTypeKey",
                        column: x => x.OpPhysicalAssetCapabilityPropertyTypeKey,
                        principalTable: "OpPhysicalAssetCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirements",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevelKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirements", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirements_JobOrders_JobOrderTypeKey",
                        column: x => x.JobOrderTypeKey,
                        principalTable: "JobOrders",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirements_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                        column: x => x.OpPhysicalAssetRequirementTypeKey,
                        principalTable: "OpPhysicalAssetRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirementProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPhysicalAssetRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirementProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirementPropertyTypeKey",
                        column: x => x.OpPhysicalAssetRequirementPropertyTypeKey,
                        principalTable: "OpPhysicalAssetRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                        column: x => x.OpPhysicalAssetRequirementTypeKey,
                        principalTable: "OpPhysicalAssetRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirements_PhysicalAssetClassID",
                columns: table => new
                {
                    OpPhysicalAssetRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirements_PhysicalAssetClassID", x => new { x.OpPhysicalAssetRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirements_PhysicalAssetClassID_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                        column: x => x.OpPhysicalAssetRequirementTypeKey,
                        principalTable: "OpPhysicalAssetRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirements_PhysicalAssetID",
                columns: table => new
                {
                    OpPhysicalAssetRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirements_PhysicalAssetID", x => new { x.OpPhysicalAssetRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirements_PhysicalAssetID_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                        column: x => x.OpPhysicalAssetRequirementTypeKey,
                        principalTable: "OpPhysicalAssetRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirements_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirements_Quantity", x => new { x.OpPhysicalAssetRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirements_Quantity_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                        column: x => x.OpPhysicalAssetRequirementTypeKey,
                        principalTable: "OpPhysicalAssetRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirements_TestSpecificationID",
                columns: table => new
                {
                    OpPhysicalAssetRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirements_TestSpecificationID", x => new { x.OpPhysicalAssetRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirements_TestSpecificationID_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                        column: x => x.OpPhysicalAssetRequirementTypeKey,
                        principalTable: "OpPhysicalAssetRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirementProperties_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirementProperties_Quantity", x => new { x.OpPhysicalAssetRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirementProperties_Quantity_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirementPropertyTypeKey",
                        column: x => x.OpPhysicalAssetRequirementPropertyTypeKey,
                        principalTable: "OpPhysicalAssetRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetRequirementProperties_Value",
                columns: table => new
                {
                    OpPhysicalAssetRequirementPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetRequirementProperties_Value", x => new { x.OpPhysicalAssetRequirementPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetRequirementProperties_Value_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirementPropertyTypeKey",
                        column: x => x.OpPhysicalAssetRequirementPropertyTypeKey,
                        principalTable: "OpPhysicalAssetRequirementProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PhysicalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPhysicalAssetSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecifications_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationTypeKey,
                        principalTable: "OpPhysicalAssetSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpPhysicalAssetSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecificationPropertyTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationPropertyTypeKey,
                        principalTable: "OpPhysicalAssetSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationTypeKey,
                        principalTable: "OpPhysicalAssetSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecifications_PhysicalAssetClassID",
                columns: table => new
                {
                    OpPhysicalAssetSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecifications_PhysicalAssetClassID", x => new { x.OpPhysicalAssetSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecifications_PhysicalAssetClassID_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationTypeKey,
                        principalTable: "OpPhysicalAssetSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecifications_PhysicalAssetID",
                columns: table => new
                {
                    OpPhysicalAssetSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecifications_PhysicalAssetID", x => new { x.OpPhysicalAssetSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecifications_PhysicalAssetID_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationTypeKey,
                        principalTable: "OpPhysicalAssetSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecifications_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecifications_Quantity", x => new { x.OpPhysicalAssetSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecifications_Quantity_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationTypeKey,
                        principalTable: "OpPhysicalAssetSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecifications_TestSpecificationID",
                columns: table => new
                {
                    OpPhysicalAssetSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecifications_TestSpecificationID", x => new { x.OpPhysicalAssetSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecifications_TestSpecificationID_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                        column: x => x.OpPhysicalAssetSpecificationTypeKey,
                        principalTable: "OpPhysicalAssetSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecificationProperties_Quantity",
                columns: table => new
                {
                    OpPhysicalAssetSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecificationProperties_Quantity", x => new { x.OpPhysicalAssetSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecificationProperties_Quantity_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecificationPropertyT~",
                        column: x => x.OpPhysicalAssetSpecificationPropertyTypeKey,
                        principalTable: "OpPhysicalAssetSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpPhysicalAssetSpecificationProperties_Value",
                columns: table => new
                {
                    OpPhysicalAssetSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpPhysicalAssetSpecificationProperties_Value", x => new { x.OpPhysicalAssetSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpPhysicalAssetSpecificationProperties_Value_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecificationPropertyType~",
                        column: x => x.OpPhysicalAssetSpecificationPropertyTypeKey,
                        principalTable: "OpPhysicalAssetSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentDatas",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentDataTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentDatas", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpSegmentDatas_JobResponses_JobResponseTypeKey",
                        column: x => x.JobResponseTypeKey,
                        principalTable: "JobResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpSegmentDatas_OpSegmentDatas_OpSegmentDataTypeKey",
                        column: x => x.OpSegmentDataTypeKey,
                        principalTable: "OpSegmentDatas",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentDatas_Value",
                columns: table => new
                {
                    OpSegmentDataTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentDatas_Value", x => new { x.OpSegmentDataTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentDatas_Value_OpSegmentDatas_OpSegmentDataTypeKey",
                        column: x => x.OpSegmentDataTypeKey,
                        principalTable: "OpSegmentDatas",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentRequirements",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EarliestStartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EarliestStartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    LatestEndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LatestEndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Duration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsDefinitionID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsRequestTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentRequirements", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpSegmentRequirements_OperationsRequests_OperationsRequestTypeKey",
                        column: x => x.OperationsRequestTypeKey,
                        principalTable: "OperationsRequests",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpSegmentRequirements_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                        column: x => x.OpSegmentRequirementTypeKey,
                        principalTable: "OpSegmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentRequirements_SegmentParameter",
                columns: table => new
                {
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentRequirements_SegmentParameter", x => new { x.OpSegmentRequirementTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentRequirements_SegmentParameter_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                        column: x => x.OpSegmentRequirementTypeKey,
                        principalTable: "OpSegmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentRequirements_SegmentParameter_ParameterSpecificationID",
                columns: table => new
                {
                    ParameterTypeOpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentRequirements_SegmentParameter_ParameterSpecificationID", x => new { x.ParameterTypeOpSegmentRequirementTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentRequirements_SegmentParameter_ParameterSpecificationID_OpSegmentRequirements_SegmentParameter_ParameterTypeOpSegmen~",
                        columns: x => new { x.ParameterTypeOpSegmentRequirementTypeKey, x.ParameterTypeId },
                        principalTable: "OpSegmentRequirements_SegmentParameter",
                        principalColumns: new[] { "OpSegmentRequirementTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentRequirements_SegmentParameter_ProcessSegmentParameterID",
                columns: table => new
                {
                    ParameterTypeOpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentRequirements_SegmentParameter_ProcessSegmentParameterID", x => new { x.ParameterTypeOpSegmentRequirementTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentRequirements_SegmentParameter_ProcessSegmentParameterID_OpSegmentRequirements_SegmentParameter_ParameterTypeOpSegme~",
                        columns: x => new { x.ParameterTypeOpSegmentRequirementTypeKey, x.ParameterTypeId },
                        principalTable: "OpSegmentRequirements_SegmentParameter",
                        principalColumns: new[] { "OpSegmentRequirementTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentRequirements_SegmentParameter_Value",
                columns: table => new
                {
                    ParameterTypeOpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentRequirements_SegmentParameter_Value", x => new { x.ParameterTypeOpSegmentRequirementTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentRequirements_SegmentParameter_Value_OpSegmentRequirements_SegmentParameter_ParameterTypeOpSegmentRequirementTypeKey~",
                        columns: x => new { x.ParameterTypeOpSegmentRequirementTypeKey, x.ParameterTypeId },
                        principalTable: "OpSegmentRequirements_SegmentParameter",
                        principalColumns: new[] { "OpSegmentRequirementTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    PostingDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PostingDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ActualStartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ActualStartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ActualEndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ActualEndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpSegmentRequirementTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsRequestTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OperationsRequests_OperationsRequestTypeKey",
                        column: x => x.OperationsRequestTypeKey,
                        principalTable: "OperationsRequests",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OperationsResponses_OperationsResponseTypeKey",
                        column: x => x.OperationsResponseTypeKey,
                        principalTable: "OperationsResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                        column: x => x.OpSegmentRequirementTypeKey,
                        principalTable: "OpSegmentRequirements",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_JobResponseID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_JobResponseID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_JobResponseID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_OperationsDefinitionID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_OperationsDefinitionID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OperationsDefinitionID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_OperationsRequestID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_OperationsRequestID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OperationsRequestID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_OperationsSegmentID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_OperationsSegmentID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_OperationsSegmentID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_ProcessSegmentID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_ProcessSegmentID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_ProcessSegmentID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_SegmentRequirementID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_SegmentRequirementID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_SegmentRequirementID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OpSegmentResponses_WorkResponseID",
                columns: table => new
                {
                    OpSegmentResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OpSegmentResponses_WorkResponseID", x => new { x.OpSegmentResponseTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_OpSegmentResponses_WorkResponseID_OpSegmentResponses_OpSegmentResponseTypeKey",
                        column: x => x.OpSegmentResponseTypeKey,
                        principalTable: "OpSegmentResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Peoples",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PersonName_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonName_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Peoples", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "Peoples_PersonnelClassID",
                columns: table => new
                {
                    PersonTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Peoples_PersonnelClassID", x => new { x.PersonTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_Peoples_PersonnelClassID_Peoples_PersonTypeKey",
                        column: x => x.PersonTypeKey,
                        principalTable: "Peoples",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Peoples_TestSpecificationID",
                columns: table => new
                {
                    PersonTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Peoples_TestSpecificationID", x => new { x.PersonTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_Peoples_TestSpecificationID_Peoples_PersonTypeKey",
                        column: x => x.PersonTypeKey,
                        principalTable: "Peoples",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PeoplesProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PersonTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PeoplesProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PeoplesProperties_Peoples_PersonTypeKey",
                        column: x => x.PersonTypeKey,
                        principalTable: "Peoples",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PeoplesProperties_PeoplesProperties_PersonPropertyTypeKey",
                        column: x => x.PersonPropertyTypeKey,
                        principalTable: "PeoplesProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PeoplesProperties_Value",
                columns: table => new
                {
                    PersonPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PeoplesProperties_Value", x => new { x.PersonPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PeoplesProperties_Value_PeoplesProperties_PersonPropertyTypeKey",
                        column: x => x.PersonPropertyTypeKey,
                        principalTable: "PeoplesProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelClasses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelClasses", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelClasses_PersonnelClassBaseID",
                columns: table => new
                {
                    PersonnelClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelClasses_PersonnelClassBaseID", x => new { x.PersonnelClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelClasses_PersonnelClassBaseID_PersonnelClasses_PersonnelClassTypeKey",
                        column: x => x.PersonnelClassTypeKey,
                        principalTable: "PersonnelClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelClasses_PersonSourceID",
                columns: table => new
                {
                    PersonnelClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelClasses_PersonSourceID", x => new { x.PersonnelClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelClasses_PersonSourceID_PersonnelClasses_PersonnelClassTypeKey",
                        column: x => x.PersonnelClassTypeKey,
                        principalTable: "PersonnelClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelClasses_TestSpecificationID",
                columns: table => new
                {
                    PersonnelClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelClasses_TestSpecificationID", x => new { x.PersonnelClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelClasses_TestSpecificationID_PersonnelClasses_PersonnelClassTypeKey",
                        column: x => x.PersonnelClassTypeKey,
                        principalTable: "PersonnelClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelClassProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PersonnelClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelClassProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PersonnelClassProperties_PersonnelClasses_PersonnelClassTypeKey",
                        column: x => x.PersonnelClassTypeKey,
                        principalTable: "PersonnelClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PersonnelClassProperties_PersonnelClassProperties_PersonnelClassPropertyTypeKey",
                        column: x => x.PersonnelClassPropertyTypeKey,
                        principalTable: "PersonnelClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelClassProperties_Value",
                columns: table => new
                {
                    PersonnelClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelClassProperties_Value", x => new { x.PersonnelClassPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelClassProperties_Value_PersonnelClassProperties_PersonnelClassPropertyTypeKey",
                        column: x => x.PersonnelClassPropertyTypeKey,
                        principalTable: "PersonnelClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecifications_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                        column: x => x.PersonnelSegmentSpecificationTypeKey,
                        principalTable: "PersonnelSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PersonnelSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PersonnelSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecificationPropertyTypeKey",
                        column: x => x.PersonnelSegmentSpecificationPropertyTypeKey,
                        principalTable: "PersonnelSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                        column: x => x.PersonnelSegmentSpecificationTypeKey,
                        principalTable: "PersonnelSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecifications_PersonID",
                columns: table => new
                {
                    PersonnelSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecifications_PersonID", x => new { x.PersonnelSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecifications_PersonID_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                        column: x => x.PersonnelSegmentSpecificationTypeKey,
                        principalTable: "PersonnelSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecifications_PersonnelClassID",
                columns: table => new
                {
                    PersonnelSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecifications_PersonnelClassID", x => new { x.PersonnelSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecifications_PersonnelClassID_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                        column: x => x.PersonnelSegmentSpecificationTypeKey,
                        principalTable: "PersonnelSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecifications_Quantity",
                columns: table => new
                {
                    PersonnelSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecifications_Quantity", x => new { x.PersonnelSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecifications_Quantity_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                        column: x => x.PersonnelSegmentSpecificationTypeKey,
                        principalTable: "PersonnelSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecifications_TestSpecificationID",
                columns: table => new
                {
                    PersonnelSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecifications_TestSpecificationID", x => new { x.PersonnelSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecifications_TestSpecificationID_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                        column: x => x.PersonnelSegmentSpecificationTypeKey,
                        principalTable: "PersonnelSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecificationProperties_Quantity",
                columns: table => new
                {
                    PersonnelSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecificationProperties_Quantity", x => new { x.PersonnelSegmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecificationProperties_Quantity_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecificationProper~",
                        column: x => x.PersonnelSegmentSpecificationPropertyTypeKey,
                        principalTable: "PersonnelSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PersonnelSegmentSpecificationProperties_Value",
                columns: table => new
                {
                    PersonnelSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PersonnelSegmentSpecificationProperties_Value", x => new { x.PersonnelSegmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PersonnelSegmentSpecificationProperties_Value_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecificationPropertyT~",
                        column: x => x.PersonnelSegmentSpecificationPropertyTypeKey,
                        principalTable: "PersonnelSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClasses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PhysicalAssetClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClasses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClasses_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                        column: x => x.PhysicalAssetClassTypeKey,
                        principalTable: "PhysicalAssetClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClasses_Manufacturer",
                columns: table => new
                {
                    PhysicalAssetClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClasses_Manufacturer", x => new { x.PhysicalAssetClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClasses_Manufacturer_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                        column: x => x.PhysicalAssetClassTypeKey,
                        principalTable: "PhysicalAssetClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClasses_PhysicalAssetClassBaseID",
                columns: table => new
                {
                    PhysicalAssetClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClasses_PhysicalAssetClassBaseID", x => new { x.PhysicalAssetClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClasses_PhysicalAssetClassBaseID_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                        column: x => x.PhysicalAssetClassTypeKey,
                        principalTable: "PhysicalAssetClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClasses_PhysicalAssetSourceID",
                columns: table => new
                {
                    PhysicalAssetClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClasses_PhysicalAssetSourceID", x => new { x.PhysicalAssetClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClasses_PhysicalAssetSourceID_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                        column: x => x.PhysicalAssetClassTypeKey,
                        principalTable: "PhysicalAssetClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClasses_TestSpecificationID",
                columns: table => new
                {
                    PhysicalAssetClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClasses_TestSpecificationID", x => new { x.PhysicalAssetClassTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClasses_TestSpecificationID_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                        column: x => x.PhysicalAssetClassTypeKey,
                        principalTable: "PhysicalAssetClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClassProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PropertyType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PhysicalAssetClassTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClassProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClassProperties_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                        column: x => x.PhysicalAssetClassTypeKey,
                        principalTable: "PhysicalAssetClasses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClassProperties_PhysicalAssetClassProperties_PhysicalAssetClassPropertyTypeKey",
                        column: x => x.PhysicalAssetClassPropertyTypeKey,
                        principalTable: "PhysicalAssetClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetClassProperties_Value",
                columns: table => new
                {
                    PhysicalAssetClassPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetClassProperties_Value", x => new { x.PhysicalAssetClassPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetClassProperties_Value_PhysicalAssetClassProperties_PhysicalAssetClassPropertyTypeKey",
                        column: x => x.PhysicalAssetClassPropertyTypeKey,
                        principalTable: "PhysicalAssetClassProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssets",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    FixedAssetID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FixedAssetID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VendorID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentLevelKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PhysicalAssetTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssets", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PhysicalAssets_PhysicalAssets_PhysicalAssetTypeKey",
                        column: x => x.PhysicalAssetTypeKey,
                        principalTable: "PhysicalAssets",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PhysicalAssetTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetProperties_PhysicalAssetProperties_PhysicalAssetPropertyTypeKey",
                        column: x => x.PhysicalAssetPropertyTypeKey,
                        principalTable: "PhysicalAssetProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetProperties_PhysicalAssets_PhysicalAssetTypeKey",
                        column: x => x.PhysicalAssetTypeKey,
                        principalTable: "PhysicalAssets",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssets_PhysicalAssetClassID",
                columns: table => new
                {
                    PhysicalAssetTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssets_PhysicalAssetClassID", x => new { x.PhysicalAssetTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssets_PhysicalAssetClassID_PhysicalAssets_PhysicalAssetTypeKey",
                        column: x => x.PhysicalAssetTypeKey,
                        principalTable: "PhysicalAssets",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssets_TestSpecificationID",
                columns: table => new
                {
                    PhysicalAssetTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssets_TestSpecificationID", x => new { x.PhysicalAssetTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssets_TestSpecificationID_PhysicalAssets_PhysicalAssetTypeKey",
                        column: x => x.PhysicalAssetTypeKey,
                        principalTable: "PhysicalAssets",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetProperties_Value",
                columns: table => new
                {
                    PhysicalAssetPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetProperties_Value", x => new { x.PhysicalAssetPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetProperties_Value_PhysicalAssetProperties_PhysicalAssetPropertyTypeKey",
                        column: x => x.PhysicalAssetPropertyTypeKey,
                        principalTable: "PhysicalAssetProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssets_EquipmentAssetMapping",
                columns: table => new
                {
                    PhysicalAssetTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EquipmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssets_EquipmentAssetMapping", x => new { x.PhysicalAssetTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssets_EquipmentAssetMapping_PhysicalAssets_PhysicalAssetTypeKey",
                        column: x => x.PhysicalAssetTypeKey,
                        principalTable: "PhysicalAssets",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetUse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    SpatialDefinition_Value_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Value_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_Format_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpatialDefinition_SRIDAuthority_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_Location_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalLocation_LocationType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecificationTypeKey",
                        column: x => x.PhysicalAssetSegmentSpecificationTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetClassPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalAssetSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    PhysicalAssetSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecificationPro~",
                        column: x => x.PhysicalAssetSegmentSpecificationPropertyTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecificationTypeKey",
                        column: x => x.PhysicalAssetSegmentSpecificationTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecifications_PhysicalAssetClassID",
                columns: table => new
                {
                    PhysicalAssetSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecifications_PhysicalAssetClassID", x => new { x.PhysicalAssetSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecifications_PhysicalAssetClassID_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecification~",
                        column: x => x.PhysicalAssetSegmentSpecificationTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecifications_PhysicalAssetID",
                columns: table => new
                {
                    PhysicalAssetSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecifications_PhysicalAssetID", x => new { x.PhysicalAssetSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecifications_PhysicalAssetID_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecificationTypeK~",
                        column: x => x.PhysicalAssetSegmentSpecificationTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecifications_Quantity",
                columns: table => new
                {
                    PhysicalAssetSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecifications_Quantity", x => new { x.PhysicalAssetSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecifications_Quantity_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecificationTypeKey",
                        column: x => x.PhysicalAssetSegmentSpecificationTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecifications_TestSpecificationID",
                columns: table => new
                {
                    PhysicalAssetSegmentSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecifications_TestSpecificationID", x => new { x.PhysicalAssetSegmentSpecificationTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecifications_TestSpecificationID_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecificationT~",
                        column: x => x.PhysicalAssetSegmentSpecificationTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecificationProperties_Quantity",
                columns: table => new
                {
                    PhysicalAssetSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QuantityString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QuantityString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecificationProperties_Quantity", x => new { x.PhysicalAssetSegmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecificationProperties_Quantity_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecifi~",
                        column: x => x.PhysicalAssetSegmentSpecificationPropertyTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PhysicalAssetSegmentSpecificationProperties_Value",
                columns: table => new
                {
                    PhysicalAssetSegmentSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PhysicalAssetSegmentSpecificationProperties_Value", x => new { x.PhysicalAssetSegmentSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PhysicalAssetSegmentSpecificationProperties_Value_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecificat~",
                        column: x => x.PhysicalAssetSegmentSpecificationPropertyTypeKey,
                        principalTable: "PhysicalAssetSegmentSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ProcessSegments_ProcessSegments_ProcessSegmentTypeKey",
                        column: x => x.ProcessSegmentTypeKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_DependentProcessSegmentID",
                columns: table => new
                {
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_DependentProcessSegmentID", x => new { x.ProcessSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_DependentProcessSegmentID_ProcessSegments_ProcessSegmentTypeKey",
                        column: x => x.ProcessSegmentTypeKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_OperationsSegmentSourceID",
                columns: table => new
                {
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_OperationsSegmentSourceID", x => new { x.ProcessSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_OperationsSegmentSourceID_ProcessSegments_ProcessSegmentTypeKey",
                        column: x => x.ProcessSegmentTypeKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_SegmentRequirementSourceID",
                columns: table => new
                {
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_SegmentRequirementSourceID", x => new { x.ProcessSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_SegmentRequirementSourceID_ProcessSegments_ProcessSegmentTypeKey",
                        column: x => x.ProcessSegmentTypeKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_WorkMasterSourceID",
                columns: table => new
                {
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_WorkMasterSourceID", x => new { x.ProcessSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_WorkMasterSourceID_ProcessSegments_ProcessSegmentTypeKey",
                        column: x => x.ProcessSegmentTypeKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegmentTypeProductSegmentType",
                columns: table => new
                {
                    ProcessSgementsKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProductSegmentsKey = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegmentTypeProductSegmentType", x => new { x.ProcessSgementsKey, x.ProductSegmentsKey });
                    table.ForeignKey(
                        name: "FK_ProcessSegmentTypeProductSegmentType_ProcessSegments_ProcessSgementsKey",
                        column: x => x.ProcessSgementsKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ProcessSegmentTypeProductSegmentType_ProductSegments_ProductSegmentsKey",
                        column: x => x.ProductSegmentsKey,
                        principalTable: "ProductSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SegmentDependencies",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProcessSegmentKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ProcessSegment_AKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ProcessSegment_BKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SegmentDependencies", x => x.Key);
                    table.ForeignKey(
                        name: "FK_SegmentDependencies_OperationsSegments_OperationsSegmentTypeKey",
                        column: x => x.OperationsSegmentTypeKey,
                        principalTable: "OperationsSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_SegmentDependencies_ProcessSegments_ProcessSegment_AKey",
                        column: x => x.ProcessSegment_AKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_SegmentDependencies_ProcessSegments_ProcessSegment_BKey",
                        column: x => x.ProcessSegment_BKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_SegmentDependencies_ProcessSegments_ProcessSegmentKey",
                        column: x => x.ProcessSegmentKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_ProcessSegmentParameter",
                columns: table => new
                {
                    ProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_ProcessSegmentParameter", x => new { x.ProcessSegmentTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_ProcessSegmentParameter_ProcessSegments_ProcessSegmentTypeKey",
                        column: x => x.ProcessSegmentTypeKey,
                        principalTable: "ProcessSegments",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_ProcessSegmentParameter_ParameterSpecificationID",
                columns: table => new
                {
                    ParameterTypeProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_ProcessSegmentParameter_ParameterSpecificationID", x => new { x.ParameterTypeProcessSegmentTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_ProcessSegmentParameter_ParameterSpecificationID_ProcessSegments_ProcessSegmentParameter_ParameterTypeProces~",
                        columns: x => new { x.ParameterTypeProcessSegmentTypeKey, x.ParameterTypeId },
                        principalTable: "ProcessSegments_ProcessSegmentParameter",
                        principalColumns: new[] { "ProcessSegmentTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_ProcessSegmentParameter_ProcessSegmentParameterID",
                columns: table => new
                {
                    ParameterTypeProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_ProcessSegmentParameter_ProcessSegmentParameterID", x => new { x.ParameterTypeProcessSegmentTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_ProcessSegmentParameter_ProcessSegmentParameterID_ProcessSegments_ProcessSegmentParameter_ParameterTypeProce~",
                        columns: x => new { x.ParameterTypeProcessSegmentTypeKey, x.ParameterTypeId },
                        principalTable: "ProcessSegments_ProcessSegmentParameter",
                        principalColumns: new[] { "ProcessSegmentTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ProcessSegments_ProcessSegmentParameter_Value",
                columns: table => new
                {
                    ParameterTypeProcessSegmentTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessSegments_ProcessSegmentParameter_Value", x => new { x.ParameterTypeProcessSegmentTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_ProcessSegments_ProcessSegmentParameter_Value_ProcessSegments_ProcessSegmentParameter_ParameterTypeProcessSegmentTypeKey_Par~",
                        columns: x => new { x.ParameterTypeProcessSegmentTypeKey, x.ParameterTypeId },
                        principalTable: "ProcessSegments_ProcessSegmentParameter",
                        principalColumns: new[] { "ProcessSegmentTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnectionTypes",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ConnectionType_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConnectionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionSourceID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnectionTypes", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnectionTypeProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnectionTypeProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnectionTypeProperties_ResourceNetworkConnectionTypes_ResourceNetworkConnectionTypeTypeKey",
                        column: x => x.ResourceNetworkConnectionTypeTypeKey,
                        principalTable: "ResourceNetworkConnectionTypes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnectionTypeProperties_RNCTypePropertyChild",
                columns: table => new
                {
                    RNCTypePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnectionTypeProperties_RNCTypePropertyChild", x => new { x.RNCTypePropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnectionTypeProperties_RNCTypePropertyChild_ResourceNetworkConnectionTypeProperties_RNCTypePropertyTypeKey",
                        column: x => x.RNCTypePropertyTypeKey,
                        principalTable: "ResourceNetworkConnectionTypeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnectionTypeProperties_Value",
                columns: table => new
                {
                    RNCTypePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnectionTypeProperties_Value", x => new { x.RNCTypePropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnectionTypeProperties_Value_ResourceNetworkConnectionTypeProperties_RNCTypePropertyTypeKey",
                        column: x => x.RNCTypePropertyTypeKey,
                        principalTable: "ResourceNetworkConnectionTypeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ResourceRelationshipNetworks",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RelationshipType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RelationshipForm_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceRelationshipNetworks", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnections",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResourceNetworkConnectionTypeID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FromResourceReferenceKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ToResourceReferenceKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ResourceRelationshipNetworkTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnections", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnections_ResourceReferences_FromResourceReferenceKey",
                        column: x => x.FromResourceReferenceKey,
                        principalTable: "ResourceReferences",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnections_ResourceReferences_ToResourceReferenceKey",
                        column: x => x.ToResourceReferenceKey,
                        principalTable: "ResourceReferences",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnections_ResourceRelationshipNetworks_ResourceRelationshipNetworkTypeKey",
                        column: x => x.ResourceRelationshipNetworkTypeKey,
                        principalTable: "ResourceRelationshipNetworks",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ResourceRelationshipNetworkProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RRNPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ResourceRelationshipNetworkTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceRelationshipNetworkProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ResourceRelationshipNetworkProperties_ResourceRelationshipNetworkProperties_RRNPropertyTypeKey",
                        column: x => x.RRNPropertyTypeKey,
                        principalTable: "ResourceRelationshipNetworkProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ResourceRelationshipNetworkProperties_ResourceRelationshipNetworks_ResourceRelationshipNetworkTypeKey",
                        column: x => x.ResourceRelationshipNetworkTypeKey,
                        principalTable: "ResourceRelationshipNetworks",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnectionProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCTypePropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RNCPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    ResourceNetworkConnectionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnectionProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnectionProperties_ResourceNetworkConnectionProperties_RNCPropertyTypeKey",
                        column: x => x.RNCPropertyTypeKey,
                        principalTable: "ResourceNetworkConnectionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnectionProperties_ResourceNetworkConnections_ResourceNetworkConnectionTypeKey",
                        column: x => x.ResourceNetworkConnectionTypeKey,
                        principalTable: "ResourceNetworkConnections",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ResourceRelationshipNetworkProperties_Value",
                columns: table => new
                {
                    RRNPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceRelationshipNetworkProperties_Value", x => new { x.RRNPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ResourceRelationshipNetworkProperties_Value_ResourceRelationshipNetworkProperties_RRNPropertyTypeKey",
                        column: x => x.RRNPropertyTypeKey,
                        principalTable: "ResourceRelationshipNetworkProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ResourceNetworkConnectionProperties_Value",
                columns: table => new
                {
                    RNCPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceNetworkConnectionProperties_Value", x => new { x.RNCPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_ResourceNetworkConnectionProperties_Value_ResourceNetworkConnectionProperties_RNCPropertyTypeKey",
                        column: x => x.RNCPropertyTypeKey,
                        principalTable: "ResourceNetworkConnectionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SpecificationNodes",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypeID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkflowSpecificationKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpecificationNodes", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "SpecificationNodes_WorkDirectiveID",
                columns: table => new
                {
                    WorkflowSpecificationNodeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpecificationNodes_WorkDirectiveID", x => new { x.WorkflowSpecificationNodeTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_SpecificationNodes_WorkDirectiveID_SpecificationNodes_WorkflowSpecificationNodeTypeKey",
                        column: x => x.WorkflowSpecificationNodeTypeKey,
                        principalTable: "SpecificationNodes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SpecificationNodes_WorkMasterID",
                columns: table => new
                {
                    WorkflowSpecificationNodeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpecificationNodes_WorkMasterID", x => new { x.WorkflowSpecificationNodeTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_SpecificationNodes_WorkMasterID_SpecificationNodes_WorkflowSpecificationNodeTypeKey",
                        column: x => x.WorkflowSpecificationNodeTypeKey,
                        principalTable: "SpecificationNodes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationNodeProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkflowSpecificationNodeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationNodeProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationNodeProperties_SpecificationNodes_WorkflowSpecificationNodeTypeKey",
                        column: x => x.WorkflowSpecificationNodeTypeKey,
                        principalTable: "SpecificationNodes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationNodeProperties_WorkflowSpecificationNodeProperties_WorkflowSpecificationNodePropertyTypeKey",
                        column: x => x.WorkflowSpecificationNodePropertyTypeKey,
                        principalTable: "WorkflowSpecificationNodeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationNodeProperties_Value",
                columns: table => new
                {
                    WorkflowSpecificationNodePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationNodeProperties_Value", x => new { x.WorkflowSpecificationNodePropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationNodeProperties_Value_WorkflowSpecificationNodeProperties_WorkflowSpecificationNodePropertyTypeKey",
                        column: x => x.WorkflowSpecificationNodePropertyTypeKey,
                        principalTable: "WorkflowSpecificationNodeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SpecificationNodeTypes",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpecificationNodeTypes", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "SpecificationNodeTypes_WorkflowSpecificationNodeTypeBaseID",
                columns: table => new
                {
                    WorkflowSpecificationNodeTypeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpecificationNodeTypes_WorkflowSpecificationNodeTypeBaseID", x => new { x.WorkflowSpecificationNodeTypeTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_SpecificationNodeTypes_WorkflowSpecificationNodeTypeBaseID_SpecificationNodeTypes_WorkflowSpecificationNodeTypeTypeKey",
                        column: x => x.WorkflowSpecificationNodeTypeTypeKey,
                        principalTable: "SpecificationNodeTypes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationNodeTypeProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationNodeTypePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkflowSpecificationNodeTypeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationNodeTypeProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationNodeTypeProperties_SpecificationNodeTypes_WorkflowSpecificationNodeTypeTypeKey",
                        column: x => x.WorkflowSpecificationNodeTypeTypeKey,
                        principalTable: "SpecificationNodeTypes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationNodeTypeProperties_WorkflowSpecificationNodeTypeProperties_WorkflowSpecificationNodeTypePropertyTypeKey",
                        column: x => x.WorkflowSpecificationNodeTypePropertyTypeKey,
                        principalTable: "WorkflowSpecificationNodeTypeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationNodeTypeProperties_Value",
                columns: table => new
                {
                    WorkflowSpecificationNodeTypePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationNodeTypeProperties_Value", x => new { x.WorkflowSpecificationNodeTypePropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationNodeTypeProperties_Value_WorkflowSpecificationNodeTypeProperties_WorkflowSpecificationNodeTypePropertyT~",
                        column: x => x.WorkflowSpecificationNodeTypePropertyTypeKey,
                        principalTable: "WorkflowSpecificationNodeTypeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationResults",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EvaluationDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EvaluationDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Expiration_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Expiration_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    TestableObjectID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EvaluatedCriterionResult_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EvaluatedCriterionResult_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OpEquipmentActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpMaterialActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPersonnelActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpPhysicalAssetActualTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    TestResultTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationResults", x => x.Key);
                    table.ForeignKey(
                        name: "FK_TestSpecificationResults_OpEquipmentActuals_OpEquipmentActualTypeKey",
                        column: x => x.OpEquipmentActualTypeKey,
                        principalTable: "OpEquipmentActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_TestSpecificationResults_OpMaterialActuals_OpMaterialActualTypeKey",
                        column: x => x.OpMaterialActualTypeKey,
                        principalTable: "OpMaterialActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_TestSpecificationResults_OpPersonnelActuals_OpPersonnelActualTypeKey",
                        column: x => x.OpPersonnelActualTypeKey,
                        principalTable: "OpPersonnelActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_TestSpecificationResults_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                        column: x => x.OpPhysicalAssetActualTypeKey,
                        principalTable: "OpPhysicalAssetActuals",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_TestSpecificationResults_TestSpecificationResults_TestResultTypeKey",
                        column: x => x.TestResultTypeKey,
                        principalTable: "TestSpecificationResults",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "PropertyMeasurementType",
                columns: table => new
                {
                    TestResultTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MeasurementDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MeasurementDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Value_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Expiration_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Expiration_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    WorkDefinitionID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDefinitionID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PropertyMeasurementType", x => new { x.TestResultTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_PropertyMeasurementType_TestSpecificationResults_TestResultTypeKey",
                        column: x => x.TestResultTypeKey,
                        principalTable: "TestSpecificationResults",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PropertyMeasurementType_TestableObjectPropertyID",
                columns: table => new
                {
                    PropertyMeasurementTypeTestResultTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    PropertyMeasurementTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PropertyMeasurementType_TestableObjectPropertyID", x => new { x.PropertyMeasurementTypeTestResultTypeKey, x.PropertyMeasurementTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_PropertyMeasurementType_TestableObjectPropertyID_PropertyMeasurementType_PropertyMeasurementTypeTestResultTypeKey_PropertyMe~",
                        columns: x => new { x.PropertyMeasurementTypeTestResultTypeKey, x.PropertyMeasurementTypeId },
                        principalTable: "PropertyMeasurementType",
                        principalColumns: new[] { "TestResultTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    TestSampleSize_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSampleSize_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceQuantity_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTimeInterval = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PhysicalSampleRequired = table.Column<bool>(type: "bit", nullable: false),
                    PhysicalSampleRequiredSpecified = table.Column<bool>(type: "bit", nullable: false),
                    OperationsTestRequirementID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsTestRequirementID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestableObjectID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_TestSpecifications_TestSpecifications_TestSpecificationTypeKey",
                        column: x => x.TestSpecificationTypeKey,
                        principalTable: "TestSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationCriterias",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationCriterias", x => x.Key);
                    table.ForeignKey(
                        name: "FK_TestSpecificationCriterias_TestSpecifications_TestSpecificationTypeKey",
                        column: x => x.TestSpecificationTypeKey,
                        principalTable: "TestSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationEvaluatedProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationEvaluatedProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_TestSpecificationEvaluatedProperties_TestSpecifications_TestSpecificationTypeKey",
                        column: x => x.TestSpecificationTypeKey,
                        principalTable: "TestSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    TestSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_TestSpecificationProperties_TestSpecificationProperties_TestSpecificationPropertyTypeKey",
                        column: x => x.TestSpecificationPropertyTypeKey,
                        principalTable: "TestSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_TestSpecificationProperties_TestSpecifications_TestSpecificationTypeKey",
                        column: x => x.TestSpecificationTypeKey,
                        principalTable: "TestSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationCriterias_EvaluatedPropertyID",
                columns: table => new
                {
                    TestSpecificationCriteriaTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationCriterias_EvaluatedPropertyID", x => new { x.TestSpecificationCriteriaTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationCriterias_EvaluatedPropertyID_TestSpecificationCriterias_TestSpecificationCriteriaTypeKey",
                        column: x => x.TestSpecificationCriteriaTypeKey,
                        principalTable: "TestSpecificationCriterias",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationCriterias_Expression",
                columns: table => new
                {
                    TestSpecificationCriteriaTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationCriterias_Expression", x => new { x.TestSpecificationCriteriaTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationCriterias_Expression_TestSpecificationCriterias_TestSpecificationCriteriaTypeKey",
                        column: x => x.TestSpecificationCriteriaTypeKey,
                        principalTable: "TestSpecificationCriterias",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationCriterias_Result",
                columns: table => new
                {
                    TestSpecificationCriteriaTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationCriterias_Result", x => new { x.TestSpecificationCriteriaTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationCriterias_Result_TestSpecificationCriterias_TestSpecificationCriteriaTypeKey",
                        column: x => x.TestSpecificationCriteriaTypeKey,
                        principalTable: "TestSpecificationCriterias",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationCriterias_Sequence",
                columns: table => new
                {
                    TestSpecificationCriteriaTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<decimal>(type: "decimal(18,2)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationCriterias_Sequence", x => new { x.TestSpecificationCriteriaTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationCriterias_Sequence_TestSpecificationCriterias_TestSpecificationCriteriaTypeKey",
                        column: x => x.TestSpecificationCriteriaTypeKey,
                        principalTable: "TestSpecificationCriterias",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationEvaluatedProperties_TestableObjectPropertyID",
                columns: table => new
                {
                    TestSpecificationEvaluatedPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationEvaluatedProperties_TestableObjectPropertyID", x => new { x.TestSpecificationEvaluatedPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationEvaluatedProperties_TestableObjectPropertyID_TestSpecificationEvaluatedProperties_TestSpecificationEvaluate~",
                        column: x => x.TestSpecificationEvaluatedPropertyTypeKey,
                        principalTable: "TestSpecificationEvaluatedProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationEvaluatedProperties_TestSpecificationCriteriaID",
                columns: table => new
                {
                    TestSpecificationEvaluatedPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationEvaluatedProperties_TestSpecificationCriteriaID", x => new { x.TestSpecificationEvaluatedPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationEvaluatedProperties_TestSpecificationCriteriaID_TestSpecificationEvaluatedProperties_TestSpecificationEvalu~",
                        column: x => x.TestSpecificationEvaluatedPropertyTypeKey,
                        principalTable: "TestSpecificationEvaluatedProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationEvaluatedProperties_WorkDefinitionID",
                columns: table => new
                {
                    TestSpecificationEvaluatedPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationEvaluatedProperties_WorkDefinitionID", x => new { x.TestSpecificationEvaluatedPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationEvaluatedProperties_WorkDefinitionID_TestSpecificationEvaluatedProperties_TestSpecificationEvaluatedPropert~",
                        column: x => x.TestSpecificationEvaluatedPropertyTypeKey,
                        principalTable: "TestSpecificationEvaluatedProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSpecificationProperties_Value",
                columns: table => new
                {
                    TestSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSpecificationProperties_Value", x => new { x.TestSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_TestSpecificationProperties_Value_TestSpecificationProperties_TestSpecificationPropertyTypeKey",
                        column: x => x.TestSpecificationPropertyTypeKey,
                        principalTable: "TestSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertDefinitions",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertDefinitions", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertDefinitionProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertDefinitionProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkAlertDefinitionProperties_WorkAlertDefinitions_WorkAlertDefinitionTypeKey",
                        column: x => x.WorkAlertDefinitionTypeKey,
                        principalTable: "WorkAlertDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertDefinitions_Category",
                columns: table => new
                {
                    WorkAlertDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertDefinitions_Category", x => new { x.WorkAlertDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkAlertDefinitions_Category_WorkAlertDefinitions_WorkAlertDefinitionTypeKey",
                        column: x => x.WorkAlertDefinitionTypeKey,
                        principalTable: "WorkAlertDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertDefinitions_Priority",
                columns: table => new
                {
                    WorkAlertDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<decimal>(type: "decimal(18,2)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertDefinitions_Priority", x => new { x.WorkAlertDefinitionTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkAlertDefinitions_Priority_WorkAlertDefinitions_WorkAlertDefinitionTypeKey",
                        column: x => x.WorkAlertDefinitionTypeKey,
                        principalTable: "WorkAlertDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertDefinitionProperties_Value",
                columns: table => new
                {
                    WorkAlertDefinitionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertDefinitionProperties_Value", x => new { x.WorkAlertDefinitionPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkAlertDefinitionProperties_Value_WorkAlertDefinitionProperties_WorkAlertDefinitionPropertyTypeKey",
                        column: x => x.WorkAlertDefinitionPropertyTypeKey,
                        principalTable: "WorkAlertDefinitionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlerts",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MessageText_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MessageText_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    TimeStamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TimeStamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Priority_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_Value = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    Category_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Category_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlerts", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkAlertDefinitionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkAlertPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkAlertTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkAlertProperties_WorkAlertDefinitionProperties_WorkAlertDefinitionPropertyTypeKey",
                        column: x => x.WorkAlertDefinitionPropertyTypeKey,
                        principalTable: "WorkAlertDefinitionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkAlertProperties_WorkAlertProperties_WorkAlertPropertyTypeKey",
                        column: x => x.WorkAlertPropertyTypeKey,
                        principalTable: "WorkAlertProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkAlertProperties_WorkAlerts_WorkAlertTypeKey",
                        column: x => x.WorkAlertTypeKey,
                        principalTable: "WorkAlerts",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkAlertProperties_Value",
                columns: table => new
                {
                    WorkAlertPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkAlertProperties_Value", x => new { x.WorkAlertPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkAlertProperties_Value_WorkAlertProperties_WorkAlertPropertyTypeKey",
                        column: x => x.WorkAlertPropertyTypeKey,
                        principalTable: "WorkAlertProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarDefinitionEntries",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    RecurrenceTime_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecurrenceTime_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DurationRule_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefinitionEntryTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCalendarDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarDefinitionEntries", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionEntries_WorkCalendarDefinitionEntries_WorkCalendarDefinitionEntryTypeKey",
                        column: x => x.WorkCalendarDefinitionEntryTypeKey,
                        principalTable: "WorkCalendarDefinitionEntries",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarDefinitionEntryProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefinitionEntryPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCalendarDefinitionEntryTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarDefinitionEntryProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionEntryProperties_WorkCalendarDefinitionEntries_WorkCalendarDefinitionEntryTypeKey",
                        column: x => x.WorkCalendarDefinitionEntryTypeKey,
                        principalTable: "WorkCalendarDefinitionEntries",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionEntryProperties_WorkCalendarDefinitionEntryProperties_WorkCalendarDefinitionEntryPropertyTypeKey",
                        column: x => x.WorkCalendarDefinitionEntryPropertyTypeKey,
                        principalTable: "WorkCalendarDefinitionEntryProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarDefinitionEntryProperties_Value",
                columns: table => new
                {
                    WorkCalendarDefinitionEntryPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarDefinitionEntryProperties_Value", x => new { x.WorkCalendarDefinitionEntryPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionEntryProperties_Value_WorkCalendarDefinitionEntryProperties_WorkCalendarDefinitionEntryPropertyTypeKey",
                        column: x => x.WorkCalendarDefinitionEntryPropertyTypeKey,
                        principalTable: "WorkCalendarDefinitionEntryProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarDefinitions",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarDefinitions", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarDefinitionProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefinitionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCalendarDefinitionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarDefinitionProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionProperties_WorkCalendarDefinitionProperties_WorkCalendarDefinitionPropertyTypeKey",
                        column: x => x.WorkCalendarDefinitionPropertyTypeKey,
                        principalTable: "WorkCalendarDefinitionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionProperties_WorkCalendarDefinitions_WorkCalendarDefinitionTypeKey",
                        column: x => x.WorkCalendarDefinitionTypeKey,
                        principalTable: "WorkCalendarDefinitions",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarDefinitionProperties_Value",
                columns: table => new
                {
                    WorkCalendarDefinitionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarDefinitionProperties_Value", x => new { x.WorkCalendarDefinitionPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkCalendarDefinitionProperties_Value_WorkCalendarDefinitionProperties_WorkCalendarDefinitionPropertyTypeKey",
                        column: x => x.WorkCalendarDefinitionPropertyTypeKey,
                        principalTable: "WorkCalendarDefinitionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarEntries",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartDateTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartDateTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    FinishDateTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FinishDateTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    EntryType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EntryType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarEntryTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCalendarTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarEntries", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkCalendarEntries_WorkCalendarEntries_WorkCalendarEntryTypeKey",
                        column: x => x.WorkCalendarEntryTypeKey,
                        principalTable: "WorkCalendarEntries",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarEntryProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionEntryPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarEntryPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCalendarEntryTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarEntryProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkCalendarEntryProperties_WorkCalendarEntries_WorkCalendarEntryTypeKey",
                        column: x => x.WorkCalendarEntryTypeKey,
                        principalTable: "WorkCalendarEntries",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkCalendarEntryProperties_WorkCalendarEntryProperties_WorkCalendarEntryPropertyTypeKey",
                        column: x => x.WorkCalendarEntryPropertyTypeKey,
                        principalTable: "WorkCalendarEntryProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarEntryProperties_Value",
                columns: table => new
                {
                    WorkCalendarEntryPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarEntryProperties_Value", x => new { x.WorkCalendarEntryPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkCalendarEntryProperties_Value_WorkCalendarEntryProperties_WorkCalendarEntryPropertyTypeKey",
                        column: x => x.WorkCalendarEntryPropertyTypeKey,
                        principalTable: "WorkCalendarEntryProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendars",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendars", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarDefintionPropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCalendarPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkCalendarTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkCalendarProperties_WorkCalendarProperties_WorkCalendarPropertyTypeKey",
                        column: x => x.WorkCalendarPropertyTypeKey,
                        principalTable: "WorkCalendarProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkCalendarProperties_WorkCalendars_WorkCalendarTypeKey",
                        column: x => x.WorkCalendarTypeKey,
                        principalTable: "WorkCalendars",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkCalendarProperties_Value",
                columns: table => new
                {
                    WorkCalendarPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCalendarProperties_Value", x => new { x.WorkCalendarPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkCalendarProperties_Value_WorkCalendarProperties_WorkCalendarPropertyTypeKey",
                        column: x => x.WorkCalendarPropertyTypeKey,
                        principalTable: "WorkCalendarProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OperationsType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Reason_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfidenceFactor_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkCapabilities", x => x.Key);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasterCapabilities",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    WorkMasterID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CapabilityType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasterCapabilities", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkMasterCapabilities_WorkCapabilities_WorkCapabilityTypeKey",
                        column: x => x.WorkCapabilityTypeKey,
                        principalTable: "WorkCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkMasterCapabilities_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                        column: x => x.WorkMasterCapabilityTypeKey,
                        principalTable: "WorkMasterCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "HierarchyScopes",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    EquipmentID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EquipmentID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Item_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ItemElementName = table.Column<int>(type: "int", nullable: false),
                    HierarchyScopeChildKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpOperationsSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    OpProcessSegmentCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HierarchyScopes", x => x.Key);
                    table.ForeignKey(
                        name: "FK_HierarchyScopes_HierarchyScopes_HierarchyScopeChildKey",
                        column: x => x.HierarchyScopeChildKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_HierarchyScopes_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                        column: x => x.OpOperationsSegmentCapabilityTypeKey,
                        principalTable: "OpOperationsSegmentCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_HierarchyScopes_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                        column: x => x.OpProcessSegmentCapabilityTypeKey,
                        principalTable: "OpProcessSegmentCapabilityProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_HierarchyScopes_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                        column: x => x.WorkMasterCapabilityTypeKey,
                        principalTable: "WorkMasterCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasterCapabilities_Reason",
                columns: table => new
                {
                    WorkMasterCapabilityTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasterCapabilities_Reason", x => new { x.WorkMasterCapabilityTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasterCapabilities_Reason_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                        column: x => x.WorkMasterCapabilityTypeKey,
                        principalTable: "WorkMasterCapabilities",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnectionTypes",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    FromWSNodeMultiplicity_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FromWSNodeMultiplicity_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ToWSNodeMultiplicity_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ToWSNodeMultiplicity_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnectionTypes", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionTypes_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecifications",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecifications", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecifications_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkPerformances",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkPerformanceTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkPerformances", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkPerformances_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkPerformances_WorkPerformances_WorkPerformanceTypeKey",
                        column: x => x.WorkPerformanceTypeKey,
                        principalTable: "WorkPerformances",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecords",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    Action_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordSpecificationID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastChangedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastChangedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ChangeIndication = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Delimiter_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Delimiter_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Language_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordStatus_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecords", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkRecords_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkRecords_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkSchedules",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScheduleState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkScheduleTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkSchedules", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkSchedules_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkSchedules_WorkSchedules_WorkScheduleTypeKey",
                        column: x => x.WorkScheduleTypeKey,
                        principalTable: "WorkSchedules",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnectionTypeProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkflowSpecificationConnectionTypeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnectionTypeProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionTypeProperties_WorkflowSpecificationConnectionTypeProperties_WorkflowSpecificationConnectionT~",
                        column: x => x.WorkflowSpecificationConnectionTypePropertyTypeKey,
                        principalTable: "WorkflowSpecificationConnectionTypeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionTypeProperties_WorkflowSpecificationConnectionTypes_WorkflowSpecificationConnectionTypeTypeKey",
                        column: x => x.WorkflowSpecificationConnectionTypeTypeKey,
                        principalTable: "WorkflowSpecificationConnectionTypes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnectionTypes_WorkflowSpecificationConnectionTypeBaseID",
                columns: table => new
                {
                    WorkflowSpecificationConnectionTypeTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnectionTypes_WorkflowSpecificationConnectionTypeBaseID", x => new { x.WorkflowSpecificationConnectionTypeTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionTypes_WorkflowSpecificationConnectionTypeBaseID_WorkflowSpecificationConnectionTypes_Workflow~",
                        column: x => x.WorkflowSpecificationConnectionTypeTypeKey,
                        principalTable: "WorkflowSpecificationConnectionTypes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkDirectives",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Duration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkDirectives", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkDirectives_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkDirectives_WorkDirectives_WorkDirectiveTypeKey",
                        column: x => x.WorkDirectiveTypeKey,
                        principalTable: "WorkDirectives",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkDirectives_WorkflowSpecifications_WorkflowSpecificationKey",
                        column: x => x.WorkflowSpecificationKey,
                        principalTable: "WorkflowSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnections",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypeID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FromWSNodeID_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FromWSNodeID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ToWSNodeID_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ToWSNodeID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Dependency_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DependencyFactor_Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnections", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnections_WorkflowSpecifications_WorkflowSpecificationTypeKey",
                        column: x => x.WorkflowSpecificationTypeKey,
                        principalTable: "WorkflowSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkflowSpecificationTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationProperties_WorkflowSpecificationProperties_WorkflowSpecificationPropertyTypeKey",
                        column: x => x.WorkflowSpecificationPropertyTypeKey,
                        principalTable: "WorkflowSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationProperties_WorkflowSpecifications_WorkflowSpecificationTypeKey",
                        column: x => x.WorkflowSpecificationTypeKey,
                        principalTable: "WorkflowSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveStartDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveStartDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Duration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    JobOrderSourceID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkMasterPatternID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterPatternID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DefinitionType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkMasters_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkMasters_WorkflowSpecifications_WorkflowSpecificationKey",
                        column: x => x.WorkflowSpecificationKey,
                        principalTable: "WorkflowSpecifications",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkMasters_WorkMasters_WorkMasterTypeKey",
                        column: x => x.WorkMasterTypeKey,
                        principalTable: "WorkMasters",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkResponses",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublishedDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ResponseState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequiredByRequestedSegmentResponse_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkPerformanceTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkResponseTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkResponses", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkResponses_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkResponses_WorkPerformances_WorkPerformanceTypeKey",
                        column: x => x.WorkPerformanceTypeKey,
                        principalTable: "WorkPerformances",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkResponses_WorkResponses_WorkResponseTypeKey",
                        column: x => x.WorkResponseTypeKey,
                        principalTable: "WorkResponses",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecordEntries",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    InformationObjectID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ExternalReferenceID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RecordTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveTimestamp_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveTimestamp_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EffectiveEndDate_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectiveEndDate_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    InformationObjectType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InformationObjectType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRecordEntryTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecordEntries", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkRecordEntries_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkRecordEntries_WorkRecordEntries_WorkRecordEntryTypeKey",
                        column: x => x.WorkRecordEntryTypeKey,
                        principalTable: "WorkRecordEntries",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkRecordEntries_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecords_BatchID",
                columns: table => new
                {
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecords_BatchID", x => new { x.WorkRecordTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkRecords_BatchID_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecords_CampaignID",
                columns: table => new
                {
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecords_CampaignID", x => new { x.WorkRecordTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkRecords_CampaignID_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecords_EquipmentID",
                columns: table => new
                {
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecords_EquipmentID", x => new { x.WorkRecordTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkRecords_EquipmentID_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecords_MaterialDefinitionID",
                columns: table => new
                {
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecords_MaterialDefinitionID", x => new { x.WorkRecordTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkRecords_MaterialDefinitionID_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkRecords_MaterialLotID",
                columns: table => new
                {
                    WorkRecordTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRecords_MaterialLotID", x => new { x.WorkRecordTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkRecords_MaterialLotID_WorkRecords_WorkRecordTypeKey",
                        column: x => x.WorkRecordTypeKey,
                        principalTable: "WorkRecords",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkRequests",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Version_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    EndTime_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndTime_Value = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Priority_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Priority_Value = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    OperationsRequestID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OperationsRequestID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SegmentRequirementID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestState_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkRequestTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkScheduleTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkRequests", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkRequests_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkRequests_WorkRequests_WorkRequestTypeKey",
                        column: x => x.WorkRequestTypeKey,
                        principalTable: "WorkRequests",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkRequests_WorkSchedules_WorkScheduleTypeKey",
                        column: x => x.WorkScheduleTypeKey,
                        principalTable: "WorkSchedules",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnectionTypeProperties_Value",
                columns: table => new
                {
                    WorkflowSpecificationConnectionTypePropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnectionTypeProperties_Value", x => new { x.WorkflowSpecificationConnectionTypePropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionTypeProperties_Value_WorkflowSpecificationConnectionTypeProperties_WorkflowSpecificationConne~",
                        column: x => x.WorkflowSpecificationConnectionTypePropertyTypeKey,
                        principalTable: "WorkflowSpecificationConnectionTypeProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkDirectives_ParameterSpecification",
                columns: table => new
                {
                    WorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkDirectives_ParameterSpecification", x => new { x.WorkDirectiveTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkDirectives_ParameterSpecification_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkDirectives_ParameterSpecification_WorkDirectives_WorkDirectiveTypeKey",
                        column: x => x.WorkDirectiveTypeKey,
                        principalTable: "WorkDirectives",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnectionProperties",
                columns: table => new
                {
                    Key = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionTypePropertyID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkflowSpecificationConnectionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    WorkflowSpecificationConnectionTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: true),
                    IsDelete = table.Column<bool>(type: "bit", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdateUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Remark = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnectionProperties", x => x.Key);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionProperties_WorkflowSpecificationConnectionProperties_WorkflowSpecificationConnectionPropertyT~",
                        column: x => x.WorkflowSpecificationConnectionPropertyTypeKey,
                        principalTable: "WorkflowSpecificationConnectionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionProperties_WorkflowSpecificationConnections_WorkflowSpecificationConnectionTypeKey",
                        column: x => x.WorkflowSpecificationConnectionTypeKey,
                        principalTable: "WorkflowSpecificationConnections",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationProperties_Value",
                columns: table => new
                {
                    WorkflowSpecificationPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationProperties_Value", x => new { x.WorkflowSpecificationPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationProperties_Value_WorkflowSpecificationProperties_WorkflowSpecificationPropertyTypeKey",
                        column: x => x.WorkflowSpecificationPropertyTypeKey,
                        principalTable: "WorkflowSpecificationProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_OperationsDefinitionID",
                columns: table => new
                {
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_OperationsDefinitionID", x => new { x.WorkMasterTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_OperationsDefinitionID_WorkMasters_WorkMasterTypeKey",
                        column: x => x.WorkMasterTypeKey,
                        principalTable: "WorkMasters",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_OperationsSegmentID",
                columns: table => new
                {
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_OperationsSegmentID", x => new { x.WorkMasterTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_OperationsSegmentID_WorkMasters_WorkMasterTypeKey",
                        column: x => x.WorkMasterTypeKey,
                        principalTable: "WorkMasters",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_ParameterSpecification",
                columns: table => new
                {
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HierarchyScopeKey = table.Column<string>(type: "nvarchar(450)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_ParameterSpecification", x => new { x.WorkMasterTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_ParameterSpecification_HierarchyScopes_HierarchyScopeKey",
                        column: x => x.HierarchyScopeKey,
                        principalTable: "HierarchyScopes",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_WorkMasters_ParameterSpecification_WorkMasters_WorkMasterTypeKey",
                        column: x => x.WorkMasterTypeKey,
                        principalTable: "WorkMasters",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_ProcessSegmentID",
                columns: table => new
                {
                    WorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_ProcessSegmentID", x => new { x.WorkMasterTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_ProcessSegmentID_WorkMasters_WorkMasterTypeKey",
                        column: x => x.WorkMasterTypeKey,
                        principalTable: "WorkMasters",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkDirectives_ParameterSpecification_ParameterSpecificationID",
                columns: table => new
                {
                    ParameterTypeWorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkDirectives_ParameterSpecification_ParameterSpecificationID", x => new { x.ParameterTypeWorkDirectiveTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkDirectives_ParameterSpecification_ParameterSpecificationID_WorkDirectives_ParameterSpecification_ParameterTypeWorkDirect~",
                        columns: x => new { x.ParameterTypeWorkDirectiveTypeKey, x.ParameterTypeId },
                        principalTable: "WorkDirectives_ParameterSpecification",
                        principalColumns: new[] { "WorkDirectiveTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkDirectives_ParameterSpecification_ProcessSegmentParameterID",
                columns: table => new
                {
                    ParameterTypeWorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkDirectives_ParameterSpecification_ProcessSegmentParameterID", x => new { x.ParameterTypeWorkDirectiveTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkDirectives_ParameterSpecification_ProcessSegmentParameterID_WorkDirectives_ParameterSpecification_ParameterTypeWorkDirec~",
                        columns: x => new { x.ParameterTypeWorkDirectiveTypeKey, x.ParameterTypeId },
                        principalTable: "WorkDirectives_ParameterSpecification",
                        principalColumns: new[] { "WorkDirectiveTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkDirectives_ParameterSpecification_Value",
                columns: table => new
                {
                    ParameterTypeWorkDirectiveTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkDirectives_ParameterSpecification_Value", x => new { x.ParameterTypeWorkDirectiveTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkDirectives_ParameterSpecification_Value_WorkDirectives_ParameterSpecification_ParameterTypeWorkDirectiveTypeKey_Paramete~",
                        columns: x => new { x.ParameterTypeWorkDirectiveTypeKey, x.ParameterTypeId },
                        principalTable: "WorkDirectives_ParameterSpecification",
                        principalColumns: new[] { "WorkDirectiveTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkflowSpecificationConnectionProperties_Value",
                columns: table => new
                {
                    WorkflowSpecificationConnectionPropertyTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkflowSpecificationConnectionProperties_Value", x => new { x.WorkflowSpecificationConnectionPropertyTypeKey, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkflowSpecificationConnectionProperties_Value_WorkflowSpecificationConnectionProperties_WorkflowSpecificationConnectionPro~",
                        column: x => x.WorkflowSpecificationConnectionPropertyTypeKey,
                        principalTable: "WorkflowSpecificationConnectionProperties",
                        principalColumn: "Key",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_ParameterSpecification_ParameterSpecificationID",
                columns: table => new
                {
                    ParameterTypeWorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_ParameterSpecification_ParameterSpecificationID", x => new { x.ParameterTypeWorkMasterTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_ParameterSpecification_ParameterSpecificationID_WorkMasters_ParameterSpecification_ParameterTypeWorkMasterTypeKe~",
                        columns: x => new { x.ParameterTypeWorkMasterTypeKey, x.ParameterTypeId },
                        principalTable: "WorkMasters_ParameterSpecification",
                        principalColumns: new[] { "WorkMasterTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_ParameterSpecification_ProcessSegmentParameterID",
                columns: table => new
                {
                    ParameterTypeWorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_ParameterSpecification_ProcessSegmentParameterID", x => new { x.ParameterTypeWorkMasterTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_ParameterSpecification_ProcessSegmentParameterID_WorkMasters_ParameterSpecification_ParameterTypeWorkMasterTypeK~",
                        columns: x => new { x.ParameterTypeWorkMasterTypeKey, x.ParameterTypeId },
                        principalTable: "WorkMasters_ParameterSpecification",
                        principalColumns: new[] { "WorkMasterTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WorkMasters_ParameterSpecification_Value",
                columns: table => new
                {
                    ParameterTypeWorkMasterTypeKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false),
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ValueString_currencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_currencyCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_encodingCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_format = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_characterSetCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_languageLocaleID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_listSchemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_mimeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_schemaURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_unitCodeListVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_filename = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_uri = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValueString_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_OtherValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataType_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_languageID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_listSchemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnitOfMeasure_Value = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeAgencyName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeVersionID = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeDataURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_schemeURI = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key_Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkMasters_ParameterSpecification_Value", x => new { x.ParameterTypeWorkMasterTypeKey, x.ParameterTypeId, x.Id });
                    table.ForeignKey(
                        name: "FK_WorkMasters_ParameterSpecification_Value_WorkMasters_ParameterSpecification_ParameterTypeWorkMasterTypeKey_ParameterTypeId",
                        columns: x => new { x.ParameterTypeWorkMasterTypeKey, x.ParameterTypeId },
                        principalTable: "WorkMasters_ParameterSpecification",
                        principalColumns: new[] { "WorkMasterTypeKey", "Id" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentClasses_EquipmentClassTypeKey",
                table: "EquipmentClasses",
                column: "EquipmentClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentClasses_HierarchyScopeKey",
                table: "EquipmentClasses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentClassProperties_EquipmentClassPropertyTypeKey",
                table: "EquipmentClassProperties",
                column: "EquipmentClassPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentClassProperties_EquipmentClassTypeKey",
                table: "EquipmentClassProperties",
                column: "EquipmentClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentProperties_EquipmentPropertyTypeKey",
                table: "EquipmentProperties",
                column: "EquipmentPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentProperties_EquipmentTypeKey",
                table: "EquipmentProperties",
                column: "EquipmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_Equipments_EquipmentTypeKey",
                table: "Equipments",
                column: "EquipmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_Equipments_HierarchyScopeKey",
                table: "Equipments",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_Equipments_EquipmentAssetMapping_HierarchyScopeKey",
                table: "Equipments_EquipmentAssetMapping",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecificationPropertyTypeKey",
                table: "EquipmentSegmentSpecificationProperties",
                column: "EquipmentSegmentSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecificationProperties",
                column: "EquipmentSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecifications",
                column: "EquipmentSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentSegmentSpecifications_HierarchyScopeKey",
                table: "EquipmentSegmentSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_EquipmentSegmentSpecifications_ProcessSegmentTypeKey",
                table: "EquipmentSegmentSpecifications",
                column: "ProcessSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_HierarchyScopes_HierarchyScopeChildKey",
                table: "HierarchyScopes",
                column: "HierarchyScopeChildKey");

            migrationBuilder.CreateIndex(
                name: "IX_HierarchyScopes_OpOperationsSegmentCapabilityTypeKey",
                table: "HierarchyScopes",
                column: "OpOperationsSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_HierarchyScopes_OpProcessSegmentCapabilityTypeKey",
                table: "HierarchyScopes",
                column: "OpProcessSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_HierarchyScopes_WorkMasterCapabilityTypeKey",
                table: "HierarchyScopes",
                column: "WorkMasterCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobLists_HierarchyScopeKey",
                table: "JobLists",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobOrders_HierarchyScopeKey",
                table: "JobOrders",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobOrders_JobListTypeKey",
                table: "JobOrders",
                column: "JobListTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobOrders_WorkRequestTypeKey",
                table: "JobOrders",
                column: "WorkRequestTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobOrders_JobOrderParameter_HierarchyScopeKey",
                table: "JobOrders_JobOrderParameter",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobResponses_HierarchyScopeKey",
                table: "JobResponses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobResponses_WorkDirectiveKey",
                table: "JobResponses",
                column: "WorkDirectiveKey");

            migrationBuilder.CreateIndex(
                name: "IX_JobResponses_WorkResponseTypeKey",
                table: "JobResponses",
                column: "WorkResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialClasses_HierarchyScopeKey",
                table: "MaterialClasses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialClasses_MaterialClassTypeKey",
                table: "MaterialClasses",
                column: "MaterialClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialClassProperties_MaterialClassPropertyTypeKey",
                table: "MaterialClassProperties",
                column: "MaterialClassPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialClassProperties_MaterialClassTypeKey",
                table: "MaterialClassProperties",
                column: "MaterialClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialDefinitionProperties_MaterialDefinitionPropertyTypeKey",
                table: "MaterialDefinitionProperties",
                column: "MaterialDefinitionPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialDefinitionProperties_MaterialDefinitionTypeKey",
                table: "MaterialDefinitionProperties",
                column: "MaterialDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialDefinitions_HierarchyScopeKey",
                table: "MaterialDefinitions",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialDefinitions_MaterialDefinitionTypeKey",
                table: "MaterialDefinitions",
                column: "MaterialDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialLotProperties_MaterialLotPropertyTypeKey",
                table: "MaterialLotProperties",
                column: "MaterialLotPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialLotProperties_MaterialLotTypeKey",
                table: "MaterialLotProperties",
                column: "MaterialLotTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialLotProperties_MaterialSubLotTypeKey",
                table: "MaterialLotProperties",
                column: "MaterialSubLotTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialLots_HierarchyScopeKey",
                table: "MaterialLots",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialLots_MaterialLotTypeKey",
                table: "MaterialLots",
                column: "MaterialLotTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialLotTypeMaterialSubLotType_AssemblySubLotKey",
                table: "MaterialLotTypeMaterialSubLotType",
                column: "AssemblySubLotKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSegmentSpecificationProperties_MaterialSegmentSpecificationPropertyTypeKey",
                table: "MaterialSegmentSpecificationProperties",
                column: "MaterialSegmentSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSegmentSpecificationProperties_MaterialSegmentSpecificationTypeKey",
                table: "MaterialSegmentSpecificationProperties",
                column: "MaterialSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSegmentSpecifications_HierarchyScopeKey",
                table: "MaterialSegmentSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSegmentSpecifications_ProcessSegmentTypeKey",
                table: "MaterialSegmentSpecifications",
                column: "ProcessSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType_MaterialSegmentSpecificationChildKey",
                table: "MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType",
                column: "MaterialSegmentSpecificationChildKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSubLots_HierarchyScopeKey",
                table: "MaterialSubLots",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_MaterialSubLotTypeMaterialSubLotType_MaterialSubLotChildKey",
                table: "MaterialSubLotTypeMaterialSubLotType",
                column: "MaterialSubLotChildKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentActualProperties_OpEquipmentActualPropertyTypeKey",
                table: "OpEquipmentActualProperties",
                column: "OpEquipmentActualPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentActualProperties_OpEquipmentActualTypeKey",
                table: "OpEquipmentActualProperties",
                column: "OpEquipmentActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentActuals_HierarchyScopeKey",
                table: "OpEquipmentActuals",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentActuals_JobResponseTypeKey",
                table: "OpEquipmentActuals",
                column: "JobResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentActuals_OpEquipmentActualTypeKey",
                table: "OpEquipmentActuals",
                column: "OpEquipmentActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentActuals_OpSegmentResponseTypeKey",
                table: "OpEquipmentActuals",
                column: "OpSegmentResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_HierarchyScopeKey",
                table: "OpEquipmentCapabilities",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_OpEquipmentCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OpEquipmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_OperationsCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OperationsCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OpOperationsSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_OpProcessSegmentCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OpProcessSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_WorkCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "WorkCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "WorkMasterCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilityProperties_OpEquipmentCapabilityPropertyTypeKey",
                table: "OpEquipmentCapabilityProperties",
                column: "OpEquipmentCapabilityPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentCapabilityProperties_OpEquipmentCapabilityTypeKey",
                table: "OpEquipmentCapabilityProperties",
                column: "OpEquipmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirementProperties_OpEquipmentRequirementPropertyTypeKey",
                table: "OpEquipmentRequirementProperties",
                column: "OpEquipmentRequirementPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirementProperties_OpEquipmentRequirementTypeKey",
                table: "OpEquipmentRequirementProperties",
                column: "OpEquipmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirements_EquipmentLevelKey",
                table: "OpEquipmentRequirements",
                column: "EquipmentLevelKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirements_HierarchyScopeKey",
                table: "OpEquipmentRequirements",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirements_JobOrderTypeKey",
                table: "OpEquipmentRequirements",
                column: "JobOrderTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirements_OpEquipmentRequirementTypeKey",
                table: "OpEquipmentRequirements",
                column: "OpEquipmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentRequirements_OpSegmentRequirementTypeKey",
                table: "OpEquipmentRequirements",
                column: "OpSegmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecificationProperties_OpEquipmentSpecificationPropertyTypeKey",
                table: "OpEquipmentSpecificationProperties",
                column: "OpEquipmentSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecificationProperties_OpEquipmentSpecificationTypeKey",
                table: "OpEquipmentSpecificationProperties",
                column: "OpEquipmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecifications_HierarchyScopeKey",
                table: "OpEquipmentSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecifications_OpEquipmentSpecificationTypeKey",
                table: "OpEquipmentSpecifications",
                column: "OpEquipmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecifications_OperationsSegmentTypeKey",
                table: "OpEquipmentSpecifications",
                column: "OperationsSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecifications_WorkDirectiveTypeKey",
                table: "OpEquipmentSpecifications",
                column: "WorkDirectiveTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpEquipmentSpecifications_WorkMasterTypeKey",
                table: "OpEquipmentSpecifications",
                column: "WorkMasterTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocationClasses_HierarchyScopeKey",
                table: "OperationalLocationClasses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocationClasses_OperationalLocationClassChildKey",
                table: "OperationalLocationClasses",
                column: "OperationalLocationClassChildKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocationClassProperties_OperationalLocationClassPropertyTypeKey",
                table: "OperationalLocationClassProperties",
                column: "OperationalLocationClassPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocationClassProperties_OperationalLocationClassTypeKey",
                table: "OperationalLocationClassProperties",
                column: "OperationalLocationClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocationProperties_OperationalLocationPropertyTypeKey",
                table: "OperationalLocationProperties",
                column: "OperationalLocationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocationProperties_OperationalLocationTypeKey",
                table: "OperationalLocationProperties",
                column: "OperationalLocationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocations_HierarchyScopeKey",
                table: "OperationalLocations",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationalLocations_OperationalLocationTypeKey",
                table: "OperationalLocations",
                column: "OperationalLocationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsCapabilities_HierarchyScopeKey",
                table: "OperationsCapabilities",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsDefinitions_HierarchyScopeKey",
                table: "OperationsDefinitions",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventClasses_HierarchyScopeKey",
                table: "OperationsEventClasses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventClasses_OperationsEventClassTypeKey",
                table: "OperationsEventClasses",
                column: "OperationsEventClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventClasses_OpsEventClassRecordSpecification_HierarchyScopeKey",
                table: "OperationsEventClasses_OpsEventClassRecordSpecification",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventClassProperties_OperationsEventClassPropertyTypeKey",
                table: "OperationsEventClassProperties",
                column: "OperationsEventClassPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventClassProperties_OperationsEventClassTypeKey",
                table: "OperationsEventClassProperties",
                column: "OperationsEventClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventClassProperties_OperationsEventDefinitionTypeKey",
                table: "OperationsEventClassProperties",
                column: "OperationsEventDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventDefinitions_HierarchyScopeKey",
                table: "OperationsEventDefinitions",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventDefinitions_OperationsEventDefinitionTypeKey",
                table: "OperationsEventDefinitions",
                column: "OperationsEventDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_HierarchyScopeKey",
                table: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEventProperties_OperationsEventTypeKey",
                table: "OperationsEventProperties",
                column: "OperationsEventTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEvents_HierarchyScopeKey",
                table: "OperationsEvents",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsEvents_OperationsEventTypeKey",
                table: "OperationsEvents",
                column: "OperationsEventTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsMaterialBillItems_HierarchyScopeKey",
                table: "OperationsMaterialBillItems",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsMaterialBillItems_OperationsMaterialBillItemTypeKey",
                table: "OperationsMaterialBillItems",
                column: "OperationsMaterialBillItemTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsMaterialBillItems_OperationsMaterialBillTypeKey",
                table: "OperationsMaterialBillItems",
                column: "OperationsMaterialBillTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsMaterialBills_HierarchyScopeKey",
                table: "OperationsMaterialBills",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsPerformances_HierarchyScopeKey",
                table: "OperationsPerformances",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsRecordEntryTemplateType_HierarchyScopeKey",
                table: "OperationsRecordEntryTemplateType",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsRecordTemplateType_HierarchyScopeKey",
                table: "OperationsRecordTemplateType",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsRequests_HierarchyScopeKey",
                table: "OperationsRequests",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsRequests_OperationsScheduleTypeKey",
                table: "OperationsRequests",
                column: "OperationsScheduleTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsResponses_HierarchyScopeKey",
                table: "OperationsResponses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsResponses_OperationsPerformanceTypeKey",
                table: "OperationsResponses",
                column: "OperationsPerformanceTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsSchedules_HierarchyScopeKey",
                table: "OperationsSchedules",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsSegments_HierarchyScopeKey",
                table: "OperationsSegments",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsSegments_OperationsDefinitionTypeKey",
                table: "OperationsSegments",
                column: "OperationsDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsSegments_OperationsSegmentTypeKey",
                table: "OperationsSegments",
                column: "OperationsSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OperationsSegments_ParameterSpecification_HierarchyScopeKey",
                table: "OperationsSegments_ParameterSpecification",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialActualProperties_OpMaterialActualPropertyTypeKey",
                table: "OpMaterialActualProperties",
                column: "OpMaterialActualPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialActualProperties_OpMaterialActualTypeKey",
                table: "OpMaterialActualProperties",
                column: "OpMaterialActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialActuals_HierarchyScopeKey",
                table: "OpMaterialActuals",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialActuals_JobResponseTypeKey",
                table: "OpMaterialActuals",
                column: "JobResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialActuals_OpMaterialActualTypeKey",
                table: "OpMaterialActuals",
                column: "OpMaterialActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialActuals_OpSegmentResponseTypeKey",
                table: "OpMaterialActuals",
                column: "OpSegmentResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_HierarchyScopeKey",
                table: "OpMaterialCapabilities",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_OperationsCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "OperationsCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_OpMaterialCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "OpMaterialCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_OpOperationsSegmentCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "OpOperationsSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_OpProcessSegmentCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "OpProcessSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_WorkCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "WorkCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "WorkMasterCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilityProperties_OpMaterialCapabilityPropertyTypeKey",
                table: "OpMaterialCapabilityProperties",
                column: "OpMaterialCapabilityPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialCapabilityProperties_OpMaterialCapabilityTypeKey",
                table: "OpMaterialCapabilityProperties",
                column: "OpMaterialCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialRequirementProperties_OpMaterialRequirementPropertyTypeKey",
                table: "OpMaterialRequirementProperties",
                column: "OpMaterialRequirementPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialRequirementProperties_OpMaterialRequirementTypeKey",
                table: "OpMaterialRequirementProperties",
                column: "OpMaterialRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialRequirements_HierarchyScopeKey",
                table: "OpMaterialRequirements",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialRequirements_JobOrderTypeKey",
                table: "OpMaterialRequirements",
                column: "JobOrderTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialRequirements_OpMaterialRequirementTypeKey",
                table: "OpMaterialRequirements",
                column: "OpMaterialRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialRequirements_OpSegmentRequirementTypeKey",
                table: "OpMaterialRequirements",
                column: "OpSegmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecificationProperties_OpMaterialSpecificationPropertyTypeKey",
                table: "OpMaterialSpecificationProperties",
                column: "OpMaterialSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecificationProperties_OpMaterialSpecificationTypeKey",
                table: "OpMaterialSpecificationProperties",
                column: "OpMaterialSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecifications_HierarchyScopeKey",
                table: "OpMaterialSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecifications_OperationsSegmentTypeKey",
                table: "OpMaterialSpecifications",
                column: "OperationsSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecifications_OpMaterialSpecificationTypeKey",
                table: "OpMaterialSpecifications",
                column: "OpMaterialSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecifications_WorkDirectiveTypeKey",
                table: "OpMaterialSpecifications",
                column: "WorkDirectiveTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpMaterialSpecifications_WorkMasterTypeKey",
                table: "OpMaterialSpecifications",
                column: "WorkMasterTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpOperationsSegmentCapabilities_OperationsCapabilityTypeKey",
                table: "OpOperationsSegmentCapabilities",
                column: "OperationsCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                table: "OpOperationsSegmentCapabilities",
                column: "OpOperationsSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelActualProperties_OpPersonnelActualPropertyTypeKey",
                table: "OpPersonnelActualProperties",
                column: "OpPersonnelActualPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelActualProperties_OpPersonnelActualTypeKey",
                table: "OpPersonnelActualProperties",
                column: "OpPersonnelActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelActuals_HierarchyScopeKey",
                table: "OpPersonnelActuals",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelActuals_JobResponseTypeKey",
                table: "OpPersonnelActuals",
                column: "JobResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelActuals_OpPersonnelActualTypeKey",
                table: "OpPersonnelActuals",
                column: "OpPersonnelActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelActuals_OpSegmentResponseTypeKey",
                table: "OpPersonnelActuals",
                column: "OpSegmentResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_HierarchyScopeKey",
                table: "OpPersonnelCapabilities",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_OperationsCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "OperationsCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_OpOperationsSegmentCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "OpOperationsSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_OpPersonnelCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "OpPersonnelCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_OpProcessSegmentCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "OpProcessSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_WorkCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "WorkCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "WorkMasterCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilityProperties_OpPersonnelCapabilityPropertyTypeKey",
                table: "OpPersonnelCapabilityProperties",
                column: "OpPersonnelCapabilityPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelCapabilityProperties_OpPersonnelCapabilityTypeKey",
                table: "OpPersonnelCapabilityProperties",
                column: "OpPersonnelCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelRequirementProperties_OpPersonnelRequirementPropertyTypeKey",
                table: "OpPersonnelRequirementProperties",
                column: "OpPersonnelRequirementPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelRequirementProperties_OpPersonnelRequirementTypeKey",
                table: "OpPersonnelRequirementProperties",
                column: "OpPersonnelRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelRequirements_HierarchyScopeKey",
                table: "OpPersonnelRequirements",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelRequirements_JobOrderTypeKey",
                table: "OpPersonnelRequirements",
                column: "JobOrderTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelRequirements_OpPersonnelRequirementTypeKey",
                table: "OpPersonnelRequirements",
                column: "OpPersonnelRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelRequirements_OpSegmentRequirementTypeKey",
                table: "OpPersonnelRequirements",
                column: "OpSegmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecificationProperties_OpPersonnelSpecificationPropertyTypeKey",
                table: "OpPersonnelSpecificationProperties",
                column: "OpPersonnelSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecificationProperties_OpPersonnelSpecificationTypeKey",
                table: "OpPersonnelSpecificationProperties",
                column: "OpPersonnelSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecifications_HierarchyScopeKey",
                table: "OpPersonnelSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecifications_OperationsSegmentTypeKey",
                table: "OpPersonnelSpecifications",
                column: "OperationsSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecifications_OpPersonnelSpecificationTypeKey",
                table: "OpPersonnelSpecifications",
                column: "OpPersonnelSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecifications_WorkDirectiveTypeKey",
                table: "OpPersonnelSpecifications",
                column: "WorkDirectiveTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPersonnelSpecifications_WorkMasterTypeKey",
                table: "OpPersonnelSpecifications",
                column: "WorkMasterTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetActualProperties_OpPhysicalAssetActualPropertyTypeKey",
                table: "OpPhysicalAssetActualProperties",
                column: "OpPhysicalAssetActualPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetActualProperties_OpPhysicalAssetActualTypeKey",
                table: "OpPhysicalAssetActualProperties",
                column: "OpPhysicalAssetActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetActuals_HierarchyScopeKey",
                table: "OpPhysicalAssetActuals",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetActuals_JobResponseTypeKey",
                table: "OpPhysicalAssetActuals",
                column: "JobResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetActuals_OpPhysicalAssetActualTypeKey",
                table: "OpPhysicalAssetActuals",
                column: "OpPhysicalAssetActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetActuals_OpSegmentResponseTypeKey",
                table: "OpPhysicalAssetActuals",
                column: "OpSegmentResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_HierarchyScopeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_OperationsCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "OperationsCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_OpOperationsSegmentCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "OpOperationsSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_OpPhysicalAssetCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "OpPhysicalAssetCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_OpProcessSegmentCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "OpProcessSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_WorkCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "WorkCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "WorkMasterCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilityPropertyTypeKey",
                table: "OpPhysicalAssetCapabilityProperties",
                column: "OpPhysicalAssetCapabilityPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetCapabilityProperties_OpPhysicalAssetCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilityProperties",
                column: "OpPhysicalAssetCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirementPropertyTypeKey",
                table: "OpPhysicalAssetRequirementProperties",
                column: "OpPhysicalAssetRequirementPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirementProperties_OpPhysicalAssetRequirementTypeKey",
                table: "OpPhysicalAssetRequirementProperties",
                column: "OpPhysicalAssetRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirements_EquipmentLevelKey",
                table: "OpPhysicalAssetRequirements",
                column: "EquipmentLevelKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirements_HierarchyScopeKey",
                table: "OpPhysicalAssetRequirements",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirements_JobOrderTypeKey",
                table: "OpPhysicalAssetRequirements",
                column: "JobOrderTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirements_OpPhysicalAssetRequirementTypeKey",
                table: "OpPhysicalAssetRequirements",
                column: "OpPhysicalAssetRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetRequirements_OpSegmentRequirementTypeKey",
                table: "OpPhysicalAssetRequirements",
                column: "OpSegmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecificationPropertyTypeKey",
                table: "OpPhysicalAssetSpecificationProperties",
                column: "OpPhysicalAssetSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecificationProperties_OpPhysicalAssetSpecificationTypeKey",
                table: "OpPhysicalAssetSpecificationProperties",
                column: "OpPhysicalAssetSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecifications_HierarchyScopeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecifications_OperationsSegmentTypeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "OperationsSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecifications_OpPhysicalAssetSpecificationTypeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "OpPhysicalAssetSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecifications_WorkDirectiveTypeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "WorkDirectiveTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpPhysicalAssetSpecifications_WorkMasterTypeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "WorkMasterTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpProcessSegmentCapabilityProperties_OperationsCapabilityTypeKey",
                table: "OpProcessSegmentCapabilityProperties",
                column: "OperationsCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                table: "OpProcessSegmentCapabilityProperties",
                column: "OpProcessSegmentCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentDatas_HierarchyScopeKey",
                table: "OpSegmentDatas",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentDatas_JobResponseTypeKey",
                table: "OpSegmentDatas",
                column: "JobResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentDatas_OpSegmentDataTypeKey",
                table: "OpSegmentDatas",
                column: "OpSegmentDataTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentDatas_OpSegmentResponseTypeKey",
                table: "OpSegmentDatas",
                column: "OpSegmentResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentRequirements_HierarchyScopeKey",
                table: "OpSegmentRequirements",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentRequirements_OperationsRequestTypeKey",
                table: "OpSegmentRequirements",
                column: "OperationsRequestTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                table: "OpSegmentRequirements",
                column: "OpSegmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentRequirements_SegmentParameter_HierarchyScopeKey",
                table: "OpSegmentRequirements_SegmentParameter",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentResponses_HierarchyScopeKey",
                table: "OpSegmentResponses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentResponses_OperationsRequestTypeKey",
                table: "OpSegmentResponses",
                column: "OperationsRequestTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentResponses_OperationsResponseTypeKey",
                table: "OpSegmentResponses",
                column: "OperationsResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentResponses_OpSegmentRequirementTypeKey",
                table: "OpSegmentResponses",
                column: "OpSegmentRequirementTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_OpSegmentResponses_OpSegmentResponseTypeKey",
                table: "OpSegmentResponses",
                column: "OpSegmentResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_Peoples_HierarchyScopeKey",
                table: "Peoples",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PeoplesProperties_PersonPropertyTypeKey",
                table: "PeoplesProperties",
                column: "PersonPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PeoplesProperties_PersonTypeKey",
                table: "PeoplesProperties",
                column: "PersonTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelClasses_HierarchyScopeKey",
                table: "PersonnelClasses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelClassProperties_PersonnelClassPropertyTypeKey",
                table: "PersonnelClassProperties",
                column: "PersonnelClassPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelClassProperties_PersonnelClassTypeKey",
                table: "PersonnelClassProperties",
                column: "PersonnelClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecificationPropertyTypeKey",
                table: "PersonnelSegmentSpecificationProperties",
                column: "PersonnelSegmentSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelSegmentSpecificationProperties_PersonnelSegmentSpecificationTypeKey",
                table: "PersonnelSegmentSpecificationProperties",
                column: "PersonnelSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelSegmentSpecifications_HierarchyScopeKey",
                table: "PersonnelSegmentSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelSegmentSpecifications_PersonnelSegmentSpecificationTypeKey",
                table: "PersonnelSegmentSpecifications",
                column: "PersonnelSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PersonnelSegmentSpecifications_ProcessSegmentTypeKey",
                table: "PersonnelSegmentSpecifications",
                column: "ProcessSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetClasses_HierarchyScopeKey",
                table: "PhysicalAssetClasses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetClasses_PhysicalAssetClassTypeKey",
                table: "PhysicalAssetClasses",
                column: "PhysicalAssetClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetClassProperties_PhysicalAssetClassPropertyTypeKey",
                table: "PhysicalAssetClassProperties",
                column: "PhysicalAssetClassPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetClassProperties_PhysicalAssetClassTypeKey",
                table: "PhysicalAssetClassProperties",
                column: "PhysicalAssetClassTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetProperties_PhysicalAssetPropertyTypeKey",
                table: "PhysicalAssetProperties",
                column: "PhysicalAssetPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetProperties_PhysicalAssetTypeKey",
                table: "PhysicalAssetProperties",
                column: "PhysicalAssetTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssets_EquipmentLevelKey",
                table: "PhysicalAssets",
                column: "EquipmentLevelKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssets_HierarchyScopeKey",
                table: "PhysicalAssets",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssets_PhysicalAssetTypeKey",
                table: "PhysicalAssets",
                column: "PhysicalAssetTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssets_EquipmentAssetMapping_HierarchyScopeKey",
                table: "PhysicalAssets_EquipmentAssetMapping",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecificationPropertyTypeKey",
                table: "PhysicalAssetSegmentSpecificationProperties",
                column: "PhysicalAssetSegmentSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetSegmentSpecificationProperties_PhysicalAssetSegmentSpecificationTypeKey",
                table: "PhysicalAssetSegmentSpecificationProperties",
                column: "PhysicalAssetSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetSegmentSpecifications_HierarchyScopeKey",
                table: "PhysicalAssetSegmentSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetSegmentSpecifications_PhysicalAssetSegmentSpecificationTypeKey",
                table: "PhysicalAssetSegmentSpecifications",
                column: "PhysicalAssetSegmentSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_PhysicalAssetSegmentSpecifications_ProcessSegmentTypeKey",
                table: "PhysicalAssetSegmentSpecifications",
                column: "ProcessSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ProcessSegments_HierarchyScopeKey",
                table: "ProcessSegments",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ProcessSegments_ProcessSegmentTypeKey",
                table: "ProcessSegments",
                column: "ProcessSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ProcessSegments_ProcessSegmentParameter_HierarchyScopeKey",
                table: "ProcessSegments_ProcessSegmentParameter",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ProcessSegmentTypeProductSegmentType_ProductSegmentsKey",
                table: "ProcessSegmentTypeProductSegmentType",
                column: "ProductSegmentsKey");

            migrationBuilder.CreateIndex(
                name: "IX_ProductSegments_BaseSegmentKey",
                table: "ProductSegments",
                column: "BaseSegmentKey");

            migrationBuilder.CreateIndex(
                name: "IX_ProductSegments_ProductInformationKey",
                table: "ProductSegments",
                column: "ProductInformationKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnectionProperties_ResourceNetworkConnectionTypeKey",
                table: "ResourceNetworkConnectionProperties",
                column: "ResourceNetworkConnectionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnectionProperties_RNCPropertyTypeKey",
                table: "ResourceNetworkConnectionProperties",
                column: "RNCPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnections_FromResourceReferenceKey",
                table: "ResourceNetworkConnections",
                column: "FromResourceReferenceKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnections_ResourceRelationshipNetworkTypeKey",
                table: "ResourceNetworkConnections",
                column: "ResourceRelationshipNetworkTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnections_ToResourceReferenceKey",
                table: "ResourceNetworkConnections",
                column: "ToResourceReferenceKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnectionTypeProperties_ResourceNetworkConnectionTypeTypeKey",
                table: "ResourceNetworkConnectionTypeProperties",
                column: "ResourceNetworkConnectionTypeTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceNetworkConnectionTypes_HierarchyScopeKey",
                table: "ResourceNetworkConnectionTypes",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceReferencesProperties_ResourceReferencePropertyTypeKey",
                table: "ResourceReferencesProperties",
                column: "ResourceReferencePropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceReferencesProperties_ResourceReferenceTypeKey",
                table: "ResourceReferencesProperties",
                column: "ResourceReferenceTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceRelationshipNetworkProperties_ResourceRelationshipNetworkTypeKey",
                table: "ResourceRelationshipNetworkProperties",
                column: "ResourceRelationshipNetworkTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceRelationshipNetworkProperties_RRNPropertyTypeKey",
                table: "ResourceRelationshipNetworkProperties",
                column: "RRNPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceRelationshipNetworks_HierarchyScopeKey",
                table: "ResourceRelationshipNetworks",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_SegmentDependencies_OperationsSegmentTypeKey",
                table: "SegmentDependencies",
                column: "OperationsSegmentTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_SegmentDependencies_ProcessSegment_AKey",
                table: "SegmentDependencies",
                column: "ProcessSegment_AKey");

            migrationBuilder.CreateIndex(
                name: "IX_SegmentDependencies_ProcessSegment_BKey",
                table: "SegmentDependencies",
                column: "ProcessSegment_BKey");

            migrationBuilder.CreateIndex(
                name: "IX_SegmentDependencies_ProcessSegmentKey",
                table: "SegmentDependencies",
                column: "ProcessSegmentKey");

            migrationBuilder.CreateIndex(
                name: "IX_SpecificationNodes_HierarchyScopeKey",
                table: "SpecificationNodes",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_SpecificationNodes_WorkflowSpecificationKey",
                table: "SpecificationNodes",
                column: "WorkflowSpecificationKey");

            migrationBuilder.CreateIndex(
                name: "IX_SpecificationNodeTypes_HierarchyScopeKey",
                table: "SpecificationNodeTypes",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationCriterias_TestSpecificationTypeKey",
                table: "TestSpecificationCriterias",
                column: "TestSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationEvaluatedProperties_TestSpecificationTypeKey",
                table: "TestSpecificationEvaluatedProperties",
                column: "TestSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationProperties_TestSpecificationPropertyTypeKey",
                table: "TestSpecificationProperties",
                column: "TestSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationProperties_TestSpecificationTypeKey",
                table: "TestSpecificationProperties",
                column: "TestSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationResults_HierarchyScopeKey",
                table: "TestSpecificationResults",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationResults_OpEquipmentActualTypeKey",
                table: "TestSpecificationResults",
                column: "OpEquipmentActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationResults_OpMaterialActualTypeKey",
                table: "TestSpecificationResults",
                column: "OpMaterialActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationResults_OpPersonnelActualTypeKey",
                table: "TestSpecificationResults",
                column: "OpPersonnelActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationResults_OpPhysicalAssetActualTypeKey",
                table: "TestSpecificationResults",
                column: "OpPhysicalAssetActualTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecificationResults_TestResultTypeKey",
                table: "TestSpecificationResults",
                column: "TestResultTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecifications_HierarchyScopeKey",
                table: "TestSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_TestSpecifications_TestSpecificationTypeKey",
                table: "TestSpecifications",
                column: "TestSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkAlertDefinitionProperties_WorkAlertDefinitionTypeKey",
                table: "WorkAlertDefinitionProperties",
                column: "WorkAlertDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkAlertDefinitions_HierarchyScopeKey",
                table: "WorkAlertDefinitions",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkAlertProperties_WorkAlertDefinitionPropertyTypeKey",
                table: "WorkAlertProperties",
                column: "WorkAlertDefinitionPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkAlertProperties_WorkAlertPropertyTypeKey",
                table: "WorkAlertProperties",
                column: "WorkAlertPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkAlertProperties_WorkAlertTypeKey",
                table: "WorkAlertProperties",
                column: "WorkAlertTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkAlerts_HierarchyScopeKey",
                table: "WorkAlerts",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionEntries_HierarchyScopeKey",
                table: "WorkCalendarDefinitionEntries",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionEntries_WorkCalendarDefinitionEntryTypeKey",
                table: "WorkCalendarDefinitionEntries",
                column: "WorkCalendarDefinitionEntryTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionEntries_WorkCalendarDefinitionTypeKey",
                table: "WorkCalendarDefinitionEntries",
                column: "WorkCalendarDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionEntryProperties_WorkCalendarDefinitionEntryPropertyTypeKey",
                table: "WorkCalendarDefinitionEntryProperties",
                column: "WorkCalendarDefinitionEntryPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionEntryProperties_WorkCalendarDefinitionEntryTypeKey",
                table: "WorkCalendarDefinitionEntryProperties",
                column: "WorkCalendarDefinitionEntryTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionProperties_WorkCalendarDefinitionPropertyTypeKey",
                table: "WorkCalendarDefinitionProperties",
                column: "WorkCalendarDefinitionPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitionProperties_WorkCalendarDefinitionTypeKey",
                table: "WorkCalendarDefinitionProperties",
                column: "WorkCalendarDefinitionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarDefinitions_HierarchyScopeKey",
                table: "WorkCalendarDefinitions",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarEntries_HierarchyScopeKey",
                table: "WorkCalendarEntries",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarEntries_WorkCalendarEntryTypeKey",
                table: "WorkCalendarEntries",
                column: "WorkCalendarEntryTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarEntries_WorkCalendarTypeKey",
                table: "WorkCalendarEntries",
                column: "WorkCalendarTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarEntryProperties_WorkCalendarEntryPropertyTypeKey",
                table: "WorkCalendarEntryProperties",
                column: "WorkCalendarEntryPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarEntryProperties_WorkCalendarEntryTypeKey",
                table: "WorkCalendarEntryProperties",
                column: "WorkCalendarEntryTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarProperties_WorkCalendarPropertyTypeKey",
                table: "WorkCalendarProperties",
                column: "WorkCalendarPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendarProperties_WorkCalendarTypeKey",
                table: "WorkCalendarProperties",
                column: "WorkCalendarTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCalendars_HierarchyScopeKey",
                table: "WorkCalendars",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkCapabilities_HierarchyScopeKey",
                table: "WorkCapabilities",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkDirectives_HierarchyScopeKey",
                table: "WorkDirectives",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkDirectives_WorkDirectiveTypeKey",
                table: "WorkDirectives",
                column: "WorkDirectiveTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkDirectives_WorkflowSpecificationKey",
                table: "WorkDirectives",
                column: "WorkflowSpecificationKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkDirectives_ParameterSpecification_HierarchyScopeKey",
                table: "WorkDirectives_ParameterSpecification",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationConnectionProperties_WorkflowSpecificationConnectionPropertyTypeKey",
                table: "WorkflowSpecificationConnectionProperties",
                column: "WorkflowSpecificationConnectionPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationConnectionProperties_WorkflowSpecificationConnectionTypeKey",
                table: "WorkflowSpecificationConnectionProperties",
                column: "WorkflowSpecificationConnectionTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationConnections_WorkflowSpecificationTypeKey",
                table: "WorkflowSpecificationConnections",
                column: "WorkflowSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationConnectionTypeProperties_WorkflowSpecificationConnectionTypePropertyTypeKey",
                table: "WorkflowSpecificationConnectionTypeProperties",
                column: "WorkflowSpecificationConnectionTypePropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationConnectionTypeProperties_WorkflowSpecificationConnectionTypeTypeKey",
                table: "WorkflowSpecificationConnectionTypeProperties",
                column: "WorkflowSpecificationConnectionTypeTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationConnectionTypes_HierarchyScopeKey",
                table: "WorkflowSpecificationConnectionTypes",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationNodeProperties_WorkflowSpecificationNodePropertyTypeKey",
                table: "WorkflowSpecificationNodeProperties",
                column: "WorkflowSpecificationNodePropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationNodeProperties_WorkflowSpecificationNodeTypeKey",
                table: "WorkflowSpecificationNodeProperties",
                column: "WorkflowSpecificationNodeTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationNodeTypeProperties_WorkflowSpecificationNodeTypePropertyTypeKey",
                table: "WorkflowSpecificationNodeTypeProperties",
                column: "WorkflowSpecificationNodeTypePropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationNodeTypeProperties_WorkflowSpecificationNodeTypeTypeKey",
                table: "WorkflowSpecificationNodeTypeProperties",
                column: "WorkflowSpecificationNodeTypeTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationProperties_WorkflowSpecificationPropertyTypeKey",
                table: "WorkflowSpecificationProperties",
                column: "WorkflowSpecificationPropertyTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecificationProperties_WorkflowSpecificationTypeKey",
                table: "WorkflowSpecificationProperties",
                column: "WorkflowSpecificationTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkflowSpecifications_HierarchyScopeKey",
                table: "WorkflowSpecifications",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkMasterCapabilities_WorkCapabilityTypeKey",
                table: "WorkMasterCapabilities",
                column: "WorkCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                table: "WorkMasterCapabilities",
                column: "WorkMasterCapabilityTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkMasters_HierarchyScopeKey",
                table: "WorkMasters",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkMasters_WorkflowSpecificationKey",
                table: "WorkMasters",
                column: "WorkflowSpecificationKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkMasters_WorkMasterTypeKey",
                table: "WorkMasters",
                column: "WorkMasterTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkMasters_ParameterSpecification_HierarchyScopeKey",
                table: "WorkMasters_ParameterSpecification",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkPerformances_HierarchyScopeKey",
                table: "WorkPerformances",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkPerformances_WorkPerformanceTypeKey",
                table: "WorkPerformances",
                column: "WorkPerformanceTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRecordEntries_HierarchyScopeKey",
                table: "WorkRecordEntries",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRecordEntries_WorkRecordEntryTypeKey",
                table: "WorkRecordEntries",
                column: "WorkRecordEntryTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRecordEntries_WorkRecordTypeKey",
                table: "WorkRecordEntries",
                column: "WorkRecordTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRecords_HierarchyScopeKey",
                table: "WorkRecords",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRecords_WorkRecordTypeKey",
                table: "WorkRecords",
                column: "WorkRecordTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRequests_HierarchyScopeKey",
                table: "WorkRequests",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRequests_WorkRequestTypeKey",
                table: "WorkRequests",
                column: "WorkRequestTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkRequests_WorkScheduleTypeKey",
                table: "WorkRequests",
                column: "WorkScheduleTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkResponses_HierarchyScopeKey",
                table: "WorkResponses",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkResponses_WorkPerformanceTypeKey",
                table: "WorkResponses",
                column: "WorkPerformanceTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkResponses_WorkResponseTypeKey",
                table: "WorkResponses",
                column: "WorkResponseTypeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkSchedules_HierarchyScopeKey",
                table: "WorkSchedules",
                column: "HierarchyScopeKey");

            migrationBuilder.CreateIndex(
                name: "IX_WorkSchedules_WorkScheduleTypeKey",
                table: "WorkSchedules",
                column: "WorkScheduleTypeKey");

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentClasses_EquipmentClassBaseID_EquipmentClasses_EquipmentClassTypeKey",
                table: "EquipmentClasses_EquipmentClassBaseID",
                column: "EquipmentClassTypeKey",
                principalTable: "EquipmentClasses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentClasses_EquipmentSourceID_EquipmentClasses_EquipmentClassTypeKey",
                table: "EquipmentClasses_EquipmentSourceID",
                column: "EquipmentClassTypeKey",
                principalTable: "EquipmentClasses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentClasses_TestSpecificationID_EquipmentClasses_EquipmentClassTypeKey",
                table: "EquipmentClasses_TestSpecificationID",
                column: "EquipmentClassTypeKey",
                principalTable: "EquipmentClasses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentClassProperties_EquipmentClasses_EquipmentClassTypeKey",
                table: "EquipmentClassProperties",
                column: "EquipmentClassTypeKey",
                principalTable: "EquipmentClasses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentProperties_Value_EquipmentProperties_EquipmentPropertyTypeKey",
                table: "EquipmentProperties_Value",
                column: "EquipmentPropertyTypeKey",
                principalTable: "EquipmentProperties",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentProperties_Equipments_EquipmentTypeKey",
                table: "EquipmentProperties",
                column: "EquipmentTypeKey",
                principalTable: "Equipments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Equipments_EquipmentAssetMapping_Equipments_EquipmentTypeKey",
                table: "Equipments_EquipmentAssetMapping",
                column: "EquipmentTypeKey",
                principalTable: "Equipments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Equipments_EquipmentAssetMapping_HierarchyScopes_HierarchyScopeKey",
                table: "Equipments_EquipmentAssetMapping",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Equipments_EquipmentClassID_Equipments_EquipmentTypeKey",
                table: "Equipments_EquipmentClassID",
                column: "EquipmentTypeKey",
                principalTable: "Equipments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Equipments_TestSpecificationID_Equipments_EquipmentTypeKey",
                table: "Equipments_TestSpecificationID",
                column: "EquipmentTypeKey",
                principalTable: "Equipments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecificationProperties_Quantity_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecificationProper~",
                table: "EquipmentSegmentSpecificationProperties_Quantity",
                column: "EquipmentSegmentSpecificationPropertyTypeKey",
                principalTable: "EquipmentSegmentSpecificationProperties",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecificationProperties_Value_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecificationPropertyT~",
                table: "EquipmentSegmentSpecificationProperties_Value",
                column: "EquipmentSegmentSpecificationPropertyTypeKey",
                principalTable: "EquipmentSegmentSpecificationProperties",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecificationProperties_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecificationProperties",
                column: "EquipmentSegmentSpecificationTypeKey",
                principalTable: "EquipmentSegmentSpecifications",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecifications_EquipmentClassID_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecifications_EquipmentClassID",
                column: "EquipmentSegmentSpecificationTypeKey",
                principalTable: "EquipmentSegmentSpecifications",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecifications_EquipmentID_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecifications_EquipmentID",
                column: "EquipmentSegmentSpecificationTypeKey",
                principalTable: "EquipmentSegmentSpecifications",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecifications_Quantity_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecifications_Quantity",
                column: "EquipmentSegmentSpecificationTypeKey",
                principalTable: "EquipmentSegmentSpecifications",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecifications_TestSpecificationID_EquipmentSegmentSpecifications_EquipmentSegmentSpecificationTypeKey",
                table: "EquipmentSegmentSpecifications_TestSpecificationID",
                column: "EquipmentSegmentSpecificationTypeKey",
                principalTable: "EquipmentSegmentSpecifications",
                principalColumn: "Key",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentClasses_HierarchyScopes_HierarchyScopeKey",
                table: "EquipmentClasses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Equipments_HierarchyScopes_HierarchyScopeKey",
                table: "Equipments",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "EquipmentSegmentSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_EquipmentSegmentSpecifications_ProcessSegments_ProcessSegmentTypeKey",
                table: "EquipmentSegmentSpecifications",
                column: "ProcessSegmentTypeKey",
                principalTable: "ProcessSegments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobLists_HierarchyScopes_HierarchyScopeKey",
                table: "JobLists",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobOrders_HierarchyScopes_HierarchyScopeKey",
                table: "JobOrders",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobOrders_WorkRequests_WorkRequestTypeKey",
                table: "JobOrders",
                column: "WorkRequestTypeKey",
                principalTable: "WorkRequests",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobOrders_JobOrderParameter_HierarchyScopes_HierarchyScopeKey",
                table: "JobOrders_JobOrderParameter",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobResponses_HierarchyScopes_HierarchyScopeKey",
                table: "JobResponses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobResponses_WorkDirectives_WorkDirectiveKey",
                table: "JobResponses",
                column: "WorkDirectiveKey",
                principalTable: "WorkDirectives",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_JobResponses_WorkResponses_WorkResponseTypeKey",
                table: "JobResponses",
                column: "WorkResponseTypeKey",
                principalTable: "WorkResponses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_MaterialClasses_HierarchyScopes_HierarchyScopeKey",
                table: "MaterialClasses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_MaterialDefinitions_HierarchyScopes_HierarchyScopeKey",
                table: "MaterialDefinitions",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_MaterialLots_HierarchyScopes_HierarchyScopeKey",
                table: "MaterialLots",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_MaterialSegmentSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "MaterialSegmentSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_MaterialSegmentSpecifications_ProcessSegments_ProcessSegmentTypeKey",
                table: "MaterialSegmentSpecifications",
                column: "ProcessSegmentTypeKey",
                principalTable: "ProcessSegments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_MaterialSubLots_HierarchyScopes_HierarchyScopeKey",
                table: "MaterialSubLots",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentActuals_HierarchyScopes_HierarchyScopeKey",
                table: "OpEquipmentActuals",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentActuals_OpSegmentResponses_OpSegmentResponseTypeKey",
                table: "OpEquipmentActuals",
                column: "OpSegmentResponseTypeKey",
                principalTable: "OpSegmentResponses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "OpEquipmentCapabilities",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentCapabilities_OperationsCapabilities_OperationsCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OperationsCapabilityTypeKey",
                principalTable: "OperationsCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentCapabilities_OpOperationsSegmentCapabilities_OpOperationsSegmentCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OpOperationsSegmentCapabilityTypeKey",
                principalTable: "OpOperationsSegmentCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentCapabilities_OpProcessSegmentCapabilityProperties_OpProcessSegmentCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "OpProcessSegmentCapabilityTypeKey",
                principalTable: "OpProcessSegmentCapabilityProperties",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentCapabilities_WorkCapabilities_WorkCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "WorkCapabilityTypeKey",
                principalTable: "WorkCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentCapabilities_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpEquipmentCapabilities",
                column: "WorkMasterCapabilityTypeKey",
                principalTable: "WorkMasterCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentRequirements_HierarchyScopes_EquipmentLevelKey",
                table: "OpEquipmentRequirements",
                column: "EquipmentLevelKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentRequirements_HierarchyScopes_HierarchyScopeKey",
                table: "OpEquipmentRequirements",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentRequirements_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                table: "OpEquipmentRequirements",
                column: "OpSegmentRequirementTypeKey",
                principalTable: "OpSegmentRequirements",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "OpEquipmentSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentSpecifications_OperationsSegments_OperationsSegmentTypeKey",
                table: "OpEquipmentSpecifications",
                column: "OperationsSegmentTypeKey",
                principalTable: "OperationsSegments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentSpecifications_WorkDirectives_WorkDirectiveTypeKey",
                table: "OpEquipmentSpecifications",
                column: "WorkDirectiveTypeKey",
                principalTable: "WorkDirectives",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpEquipmentSpecifications_WorkMasters_WorkMasterTypeKey",
                table: "OpEquipmentSpecifications",
                column: "WorkMasterTypeKey",
                principalTable: "WorkMasters",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationalLocationClasses_HierarchyScopes_HierarchyScopeKey",
                table: "OperationalLocationClasses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationalLocations_HierarchyScopes_HierarchyScopeKey",
                table: "OperationalLocations",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsCapabilities",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsDefinitions_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsDefinitions",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsEventClasses_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsEventClasses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsEventClasses_OpsEventClassRecordSpecification_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsEventClasses_OpsEventClassRecordSpecification",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsEventDefinitions_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsEventDefinitions",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsEvents_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsEvents",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsMaterialBillItems_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsMaterialBillItems",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsMaterialBillItems_OperationsMaterialBills_OperationsMaterialBillTypeKey",
                table: "OperationsMaterialBillItems",
                column: "OperationsMaterialBillTypeKey",
                principalTable: "OperationsMaterialBills",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsMaterialBills_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsMaterialBills",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsPerformances_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsPerformances",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsRecordEntryTemplateType_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsRecordEntryTemplateType",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsRecordEntryTemplateType_OperationsRecordTemplateType_OperationsRecordTemplateTypeOperationsEventTypeKey_Operations~",
                table: "OperationsRecordEntryTemplateType",
                columns: new[] { "OperationsRecordTemplateTypeOperationsEventTypeKey", "OperationsRecordTemplateTypeId" },
                principalTable: "OperationsRecordTemplateType",
                principalColumns: new[] { "OperationsEventTypeKey", "Id" },
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsRecordTemplateType_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsRecordTemplateType",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsRequests_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsRequests",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsRequests_OperationsSchedules_OperationsScheduleTypeKey",
                table: "OperationsRequests",
                column: "OperationsScheduleTypeKey",
                principalTable: "OperationsSchedules",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsResponses_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsResponses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsSchedules_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsSchedules",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsSegments_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsSegments",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OperationsSegments_ParameterSpecification_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsSegments_ParameterSpecification",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialActuals_HierarchyScopes_HierarchyScopeKey",
                table: "OpMaterialActuals",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialActuals_OpSegmentResponses_OpSegmentResponseTypeKey",
                table: "OpMaterialActuals",
                column: "OpSegmentResponseTypeKey",
                principalTable: "OpSegmentResponses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "OpMaterialCapabilities",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialCapabilities_WorkCapabilities_WorkCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "WorkCapabilityTypeKey",
                principalTable: "WorkCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialCapabilities_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpMaterialCapabilities",
                column: "WorkMasterCapabilityTypeKey",
                principalTable: "WorkMasterCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialRequirements_HierarchyScopes_HierarchyScopeKey",
                table: "OpMaterialRequirements",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialRequirements_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                table: "OpMaterialRequirements",
                column: "OpSegmentRequirementTypeKey",
                principalTable: "OpSegmentRequirements",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "OpMaterialSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialSpecifications_WorkDirectives_WorkDirectiveTypeKey",
                table: "OpMaterialSpecifications",
                column: "WorkDirectiveTypeKey",
                principalTable: "WorkDirectives",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpMaterialSpecifications_WorkMasters_WorkMasterTypeKey",
                table: "OpMaterialSpecifications",
                column: "WorkMasterTypeKey",
                principalTable: "WorkMasters",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelActuals_HierarchyScopes_HierarchyScopeKey",
                table: "OpPersonnelActuals",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelActuals_OpSegmentResponses_OpSegmentResponseTypeKey",
                table: "OpPersonnelActuals",
                column: "OpSegmentResponseTypeKey",
                principalTable: "OpSegmentResponses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "OpPersonnelCapabilities",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelCapabilities_WorkCapabilities_WorkCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "WorkCapabilityTypeKey",
                principalTable: "WorkCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelCapabilities_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpPersonnelCapabilities",
                column: "WorkMasterCapabilityTypeKey",
                principalTable: "WorkMasterCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelRequirements_HierarchyScopes_HierarchyScopeKey",
                table: "OpPersonnelRequirements",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelRequirements_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                table: "OpPersonnelRequirements",
                column: "OpSegmentRequirementTypeKey",
                principalTable: "OpSegmentRequirements",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "OpPersonnelSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelSpecifications_WorkDirectives_WorkDirectiveTypeKey",
                table: "OpPersonnelSpecifications",
                column: "WorkDirectiveTypeKey",
                principalTable: "WorkDirectives",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPersonnelSpecifications_WorkMasters_WorkMasterTypeKey",
                table: "OpPersonnelSpecifications",
                column: "WorkMasterTypeKey",
                principalTable: "WorkMasters",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetActuals_HierarchyScopes_HierarchyScopeKey",
                table: "OpPhysicalAssetActuals",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetActuals_OpSegmentResponses_OpSegmentResponseTypeKey",
                table: "OpPhysicalAssetActuals",
                column: "OpSegmentResponseTypeKey",
                principalTable: "OpSegmentResponses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetCapabilities_WorkCapabilities_WorkCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "WorkCapabilityTypeKey",
                principalTable: "WorkCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetCapabilities_WorkMasterCapabilities_WorkMasterCapabilityTypeKey",
                table: "OpPhysicalAssetCapabilities",
                column: "WorkMasterCapabilityTypeKey",
                principalTable: "WorkMasterCapabilities",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetRequirements_HierarchyScopes_EquipmentLevelKey",
                table: "OpPhysicalAssetRequirements",
                column: "EquipmentLevelKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetRequirements_HierarchyScopes_HierarchyScopeKey",
                table: "OpPhysicalAssetRequirements",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetRequirements_OpSegmentRequirements_OpSegmentRequirementTypeKey",
                table: "OpPhysicalAssetRequirements",
                column: "OpSegmentRequirementTypeKey",
                principalTable: "OpSegmentRequirements",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetSpecifications_WorkDirectives_WorkDirectiveTypeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "WorkDirectiveTypeKey",
                principalTable: "WorkDirectives",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpPhysicalAssetSpecifications_WorkMasters_WorkMasterTypeKey",
                table: "OpPhysicalAssetSpecifications",
                column: "WorkMasterTypeKey",
                principalTable: "WorkMasters",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpSegmentDatas_HierarchyScopes_HierarchyScopeKey",
                table: "OpSegmentDatas",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpSegmentDatas_OpSegmentResponses_OpSegmentResponseTypeKey",
                table: "OpSegmentDatas",
                column: "OpSegmentResponseTypeKey",
                principalTable: "OpSegmentResponses",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpSegmentRequirements_HierarchyScopes_HierarchyScopeKey",
                table: "OpSegmentRequirements",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpSegmentRequirements_SegmentParameter_HierarchyScopes_HierarchyScopeKey",
                table: "OpSegmentRequirements_SegmentParameter",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_OpSegmentResponses_HierarchyScopes_HierarchyScopeKey",
                table: "OpSegmentResponses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Peoples_HierarchyScopes_HierarchyScopeKey",
                table: "Peoples",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PersonnelClasses_HierarchyScopes_HierarchyScopeKey",
                table: "PersonnelClasses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PersonnelSegmentSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "PersonnelSegmentSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PersonnelSegmentSpecifications_ProcessSegments_ProcessSegmentTypeKey",
                table: "PersonnelSegmentSpecifications",
                column: "ProcessSegmentTypeKey",
                principalTable: "ProcessSegments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PhysicalAssetClasses_HierarchyScopes_HierarchyScopeKey",
                table: "PhysicalAssetClasses",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PhysicalAssets_HierarchyScopes_EquipmentLevelKey",
                table: "PhysicalAssets",
                column: "EquipmentLevelKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PhysicalAssets_HierarchyScopes_HierarchyScopeKey",
                table: "PhysicalAssets",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PhysicalAssets_EquipmentAssetMapping_HierarchyScopes_HierarchyScopeKey",
                table: "PhysicalAssets_EquipmentAssetMapping",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PhysicalAssetSegmentSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "PhysicalAssetSegmentSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_PhysicalAssetSegmentSpecifications_ProcessSegments_ProcessSegmentTypeKey",
                table: "PhysicalAssetSegmentSpecifications",
                column: "ProcessSegmentTypeKey",
                principalTable: "ProcessSegments",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_ProcessSegments_HierarchyScopes_HierarchyScopeKey",
                table: "ProcessSegments",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_ProcessSegments_ProcessSegmentParameter_HierarchyScopes_HierarchyScopeKey",
                table: "ProcessSegments_ProcessSegmentParameter",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_ResourceNetworkConnectionTypes_HierarchyScopes_HierarchyScopeKey",
                table: "ResourceNetworkConnectionTypes",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_ResourceRelationshipNetworks_HierarchyScopes_HierarchyScopeKey",
                table: "ResourceRelationshipNetworks",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_SpecificationNodes_HierarchyScopes_HierarchyScopeKey",
                table: "SpecificationNodes",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_SpecificationNodes_WorkflowSpecifications_WorkflowSpecificationKey",
                table: "SpecificationNodes",
                column: "WorkflowSpecificationKey",
                principalTable: "WorkflowSpecifications",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_SpecificationNodeTypes_HierarchyScopes_HierarchyScopeKey",
                table: "SpecificationNodeTypes",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_TestSpecificationResults_HierarchyScopes_HierarchyScopeKey",
                table: "TestSpecificationResults",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_TestSpecifications_HierarchyScopes_HierarchyScopeKey",
                table: "TestSpecifications",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkAlertDefinitions_HierarchyScopes_HierarchyScopeKey",
                table: "WorkAlertDefinitions",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkAlerts_HierarchyScopes_HierarchyScopeKey",
                table: "WorkAlerts",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCalendarDefinitionEntries_HierarchyScopes_HierarchyScopeKey",
                table: "WorkCalendarDefinitionEntries",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCalendarDefinitionEntries_WorkCalendarDefinitions_WorkCalendarDefinitionTypeKey",
                table: "WorkCalendarDefinitionEntries",
                column: "WorkCalendarDefinitionTypeKey",
                principalTable: "WorkCalendarDefinitions",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCalendarDefinitions_HierarchyScopes_HierarchyScopeKey",
                table: "WorkCalendarDefinitions",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCalendarEntries_HierarchyScopes_HierarchyScopeKey",
                table: "WorkCalendarEntries",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCalendarEntries_WorkCalendars_WorkCalendarTypeKey",
                table: "WorkCalendarEntries",
                column: "WorkCalendarTypeKey",
                principalTable: "WorkCalendars",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCalendars_HierarchyScopes_HierarchyScopeKey",
                table: "WorkCalendars",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_WorkCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "WorkCapabilities",
                column: "HierarchyScopeKey",
                principalTable: "HierarchyScopes",
                principalColumn: "Key",
                onDelete: ReferentialAction.Restrict);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_OperationsCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "OperationsCapabilities");

            migrationBuilder.DropForeignKey(
                name: "FK_WorkCapabilities_HierarchyScopes_HierarchyScopeKey",
                table: "WorkCapabilities");

            migrationBuilder.DropTable(
                name: "EquipmentClasses_EquipmentClassBaseID");

            migrationBuilder.DropTable(
                name: "EquipmentClasses_EquipmentSourceID");

            migrationBuilder.DropTable(
                name: "EquipmentClasses_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "EquipmentClassProperties_Value");

            migrationBuilder.DropTable(
                name: "EquipmentProperties_Value");

            migrationBuilder.DropTable(
                name: "Equipments_EquipmentAssetMapping");

            migrationBuilder.DropTable(
                name: "Equipments_EquipmentClassID");

            migrationBuilder.DropTable(
                name: "Equipments_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecifications_EquipmentClassID");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecifications_EquipmentID");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "JobOrders_JobOrderParameter_ParameterSpecificationID");

            migrationBuilder.DropTable(
                name: "JobOrders_JobOrderParameter_ProcessSegmentParameterID");

            migrationBuilder.DropTable(
                name: "JobOrders_JobOrderParameter_Value");

            migrationBuilder.DropTable(
                name: "JobOrders_SegmentRequirementID");

            migrationBuilder.DropTable(
                name: "MaterialClasses_MaterialClassBaseID");

            migrationBuilder.DropTable(
                name: "MaterialClasses_MaterialDefinitionSourceID");

            migrationBuilder.DropTable(
                name: "MaterialClasses_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "MaterialClassProperties_Value");

            migrationBuilder.DropTable(
                name: "MaterialDefinitionProperties_Value");

            migrationBuilder.DropTable(
                name: "MaterialDefinitions_MaterialClassID");

            migrationBuilder.DropTable(
                name: "MaterialDefinitions_MaterialLotSourceID");

            migrationBuilder.DropTable(
                name: "MaterialDefinitions_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "MaterialLotProperties_Value");

            migrationBuilder.DropTable(
                name: "MaterialLots_Quantity");

            migrationBuilder.DropTable(
                name: "MaterialLots_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "MaterialLotTypeMaterialSubLotType");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications_MaterialClassID");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications_MaterialDefinitionID");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications_MaterialLotID");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications_MaterialSublotID");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecificationTypeMaterialSegmentSpecificationType");

            migrationBuilder.DropTable(
                name: "MaterialSubLots_Quantity");

            migrationBuilder.DropTable(
                name: "MaterialSubLots_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "MaterialSubLotTypeMaterialSubLotType");

            migrationBuilder.DropTable(
                name: "OpEquipmentActualProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentActualProperties_Value");

            migrationBuilder.DropTable(
                name: "OpEquipmentActuals_EquipmentClassID");

            migrationBuilder.DropTable(
                name: "OpEquipmentActuals_EquipmentID");

            migrationBuilder.DropTable(
                name: "OpEquipmentActuals_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilities_EquipmentClassID");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilities_EquipmentID");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilities_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilityProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilityProperties_Value");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirementProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirementProperties_Value");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirements_EquipmentClassID");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirements_EquipmentID");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirements_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirements_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecifications_EquipmentClassID");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecifications_EquipmentID");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OperationalLocationClasses_OperationalLocationClassBaseID");

            migrationBuilder.DropTable(
                name: "OperationalLocationClasses_OperationalLocationSourceID");

            migrationBuilder.DropTable(
                name: "OperationalLocationClassProperties_Value");

            migrationBuilder.DropTable(
                name: "OperationalLocationProperties_Value");

            migrationBuilder.DropTable(
                name: "OperationsDefinitions_BillOfMaterialsID");

            migrationBuilder.DropTable(
                name: "OperationsDefinitions_BillOfResourcesID");

            migrationBuilder.DropTable(
                name: "OperationsDefinitions_OperationsMaterialBillID");

            migrationBuilder.DropTable(
                name: "OperationsDefinitions_WorkMasterSourceID");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses_OperationsEventClassBaseID");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses_OperationsEventDefinitionSourceID");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification_ActionMultiplicity");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectType");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification_InformationObjectTypeMultiplicity");

            migrationBuilder.DropTable(
                name: "OperationsEventClassProperties_Value");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_Acknowledgement");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_Category");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_OperationsEventClassID");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_ActionMultiplicity");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectType");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification_InformationObjectTypeMultiplicity");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_Source");

            migrationBuilder.DropTable(
                name: "OperationsEventProperties");

            migrationBuilder.DropTable(
                name: "OperationsEvents_Acknowledgement");

            migrationBuilder.DropTable(
                name: "OperationsEvents_Category");

            migrationBuilder.DropTable(
                name: "OperationsEvents_Source");

            migrationBuilder.DropTable(
                name: "OperationsMaterialBillItems_MaterialSpecificationID");

            migrationBuilder.DropTable(
                name: "OperationsMaterialBillItems_Quantity");

            migrationBuilder.DropTable(
                name: "OperationsMaterialBills_BillOfMaterialsID");

            migrationBuilder.DropTable(
                name: "OperationsRecordEntryTemplateType");

            migrationBuilder.DropTable(
                name: "OperationsResponses_OperationsDefinitionID");

            migrationBuilder.DropTable(
                name: "OperationsResponses_OperationsRequestID");

            migrationBuilder.DropTable(
                name: "OperationsResponses_OperationsSegmentID");

            migrationBuilder.DropTable(
                name: "OperationsResponses_SegmentRequirementID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_BillOfMaterialsID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_BillOfResourcesID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_DependentOperationsSegmentID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_OperationsMaterialBillID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_ParameterSpecification_ParameterSpecificationID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_ParameterSpecification_ProcessSegmentParameterID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_ParameterSpecification_Value");

            migrationBuilder.DropTable(
                name: "OperationsSegments_ProcessSegmentID");

            migrationBuilder.DropTable(
                name: "OperationsSegments_WorkMasterSourceID");

            migrationBuilder.DropTable(
                name: "OpMaterialActualProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialActualProperties_Value");

            migrationBuilder.DropTable(
                name: "OpMaterialActuals_MaterialClassID");

            migrationBuilder.DropTable(
                name: "OpMaterialActuals_MaterialDefinitionID");

            migrationBuilder.DropTable(
                name: "OpMaterialActuals_MaterialLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialActuals_MaterialSubLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialActuals_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilities_MaterialClassID");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilities_MaterialDefinitionID");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilities_MaterialLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilities_MaterialSubLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilities_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilityProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilityProperties_Value");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirementProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirementProperties_Value");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements_MaterialClassID");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements_MaterialDefinitionID");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements_MaterialLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements_MaterialSubLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications_MaterialClassID");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications_MaterialDefinitionID");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications_MaterialLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications_MaterialSubLotID");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpOperationsSegmentCapabilities_Reason");

            migrationBuilder.DropTable(
                name: "OpPersonnelActualProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelActualProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPersonnelActuals_PersonID");

            migrationBuilder.DropTable(
                name: "OpPersonnelActuals_PersonnelClassID");

            migrationBuilder.DropTable(
                name: "OpPersonnelActuals_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilities_PersonID");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilities_PersonnelClassID");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilities_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilityProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilityProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirementProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirementProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirements_PersonID");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirements_PersonnelClassID");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirements_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirements_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecifications_PersonID");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecifications_PersonnelClassID");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActualProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActualProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActuals_PhysicalAssetClassID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActuals_PhysicalAssetID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActuals_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilities_PhysicalAssetClassID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilities_PhysicalAssetID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilities_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilityProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilityProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirementProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirementProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirements_PhysicalAssetClassID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirements_PhysicalAssetID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirements_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirements_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecifications_PhysicalAssetClassID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecifications_PhysicalAssetID");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "OpProcessSegmentCapabilityProperties_ProcessSegmentID");

            migrationBuilder.DropTable(
                name: "OpProcessSegmentCapabilityProperties_Reason");

            migrationBuilder.DropTable(
                name: "OpSegmentDatas_Value");

            migrationBuilder.DropTable(
                name: "OpSegmentRequirements_SegmentParameter_ParameterSpecificationID");

            migrationBuilder.DropTable(
                name: "OpSegmentRequirements_SegmentParameter_ProcessSegmentParameterID");

            migrationBuilder.DropTable(
                name: "OpSegmentRequirements_SegmentParameter_Value");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_JobResponseID");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_OperationsDefinitionID");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_OperationsRequestID");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_OperationsSegmentID");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_ProcessSegmentID");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_SegmentRequirementID");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses_WorkResponseID");

            migrationBuilder.DropTable(
                name: "Peoples_PersonnelClassID");

            migrationBuilder.DropTable(
                name: "Peoples_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "PeoplesProperties_Value");

            migrationBuilder.DropTable(
                name: "PersonnelClasses_PersonnelClassBaseID");

            migrationBuilder.DropTable(
                name: "PersonnelClasses_PersonSourceID");

            migrationBuilder.DropTable(
                name: "PersonnelClasses_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "PersonnelClassProperties_Value");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecifications_PersonID");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecifications_PersonnelClassID");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClasses_Manufacturer");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClasses_PhysicalAssetClassBaseID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClasses_PhysicalAssetSourceID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClasses_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClassProperties_Value");

            migrationBuilder.DropTable(
                name: "PhysicalAssetProperties_Value");

            migrationBuilder.DropTable(
                name: "PhysicalAssets_EquipmentAssetMapping");

            migrationBuilder.DropTable(
                name: "PhysicalAssets_PhysicalAssetClassID");

            migrationBuilder.DropTable(
                name: "PhysicalAssets_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecificationProperties_Quantity");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecifications_PhysicalAssetClassID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecifications_PhysicalAssetID");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecifications_Quantity");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecifications_TestSpecificationID");

            migrationBuilder.DropTable(
                name: "ProcessSegments_DependentProcessSegmentID");

            migrationBuilder.DropTable(
                name: "ProcessSegments_OperationsSegmentSourceID");

            migrationBuilder.DropTable(
                name: "ProcessSegments_ProcessSegmentParameter_ParameterSpecificationID");

            migrationBuilder.DropTable(
                name: "ProcessSegments_ProcessSegmentParameter_ProcessSegmentParameterID");

            migrationBuilder.DropTable(
                name: "ProcessSegments_ProcessSegmentParameter_Value");

            migrationBuilder.DropTable(
                name: "ProcessSegments_SegmentRequirementSourceID");

            migrationBuilder.DropTable(
                name: "ProcessSegments_WorkMasterSourceID");

            migrationBuilder.DropTable(
                name: "ProcessSegmentTypeProductSegmentType");

            migrationBuilder.DropTable(
                name: "PropertyMeasurementType_TestableObjectPropertyID");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnectionProperties_Value");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnectionTypeProperties_RNCTypePropertyChild");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnectionTypeProperties_Value");

            migrationBuilder.DropTable(
                name: "ResourceReferencesProperties_Value");

            migrationBuilder.DropTable(
                name: "ResourceRelationshipNetworkProperties_Value");

            migrationBuilder.DropTable(
                name: "SegmentDependencies");

            migrationBuilder.DropTable(
                name: "SpecificationNodes_WorkDirectiveID");

            migrationBuilder.DropTable(
                name: "SpecificationNodes_WorkMasterID");

            migrationBuilder.DropTable(
                name: "SpecificationNodeTypes_WorkflowSpecificationNodeTypeBaseID");

            migrationBuilder.DropTable(
                name: "TestSpecificationCriterias_EvaluatedPropertyID");

            migrationBuilder.DropTable(
                name: "TestSpecificationCriterias_Expression");

            migrationBuilder.DropTable(
                name: "TestSpecificationCriterias_Result");

            migrationBuilder.DropTable(
                name: "TestSpecificationCriterias_Sequence");

            migrationBuilder.DropTable(
                name: "TestSpecificationEvaluatedProperties_TestableObjectPropertyID");

            migrationBuilder.DropTable(
                name: "TestSpecificationEvaluatedProperties_TestSpecificationCriteriaID");

            migrationBuilder.DropTable(
                name: "TestSpecificationEvaluatedProperties_WorkDefinitionID");

            migrationBuilder.DropTable(
                name: "TestSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkAlertDefinitionProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkAlertDefinitions_Category");

            migrationBuilder.DropTable(
                name: "WorkAlertDefinitions_Priority");

            migrationBuilder.DropTable(
                name: "WorkAlertProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkCalendarDefinitionEntryProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkCalendarDefinitionProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkCalendarEntryProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkCalendarProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkDirectives_ParameterSpecification_ParameterSpecificationID");

            migrationBuilder.DropTable(
                name: "WorkDirectives_ParameterSpecification_ProcessSegmentParameterID");

            migrationBuilder.DropTable(
                name: "WorkDirectives_ParameterSpecification_Value");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnectionProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnectionTypeProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnectionTypes_WorkflowSpecificationConnectionTypeBaseID");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationNodeProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationNodeTypeProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationProperties_Value");

            migrationBuilder.DropTable(
                name: "WorkMasterCapabilities_Reason");

            migrationBuilder.DropTable(
                name: "WorkMasters_OperationsDefinitionID");

            migrationBuilder.DropTable(
                name: "WorkMasters_OperationsSegmentID");

            migrationBuilder.DropTable(
                name: "WorkMasters_ParameterSpecification_ParameterSpecificationID");

            migrationBuilder.DropTable(
                name: "WorkMasters_ParameterSpecification_ProcessSegmentParameterID");

            migrationBuilder.DropTable(
                name: "WorkMasters_ParameterSpecification_Value");

            migrationBuilder.DropTable(
                name: "WorkMasters_ProcessSegmentID");

            migrationBuilder.DropTable(
                name: "WorkRecordEntries");

            migrationBuilder.DropTable(
                name: "WorkRecords_BatchID");

            migrationBuilder.DropTable(
                name: "WorkRecords_CampaignID");

            migrationBuilder.DropTable(
                name: "WorkRecords_EquipmentID");

            migrationBuilder.DropTable(
                name: "WorkRecords_MaterialDefinitionID");

            migrationBuilder.DropTable(
                name: "WorkRecords_MaterialLotID");

            migrationBuilder.DropTable(
                name: "EquipmentClassProperties");

            migrationBuilder.DropTable(
                name: "EquipmentProperties");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecificationProperties");

            migrationBuilder.DropTable(
                name: "JobOrders_JobOrderParameter");

            migrationBuilder.DropTable(
                name: "MaterialClassProperties");

            migrationBuilder.DropTable(
                name: "MaterialDefinitionProperties");

            migrationBuilder.DropTable(
                name: "MaterialLotProperties");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecificationProperties");

            migrationBuilder.DropTable(
                name: "OpEquipmentActualProperties");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilityProperties");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirementProperties");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecificationProperties");

            migrationBuilder.DropTable(
                name: "OperationalLocationClassProperties");

            migrationBuilder.DropTable(
                name: "OperationalLocationProperties");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses_OpsEventClassRecordSpecification");

            migrationBuilder.DropTable(
                name: "OperationsEventClassProperties");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions_OpsEventDefinitionRecordSpecification");

            migrationBuilder.DropTable(
                name: "OperationsMaterialBillItems");

            migrationBuilder.DropTable(
                name: "OperationsRecordTemplateType");

            migrationBuilder.DropTable(
                name: "OperationsSegments_ParameterSpecification");

            migrationBuilder.DropTable(
                name: "OpMaterialActualProperties");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilityProperties");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirementProperties");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecificationProperties");

            migrationBuilder.DropTable(
                name: "OpPersonnelActualProperties");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilityProperties");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirementProperties");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecificationProperties");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActualProperties");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilityProperties");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirementProperties");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecificationProperties");

            migrationBuilder.DropTable(
                name: "OpSegmentDatas");

            migrationBuilder.DropTable(
                name: "OpSegmentRequirements_SegmentParameter");

            migrationBuilder.DropTable(
                name: "PeoplesProperties");

            migrationBuilder.DropTable(
                name: "PersonnelClassProperties");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecificationProperties");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClassProperties");

            migrationBuilder.DropTable(
                name: "PhysicalAssetProperties");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecificationProperties");

            migrationBuilder.DropTable(
                name: "ProcessSegments_ProcessSegmentParameter");

            migrationBuilder.DropTable(
                name: "ProductSegments");

            migrationBuilder.DropTable(
                name: "PropertyMeasurementType");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnectionProperties");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnectionTypeProperties");

            migrationBuilder.DropTable(
                name: "ResourceReferencesProperties");

            migrationBuilder.DropTable(
                name: "ResourceRelationshipNetworkProperties");

            migrationBuilder.DropTable(
                name: "TestSpecificationCriterias");

            migrationBuilder.DropTable(
                name: "TestSpecificationEvaluatedProperties");

            migrationBuilder.DropTable(
                name: "TestSpecificationProperties");

            migrationBuilder.DropTable(
                name: "WorkAlertProperties");

            migrationBuilder.DropTable(
                name: "WorkCalendarDefinitionEntryProperties");

            migrationBuilder.DropTable(
                name: "WorkCalendarDefinitionProperties");

            migrationBuilder.DropTable(
                name: "WorkCalendarEntryProperties");

            migrationBuilder.DropTable(
                name: "WorkCalendarProperties");

            migrationBuilder.DropTable(
                name: "WorkDirectives_ParameterSpecification");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnectionProperties");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnectionTypeProperties");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationNodeProperties");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationNodeTypeProperties");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationProperties");

            migrationBuilder.DropTable(
                name: "WorkMasters_ParameterSpecification");

            migrationBuilder.DropTable(
                name: "WorkRecords");

            migrationBuilder.DropTable(
                name: "EquipmentClasses");

            migrationBuilder.DropTable(
                name: "Equipments");

            migrationBuilder.DropTable(
                name: "EquipmentSegmentSpecifications");

            migrationBuilder.DropTable(
                name: "MaterialClasses");

            migrationBuilder.DropTable(
                name: "MaterialDefinitions");

            migrationBuilder.DropTable(
                name: "MaterialLots");

            migrationBuilder.DropTable(
                name: "MaterialSubLots");

            migrationBuilder.DropTable(
                name: "MaterialSegmentSpecifications");

            migrationBuilder.DropTable(
                name: "OpEquipmentCapabilities");

            migrationBuilder.DropTable(
                name: "OpEquipmentRequirements");

            migrationBuilder.DropTable(
                name: "OpEquipmentSpecifications");

            migrationBuilder.DropTable(
                name: "OperationalLocationClasses");

            migrationBuilder.DropTable(
                name: "OperationalLocations");

            migrationBuilder.DropTable(
                name: "OperationsEventClasses");

            migrationBuilder.DropTable(
                name: "OperationsEventDefinitions");

            migrationBuilder.DropTable(
                name: "OperationsMaterialBills");

            migrationBuilder.DropTable(
                name: "OperationsEvents");

            migrationBuilder.DropTable(
                name: "OpMaterialCapabilities");

            migrationBuilder.DropTable(
                name: "OpMaterialRequirements");

            migrationBuilder.DropTable(
                name: "OpMaterialSpecifications");

            migrationBuilder.DropTable(
                name: "OpPersonnelCapabilities");

            migrationBuilder.DropTable(
                name: "OpPersonnelRequirements");

            migrationBuilder.DropTable(
                name: "OpPersonnelSpecifications");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetCapabilities");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetRequirements");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetSpecifications");

            migrationBuilder.DropTable(
                name: "Peoples");

            migrationBuilder.DropTable(
                name: "PersonnelClasses");

            migrationBuilder.DropTable(
                name: "PersonnelSegmentSpecifications");

            migrationBuilder.DropTable(
                name: "PhysicalAssetClasses");

            migrationBuilder.DropTable(
                name: "PhysicalAssets");

            migrationBuilder.DropTable(
                name: "PhysicalAssetSegmentSpecifications");

            migrationBuilder.DropTable(
                name: "ProductInformation");

            migrationBuilder.DropTable(
                name: "TestSpecificationResults");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnections");

            migrationBuilder.DropTable(
                name: "ResourceNetworkConnectionTypes");

            migrationBuilder.DropTable(
                name: "TestSpecifications");

            migrationBuilder.DropTable(
                name: "WorkAlertDefinitionProperties");

            migrationBuilder.DropTable(
                name: "WorkAlerts");

            migrationBuilder.DropTable(
                name: "WorkCalendarDefinitionEntries");

            migrationBuilder.DropTable(
                name: "WorkCalendarEntries");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnections");

            migrationBuilder.DropTable(
                name: "WorkflowSpecificationConnectionTypes");

            migrationBuilder.DropTable(
                name: "SpecificationNodes");

            migrationBuilder.DropTable(
                name: "SpecificationNodeTypes");

            migrationBuilder.DropTable(
                name: "JobOrders");

            migrationBuilder.DropTable(
                name: "OperationsSegments");

            migrationBuilder.DropTable(
                name: "WorkMasters");

            migrationBuilder.DropTable(
                name: "ProcessSegments");

            migrationBuilder.DropTable(
                name: "OpEquipmentActuals");

            migrationBuilder.DropTable(
                name: "OpMaterialActuals");

            migrationBuilder.DropTable(
                name: "OpPersonnelActuals");

            migrationBuilder.DropTable(
                name: "OpPhysicalAssetActuals");

            migrationBuilder.DropTable(
                name: "ResourceReferences");

            migrationBuilder.DropTable(
                name: "ResourceRelationshipNetworks");

            migrationBuilder.DropTable(
                name: "WorkAlertDefinitions");

            migrationBuilder.DropTable(
                name: "WorkCalendarDefinitions");

            migrationBuilder.DropTable(
                name: "WorkCalendars");

            migrationBuilder.DropTable(
                name: "JobLists");

            migrationBuilder.DropTable(
                name: "WorkRequests");

            migrationBuilder.DropTable(
                name: "OperationsDefinitions");

            migrationBuilder.DropTable(
                name: "JobResponses");

            migrationBuilder.DropTable(
                name: "OpSegmentResponses");

            migrationBuilder.DropTable(
                name: "WorkSchedules");

            migrationBuilder.DropTable(
                name: "WorkDirectives");

            migrationBuilder.DropTable(
                name: "WorkResponses");

            migrationBuilder.DropTable(
                name: "OperationsResponses");

            migrationBuilder.DropTable(
                name: "OpSegmentRequirements");

            migrationBuilder.DropTable(
                name: "WorkflowSpecifications");

            migrationBuilder.DropTable(
                name: "WorkPerformances");

            migrationBuilder.DropTable(
                name: "OperationsPerformances");

            migrationBuilder.DropTable(
                name: "OperationsRequests");

            migrationBuilder.DropTable(
                name: "OperationsSchedules");

            migrationBuilder.DropTable(
                name: "HierarchyScopes");

            migrationBuilder.DropTable(
                name: "OpOperationsSegmentCapabilities");

            migrationBuilder.DropTable(
                name: "OpProcessSegmentCapabilityProperties");

            migrationBuilder.DropTable(
                name: "WorkMasterCapabilities");

            migrationBuilder.DropTable(
                name: "OperationsCapabilities");

            migrationBuilder.DropTable(
                name: "WorkCapabilities");
        }
    }
}
