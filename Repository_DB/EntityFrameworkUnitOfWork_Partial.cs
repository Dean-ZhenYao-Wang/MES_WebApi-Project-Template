//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 2022/5/19 17:14:38
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using IRepository_DB;

namespace Repository_DB
{
    public partial class EntityFrameworkUnitOfWork
    {
        private IRepository<HierarchyScopeType> _HierarchyScopeType;
        public IRepository<HierarchyScopeType> HierarchyScopeType
        {
            get
            {
                if (_HierarchyScopeType == null)
                {
                    _HierarchyScopeType = new EntityFrameworkRepository<HierarchyScopeType>(context);
                }
                return _HierarchyScopeType;
            }
        }

        private IRepository<ProductInformationType> _ProductInformationType;
        public IRepository<ProductInformationType> ProductInformationType
        {
            get
            {
                if (_ProductInformationType == null)
                {
                    _ProductInformationType = new EntityFrameworkRepository<ProductInformationType>(context);
                }
                return _ProductInformationType;
            }
        }

        private IRepository<ProductSegmentType> _ProductSegmentType;
        public IRepository<ProductSegmentType> ProductSegmentType
        {
            get
            {
                if (_ProductSegmentType == null)
                {
                    _ProductSegmentType = new EntityFrameworkRepository<ProductSegmentType>(context);
                }
                return _ProductSegmentType;
            }
        }

        private IRepository<TestSpecificationType> _TestSpecificationType;
        public IRepository<TestSpecificationType> TestSpecificationType
        {
            get
            {
                if (_TestSpecificationType == null)
                {
                    _TestSpecificationType = new EntityFrameworkRepository<TestSpecificationType>(context);
                }
                return _TestSpecificationType;
            }
        }

        private IRepository<TestSpecificationPropertyType> _TestSpecificationPropertyType;
        public IRepository<TestSpecificationPropertyType> TestSpecificationPropertyType
        {
            get
            {
                if (_TestSpecificationPropertyType == null)
                {
                    _TestSpecificationPropertyType = new EntityFrameworkRepository<TestSpecificationPropertyType>(context);
                }
                return _TestSpecificationPropertyType;
            }
        }

        private IRepository<TestSpecificationCriteriaType> _TestSpecificationCriteriaType;
        public IRepository<TestSpecificationCriteriaType> TestSpecificationCriteriaType
        {
            get
            {
                if (_TestSpecificationCriteriaType == null)
                {
                    _TestSpecificationCriteriaType = new EntityFrameworkRepository<TestSpecificationCriteriaType>(context);
                }
                return _TestSpecificationCriteriaType;
            }
        }

        private IRepository<TestSpecificationEvaluatedPropertyType> _TestSpecificationEvaluatedPropertyType;
        public IRepository<TestSpecificationEvaluatedPropertyType> TestSpecificationEvaluatedPropertyType
        {
            get
            {
                if (_TestSpecificationEvaluatedPropertyType == null)
                {
                    _TestSpecificationEvaluatedPropertyType = new EntityFrameworkRepository<TestSpecificationEvaluatedPropertyType>(context);
                }
                return _TestSpecificationEvaluatedPropertyType;
            }
        }

        private IRepository<TestResultType> _TestResultType;
        public IRepository<TestResultType> TestResultType
        {
            get
            {
                if (_TestResultType == null)
                {
                    _TestResultType = new EntityFrameworkRepository<TestResultType>(context);
                }
                return _TestResultType;
            }
        }

        private IRepository<PersonnelClassType> _PersonnelClassType;
        public IRepository<PersonnelClassType> PersonnelClassType
        {
            get
            {
                if (_PersonnelClassType == null)
                {
                    _PersonnelClassType = new EntityFrameworkRepository<PersonnelClassType>(context);
                }
                return _PersonnelClassType;
            }
        }

        private IRepository<PersonnelClassPropertyType> _PersonnelClassPropertyType;
        public IRepository<PersonnelClassPropertyType> PersonnelClassPropertyType
        {
            get
            {
                if (_PersonnelClassPropertyType == null)
                {
                    _PersonnelClassPropertyType = new EntityFrameworkRepository<PersonnelClassPropertyType>(context);
                }
                return _PersonnelClassPropertyType;
            }
        }

        private IRepository<PersonType> _PersonType;
        public IRepository<PersonType> PersonType
        {
            get
            {
                if (_PersonType == null)
                {
                    _PersonType = new EntityFrameworkRepository<PersonType>(context);
                }
                return _PersonType;
            }
        }

        private IRepository<PersonPropertyType> _PersonPropertyType;
        public IRepository<PersonPropertyType> PersonPropertyType
        {
            get
            {
                if (_PersonPropertyType == null)
                {
                    _PersonPropertyType = new EntityFrameworkRepository<PersonPropertyType>(context);
                }
                return _PersonPropertyType;
            }
        }

        private IRepository<EquipmentClassType> _EquipmentClassType;
        public IRepository<EquipmentClassType> EquipmentClassType
        {
            get
            {
                if (_EquipmentClassType == null)
                {
                    _EquipmentClassType = new EntityFrameworkRepository<EquipmentClassType>(context);
                }
                return _EquipmentClassType;
            }
        }

        private IRepository<EquipmentClassPropertyType> _EquipmentClassPropertyType;
        public IRepository<EquipmentClassPropertyType> EquipmentClassPropertyType
        {
            get
            {
                if (_EquipmentClassPropertyType == null)
                {
                    _EquipmentClassPropertyType = new EntityFrameworkRepository<EquipmentClassPropertyType>(context);
                }
                return _EquipmentClassPropertyType;
            }
        }

        private IRepository<EquipmentType> _EquipmentType;
        public IRepository<EquipmentType> EquipmentType
        {
            get
            {
                if (_EquipmentType == null)
                {
                    _EquipmentType = new EntityFrameworkRepository<EquipmentType>(context);
                }
                return _EquipmentType;
            }
        }

        private IRepository<EquipmentPropertyType> _EquipmentPropertyType;
        public IRepository<EquipmentPropertyType> EquipmentPropertyType
        {
            get
            {
                if (_EquipmentPropertyType == null)
                {
                    _EquipmentPropertyType = new EntityFrameworkRepository<EquipmentPropertyType>(context);
                }
                return _EquipmentPropertyType;
            }
        }

        private IRepository<PhysicalAssetClassType> _PhysicalAssetClassType;
        public IRepository<PhysicalAssetClassType> PhysicalAssetClassType
        {
            get
            {
                if (_PhysicalAssetClassType == null)
                {
                    _PhysicalAssetClassType = new EntityFrameworkRepository<PhysicalAssetClassType>(context);
                }
                return _PhysicalAssetClassType;
            }
        }

        private IRepository<PhysicalAssetClassPropertyType> _PhysicalAssetClassPropertyType;
        public IRepository<PhysicalAssetClassPropertyType> PhysicalAssetClassPropertyType
        {
            get
            {
                if (_PhysicalAssetClassPropertyType == null)
                {
                    _PhysicalAssetClassPropertyType = new EntityFrameworkRepository<PhysicalAssetClassPropertyType>(context);
                }
                return _PhysicalAssetClassPropertyType;
            }
        }

        private IRepository<PhysicalAssetType> _PhysicalAssetType;
        public IRepository<PhysicalAssetType> PhysicalAssetType
        {
            get
            {
                if (_PhysicalAssetType == null)
                {
                    _PhysicalAssetType = new EntityFrameworkRepository<PhysicalAssetType>(context);
                }
                return _PhysicalAssetType;
            }
        }

        private IRepository<PhysicalAssetPropertyType> _PhysicalAssetPropertyType;
        public IRepository<PhysicalAssetPropertyType> PhysicalAssetPropertyType
        {
            get
            {
                if (_PhysicalAssetPropertyType == null)
                {
                    _PhysicalAssetPropertyType = new EntityFrameworkRepository<PhysicalAssetPropertyType>(context);
                }
                return _PhysicalAssetPropertyType;
            }
        }

        private IRepository<MaterialClassType> _MaterialClassType;
        public IRepository<MaterialClassType> MaterialClassType
        {
            get
            {
                if (_MaterialClassType == null)
                {
                    _MaterialClassType = new EntityFrameworkRepository<MaterialClassType>(context);
                }
                return _MaterialClassType;
            }
        }

        private IRepository<MaterialClassPropertyType> _MaterialClassPropertyType;
        public IRepository<MaterialClassPropertyType> MaterialClassPropertyType
        {
            get
            {
                if (_MaterialClassPropertyType == null)
                {
                    _MaterialClassPropertyType = new EntityFrameworkRepository<MaterialClassPropertyType>(context);
                }
                return _MaterialClassPropertyType;
            }
        }

        private IRepository<MaterialDefinitionType> _MaterialDefinitionType;
        public IRepository<MaterialDefinitionType> MaterialDefinitionType
        {
            get
            {
                if (_MaterialDefinitionType == null)
                {
                    _MaterialDefinitionType = new EntityFrameworkRepository<MaterialDefinitionType>(context);
                }
                return _MaterialDefinitionType;
            }
        }

        private IRepository<MaterialDefinitionPropertyType> _MaterialDefinitionPropertyType;
        public IRepository<MaterialDefinitionPropertyType> MaterialDefinitionPropertyType
        {
            get
            {
                if (_MaterialDefinitionPropertyType == null)
                {
                    _MaterialDefinitionPropertyType = new EntityFrameworkRepository<MaterialDefinitionPropertyType>(context);
                }
                return _MaterialDefinitionPropertyType;
            }
        }

        private IRepository<MaterialLotType> _MaterialLotType;
        public IRepository<MaterialLotType> MaterialLotType
        {
            get
            {
                if (_MaterialLotType == null)
                {
                    _MaterialLotType = new EntityFrameworkRepository<MaterialLotType>(context);
                }
                return _MaterialLotType;
            }
        }

        private IRepository<MaterialLotPropertyType> _MaterialLotPropertyType;
        public IRepository<MaterialLotPropertyType> MaterialLotPropertyType
        {
            get
            {
                if (_MaterialLotPropertyType == null)
                {
                    _MaterialLotPropertyType = new EntityFrameworkRepository<MaterialLotPropertyType>(context);
                }
                return _MaterialLotPropertyType;
            }
        }

        private IRepository<MaterialSubLotType> _MaterialSubLotType;
        public IRepository<MaterialSubLotType> MaterialSubLotType
        {
            get
            {
                if (_MaterialSubLotType == null)
                {
                    _MaterialSubLotType = new EntityFrameworkRepository<MaterialSubLotType>(context);
                }
                return _MaterialSubLotType;
            }
        }

        private IRepository<OperationalLocationClassType> _OperationalLocationClassType;
        public IRepository<OperationalLocationClassType> OperationalLocationClassType
        {
            get
            {
                if (_OperationalLocationClassType == null)
                {
                    _OperationalLocationClassType = new EntityFrameworkRepository<OperationalLocationClassType>(context);
                }
                return _OperationalLocationClassType;
            }
        }

        private IRepository<OperationalLocationClassPropertyType> _OperationalLocationClassPropertyType;
        public IRepository<OperationalLocationClassPropertyType> OperationalLocationClassPropertyType
        {
            get
            {
                if (_OperationalLocationClassPropertyType == null)
                {
                    _OperationalLocationClassPropertyType = new EntityFrameworkRepository<OperationalLocationClassPropertyType>(context);
                }
                return _OperationalLocationClassPropertyType;
            }
        }

        private IRepository<OperationalLocationType> _OperationalLocationType;
        public IRepository<OperationalLocationType> OperationalLocationType
        {
            get
            {
                if (_OperationalLocationType == null)
                {
                    _OperationalLocationType = new EntityFrameworkRepository<OperationalLocationType>(context);
                }
                return _OperationalLocationType;
            }
        }

        private IRepository<OperationalLocationPropertyType> _OperationalLocationPropertyType;
        public IRepository<OperationalLocationPropertyType> OperationalLocationPropertyType
        {
            get
            {
                if (_OperationalLocationPropertyType == null)
                {
                    _OperationalLocationPropertyType = new EntityFrameworkRepository<OperationalLocationPropertyType>(context);
                }
                return _OperationalLocationPropertyType;
            }
        }

        private IRepository<ProcessSegmentType> _ProcessSegmentType;
        public IRepository<ProcessSegmentType> ProcessSegmentType
        {
            get
            {
                if (_ProcessSegmentType == null)
                {
                    _ProcessSegmentType = new EntityFrameworkRepository<ProcessSegmentType>(context);
                }
                return _ProcessSegmentType;
            }
        }

        private IRepository<PersonnelSegmentSpecificationType> _PersonnelSegmentSpecificationType;
        public IRepository<PersonnelSegmentSpecificationType> PersonnelSegmentSpecificationType
        {
            get
            {
                if (_PersonnelSegmentSpecificationType == null)
                {
                    _PersonnelSegmentSpecificationType = new EntityFrameworkRepository<PersonnelSegmentSpecificationType>(context);
                }
                return _PersonnelSegmentSpecificationType;
            }
        }

        private IRepository<PersonnelSegmentSpecificationPropertyType> _PersonnelSegmentSpecificationPropertyType;
        public IRepository<PersonnelSegmentSpecificationPropertyType> PersonnelSegmentSpecificationPropertyType
        {
            get
            {
                if (_PersonnelSegmentSpecificationPropertyType == null)
                {
                    _PersonnelSegmentSpecificationPropertyType =
                        new EntityFrameworkRepository<PersonnelSegmentSpecificationPropertyType>(context);
                }
                return _PersonnelSegmentSpecificationPropertyType;
            }
        }

        private IRepository<EquipmentSegmentSpecificationType> _EquipmentSegmentSpecificationType;
        public IRepository<EquipmentSegmentSpecificationType> EquipmentSegmentSpecificationType
        {
            get
            {
                if (_EquipmentSegmentSpecificationType == null)
                {
                    _EquipmentSegmentSpecificationType =
                        new EntityFrameworkRepository<EquipmentSegmentSpecificationType>(context);
                }
                return _EquipmentSegmentSpecificationType;
            }
        }

        private IRepository<EquipmentSegmentSpecificationPropertyType> _EquipmentSegmentSpecificationPropertyType;
        public IRepository<EquipmentSegmentSpecificationPropertyType> EquipmentSegmentSpecificationPropertyType
        {
            get
            {
                if (_EquipmentSegmentSpecificationPropertyType == null)
                {
                    _EquipmentSegmentSpecificationPropertyType =
                        new EntityFrameworkRepository<EquipmentSegmentSpecificationPropertyType>(context);
                }
                return _EquipmentSegmentSpecificationPropertyType;
            }
        }

        private IRepository<PhysicalAssetSegmentSpecificationType> _PhysicalAssetSegmentSpecificationType;
        public IRepository<PhysicalAssetSegmentSpecificationType> PhysicalAssetSegmentSpecificationType
        {
            get
            {
                if (_PhysicalAssetSegmentSpecificationType == null)
                {
                    _PhysicalAssetSegmentSpecificationType =
                        new EntityFrameworkRepository<PhysicalAssetSegmentSpecificationType>(context);
                }
                return _PhysicalAssetSegmentSpecificationType;
            }
        }

        private IRepository<PhysicalAssetSegmentSpecificationPropertyType> _PhysicalAssetSegmentSpecificationPropertyType;
        public IRepository<PhysicalAssetSegmentSpecificationPropertyType> PhysicalAssetSegmentSpecificationPropertyType
        {
            get
            {
                if (_PhysicalAssetSegmentSpecificationPropertyType == null)
                {
                    _PhysicalAssetSegmentSpecificationPropertyType =
                        new EntityFrameworkRepository<PhysicalAssetSegmentSpecificationPropertyType>(context);
                }
                return _PhysicalAssetSegmentSpecificationPropertyType;
            }
        }

        private IRepository<MaterialSegmentSpecificationType> _MaterialSegmentSpecificationType;
        public IRepository<MaterialSegmentSpecificationType> MaterialSegmentSpecificationType
        {
            get
            {
                if (_MaterialSegmentSpecificationType == null)
                {
                    _MaterialSegmentSpecificationType =
                        new EntityFrameworkRepository<MaterialSegmentSpecificationType>(context);
                }
                return _MaterialSegmentSpecificationType;
            }
        }

        private IRepository<MaterialSegmentSpecificationPropertyType> _MaterialSegmentSpecificationPropertyType;
        public IRepository<MaterialSegmentSpecificationPropertyType> MaterialSegmentSpecificationPropertyType
        {
            get
            {
                if (_MaterialSegmentSpecificationPropertyType == null)
                {
                    _MaterialSegmentSpecificationPropertyType =
                        new EntityFrameworkRepository<MaterialSegmentSpecificationPropertyType>(context);
                }
                return _MaterialSegmentSpecificationPropertyType;
            }
        }

        private IRepository<OperationsEventClassType> _OperationsEventClassType;
        public IRepository<OperationsEventClassType> OperationsEventClassType
        {
            get
            {
                if (_OperationsEventClassType == null)
                {
                    _OperationsEventClassType =
                        new EntityFrameworkRepository<OperationsEventClassType>(context);
                }
                return _OperationsEventClassType;
            }
        }

        private IRepository<OperationsEventClassPropertyType> _OperationsEventClassPropertyType; public IRepository<OperationsEventClassPropertyType> OperationsEventClassPropertyType
        {
            get
            {
                if (_OperationsEventClassPropertyType == null)
                {
                    _OperationsEventClassPropertyType =
                        new EntityFrameworkRepository<OperationsEventClassPropertyType>(context);
                }
                return _OperationsEventClassPropertyType;
            }
        }

        private IRepository<OperationsEventDefinitionType> _OperationsEventDefinitionType;
        public IRepository<OperationsEventDefinitionType> OperationsEventDefinitionType
        {
            get
            {
                if (_OperationsEventDefinitionType == null)
                {
                    _OperationsEventDefinitionType =
                        new EntityFrameworkRepository<OperationsEventDefinitionType>(context);
                }
                return _OperationsEventDefinitionType;
            }
        }

        private IRepository<OperationsEventType> _OperationsEventType;
        public IRepository<OperationsEventType> OperationsEventType
        {
            get
            {
                if (_OperationsEventType == null)
                {
                    _OperationsEventType =
                        new EntityFrameworkRepository<OperationsEventType>(context);
                }
                return _OperationsEventType;
            }
        }

        private IRepository<OperationsEventPropertyType> _OperationsEventPropertyType;
        public IRepository<OperationsEventPropertyType> OperationsEventPropertyType
        {
            get
            {
                if (_OperationsEventPropertyType == null)
                {
                    _OperationsEventPropertyType =
                        new EntityFrameworkRepository<OperationsEventPropertyType>(context);
                }
                return _OperationsEventPropertyType;
            }
        }

        private IRepository<OperationsCapabilityType> _OperationsCapabilityType;
        public IRepository<OperationsCapabilityType> OperationsCapabilityType
        {
            get
            {
                if (_OperationsCapabilityType == null)
                {
                    _OperationsCapabilityType =
                        new EntityFrameworkRepository<OperationsCapabilityType>(context);
                }
                return _OperationsCapabilityType;
            }
        }

        private IRepository<OpProcessSegmentCapabilityType> _OpProcessSegmentCapabilityType;
        public IRepository<OpProcessSegmentCapabilityType> OpProcessSegmentCapabilityType
        {
            get
            {
                if (_OpProcessSegmentCapabilityType == null)
                {
                    _OpProcessSegmentCapabilityType =
                        new EntityFrameworkRepository<OpProcessSegmentCapabilityType>(context);
                }
                return _OpProcessSegmentCapabilityType;
            }
        }

        private IRepository<OpOperationsSegmentCapabilityType> _OpOperationsSegmentCapabilityType;
        public IRepository<OpOperationsSegmentCapabilityType> OpOperationsSegmentCapabilityType
        {
            get
            {
                if (_OpOperationsSegmentCapabilityType == null)
                {
                    _OpOperationsSegmentCapabilityType =
                        new EntityFrameworkRepository<OpOperationsSegmentCapabilityType>(context);
                }
                return _OpOperationsSegmentCapabilityType;
            }
        }

        private IRepository<OpPersonnelCapabilityType> _OpPersonnelCapabilityType;
        public IRepository<OpPersonnelCapabilityType> OpPersonnelCapabilityType
        {
            get
            {
                if (_OpPersonnelCapabilityType == null)
                {
                    _OpPersonnelCapabilityType =
                        new EntityFrameworkRepository<OpPersonnelCapabilityType>(context);
                }
                return _OpPersonnelCapabilityType;
            }
        }

        private IRepository<OpPersonnelCapabilityPropertyType> _OpPersonnelCapabilityPropertyType;
        public IRepository<OpPersonnelCapabilityPropertyType> OpPersonnelCapabilityPropertyType
        {
            get
            {
                if (_OpPersonnelCapabilityPropertyType == null)
                {
                    _OpPersonnelCapabilityPropertyType =
                        new EntityFrameworkRepository<OpPersonnelCapabilityPropertyType>(context);
                }
                return _OpPersonnelCapabilityPropertyType;
            }
        }

        private IRepository<OpEquipmentCapabilityType> _OpEquipmentCapabilityType;
        public IRepository<OpEquipmentCapabilityType> OpEquipmentCapabilityType
        {
            get
            {
                if (_OpEquipmentCapabilityType == null)
                {
                    _OpEquipmentCapabilityType =
                        new EntityFrameworkRepository<OpEquipmentCapabilityType>(context);
                }
                return _OpEquipmentCapabilityType;
            }
        }

        private IRepository<OpEquipmentCapabilityPropertyType> _OpEquipmentCapabilityPropertyType;
        public IRepository<OpEquipmentCapabilityPropertyType> OpEquipmentCapabilityPropertyType
        {
            get
            {
                if (_OpEquipmentCapabilityPropertyType == null)
                {
                    _OpEquipmentCapabilityPropertyType =
                        new EntityFrameworkRepository<OpEquipmentCapabilityPropertyType>(context);
                }
                return _OpEquipmentCapabilityPropertyType;
            }
        }

        private IRepository<OpPhysicalAssetCapabilityType> _OpPhysicalAssetCapabilityType;
        public IRepository<OpPhysicalAssetCapabilityType> OpPhysicalAssetCapabilityType
        {
            get
            {
                if (_OpPhysicalAssetCapabilityType == null)
                {
                    _OpPhysicalAssetCapabilityType =
                        new EntityFrameworkRepository<OpPhysicalAssetCapabilityType>(context);
                }
                return _OpPhysicalAssetCapabilityType;
            }
        }

        private IRepository<OpPhysicalAssetCapabilityPropertyType> _OpPhysicalAssetCapabilityPropertyType;
        public IRepository<OpPhysicalAssetCapabilityPropertyType> OpPhysicalAssetCapabilityPropertyType
        {
            get
            {
                if (_OpPhysicalAssetCapabilityPropertyType == null)
                {
                    _OpPhysicalAssetCapabilityPropertyType =
                        new EntityFrameworkRepository<OpPhysicalAssetCapabilityPropertyType>(context);
                }
                return _OpPhysicalAssetCapabilityPropertyType;
            }
        }

        private IRepository<OpMaterialCapabilityType> _OpMaterialCapabilityType;
        public IRepository<OpMaterialCapabilityType> OpMaterialCapabilityType
        {
            get
            {
                if (_OpMaterialCapabilityType == null)
                {
                    _OpMaterialCapabilityType =
                        new EntityFrameworkRepository<OpMaterialCapabilityType>(context);
                }
                return _OpMaterialCapabilityType;
            }
        }

        private IRepository<OpMaterialCapabilityPropertyType> _OpMaterialCapabilityPropertyType;
        public IRepository<OpMaterialCapabilityPropertyType> OpMaterialCapabilityPropertyType
        {
            get
            {
                if (_OpMaterialCapabilityPropertyType == null)
                {
                    _OpMaterialCapabilityPropertyType =
                        new EntityFrameworkRepository<OpMaterialCapabilityPropertyType>(context);
                }
                return _OpMaterialCapabilityPropertyType;
            }
        }

        private IRepository<OperationsDefinitionType> _OperationsDefinitionType;
        public IRepository<OperationsDefinitionType> OperationsDefinitionType
        {
            get
            {
                if (_OperationsDefinitionType == null)
                {
                    _OperationsDefinitionType =
                        new EntityFrameworkRepository<OperationsDefinitionType>(context);
                }
                return _OperationsDefinitionType;
            }
        }

        private IRepository<OperationsMaterialBillType> _OperationsMaterialBillType;
        public IRepository<OperationsMaterialBillType> OperationsMaterialBillType
        {
            get
            {
                if (_OperationsMaterialBillType == null)
                {
                    _OperationsMaterialBillType =
                        new EntityFrameworkRepository<OperationsMaterialBillType>(context);
                }
                return _OperationsMaterialBillType;
            }
        }

        private IRepository<SegmentDependencyType> _SegmentDependencyType;
        public IRepository<SegmentDependencyType> SegmentDependencyType
        {
            get
            {
                if (_SegmentDependencyType == null)
                {
                    _SegmentDependencyType =
                        new EntityFrameworkRepository<SegmentDependencyType>(context);
                }
                return _SegmentDependencyType;
            }
        }

        private IRepository<OperationsSegmentType> _OperationsSegmentType;
        public IRepository<OperationsSegmentType> OperationsSegmentType
        {
            get
            {
                if (_OperationsSegmentType == null)
                {
                    _OperationsSegmentType =
                        new EntityFrameworkRepository<OperationsSegmentType>(context);
                }
                return _OperationsSegmentType;
            }
        }

        private IRepository<OperationsMaterialBillItemType> _OperationsMaterialBillItemType;
        public IRepository<OperationsMaterialBillItemType> OperationsMaterialBillItemType
        {
            get
            {
                if (_OperationsMaterialBillItemType == null)
                {
                    _OperationsMaterialBillItemType =
                        new EntityFrameworkRepository<OperationsMaterialBillItemType>(context);
                }
                return _OperationsMaterialBillItemType;
            }
        }

        private IRepository<OpPersonnelSpecificationType> _OpPersonnelSpecificationType;
        public IRepository<OpPersonnelSpecificationType> OpPersonnelSpecificationType
        {
            get
            {
                if (_OpPersonnelSpecificationType == null)
                {
                    _OpPersonnelSpecificationType =
                        new EntityFrameworkRepository<OpPersonnelSpecificationType>(context);
                }
                return _OpPersonnelSpecificationType;
            }
        }

        private IRepository<OpPersonnelSpecificationPropertyType> _OpPersonnelSpecificationPropertyType;
        public IRepository<OpPersonnelSpecificationPropertyType> OpPersonnelSpecificationPropertyType
        {
            get
            {
                if (_OpPersonnelSpecificationPropertyType == null)
                {
                    _OpPersonnelSpecificationPropertyType =
                        new EntityFrameworkRepository<OpPersonnelSpecificationPropertyType>(context);
                }
                return _OpPersonnelSpecificationPropertyType;
            }
        }

        private IRepository<OpEquipmentSpecificationType> _OpEquipmentSpecificationType;
        public IRepository<OpEquipmentSpecificationType> OpEquipmentSpecificationType
        {
            get
            {
                if (_OpEquipmentSpecificationType == null)
                {
                    _OpEquipmentSpecificationType =
                        new EntityFrameworkRepository<OpEquipmentSpecificationType>(context);
                }
                return _OpEquipmentSpecificationType;
            }
        }

        private IRepository<OpEquipmentSpecificationPropertyType> _OpEquipmentSpecificationPropertyType;
        public IRepository<OpEquipmentSpecificationPropertyType> OpEquipmentSpecificationPropertyType
        {
            get
            {
                if (_OpEquipmentSpecificationPropertyType == null)
                {
                    _OpEquipmentSpecificationPropertyType =
                        new EntityFrameworkRepository<OpEquipmentSpecificationPropertyType>(context);
                }
                return _OpEquipmentSpecificationPropertyType;
            }
        }

        private IRepository<OpPhysicalAssetSpecificationType> _OpPhysicalAssetSpecificationType;
        public IRepository<OpPhysicalAssetSpecificationType> OpPhysicalAssetSpecificationType
        {
            get
            {
                if (_OpPhysicalAssetSpecificationType == null)
                {
                    _OpPhysicalAssetSpecificationType =
                        new EntityFrameworkRepository<OpPhysicalAssetSpecificationType>(context);
                }
                return _OpPhysicalAssetSpecificationType;
            }
        }

        private IRepository<OpPhysicalAssetSpecificationPropertyType> _OpPhysicalAssetSpecificationPropertyType;
        public IRepository<OpPhysicalAssetSpecificationPropertyType> OpPhysicalAssetSpecificationPropertyType
        {
            get
            {
                if (_OpPhysicalAssetSpecificationPropertyType == null)
                {
                    _OpPhysicalAssetSpecificationPropertyType =
                        new EntityFrameworkRepository<OpPhysicalAssetSpecificationPropertyType>(context);
                }
                return _OpPhysicalAssetSpecificationPropertyType;
            }
        }

        private IRepository<OpMaterialSpecificationType> _OpMaterialSpecificationType;
        public IRepository<OpMaterialSpecificationType> OpMaterialSpecificationType
        {
            get
            {
                if (_OpMaterialSpecificationType == null)
                {
                    _OpMaterialSpecificationType =
                        new EntityFrameworkRepository<OpMaterialSpecificationType>(context);
                }
                return _OpMaterialSpecificationType;
            }
        }

        private IRepository<OpMaterialSpecificationPropertyType> _OpMaterialSpecificationPropertyType;
        public IRepository<OpMaterialSpecificationPropertyType> OpMaterialSpecificationPropertyType
        {
            get
            {
                if (_OpMaterialSpecificationPropertyType == null)
                {
                    _OpMaterialSpecificationPropertyType =
                        new EntityFrameworkRepository<OpMaterialSpecificationPropertyType>(context);
                }
                return _OpMaterialSpecificationPropertyType;
            }
        }

        private IRepository<OperationsScheduleType> _OperationsScheduleType;
        public IRepository<OperationsScheduleType> OperationsScheduleType
        {
            get
            {
                if (_OperationsScheduleType == null)
                {
                    _OperationsScheduleType =
                        new EntityFrameworkRepository<OperationsScheduleType>(context);
                }
                return _OperationsScheduleType;
            }
        }

        private IRepository<OperationsRequestType> _OperationsRequestType;
        public IRepository<OperationsRequestType> OperationsRequestType
        {
            get
            {
                if (_OperationsRequestType == null)
                {
                    _OperationsRequestType =
                        new EntityFrameworkRepository<OperationsRequestType>(context);
                }
                return _OperationsRequestType;
            }
        }

        private IRepository<OpSegmentRequirementType> _OpSegmentRequirementType;
        public IRepository<OpSegmentRequirementType> OpSegmentRequirementType
        {
            get
            {
                if (_OpSegmentRequirementType == null)
                {
                    _OpSegmentRequirementType =
                        new EntityFrameworkRepository<OpSegmentRequirementType>(context);
                }
                return _OpSegmentRequirementType;
            }
        }

        private IRepository<OpPersonnelRequirementType> _OpPersonnelRequirementType;
        public IRepository<OpPersonnelRequirementType> OpPersonnelRequirementType
        {
            get
            {
                if (_OpPersonnelRequirementType == null)
                {
                    _OpPersonnelRequirementType =
                        new EntityFrameworkRepository<OpPersonnelRequirementType>(context);
                }
                return _OpPersonnelRequirementType;
            }
        }

        private IRepository<OpPersonnelRequirementPropertyType> _OpPersonnelRequirementPropertyType;
        public IRepository<OpPersonnelRequirementPropertyType> OpPersonnelRequirementPropertyType
        {
            get
            {
                if (_OpPersonnelRequirementPropertyType == null)
                {
                    _OpPersonnelRequirementPropertyType =
                        new EntityFrameworkRepository<OpPersonnelRequirementPropertyType>(context);
                }
                return _OpPersonnelRequirementPropertyType;
            }
        }

        private IRepository<OpEquipmentRequirementType> _OpEquipmentRequirementType;
        public IRepository<OpEquipmentRequirementType> OpEquipmentRequirementType
        {
            get
            {
                if (_OpEquipmentRequirementType == null)
                {
                    _OpEquipmentRequirementType =
                        new EntityFrameworkRepository<OpEquipmentRequirementType>(context);
                }
                return _OpEquipmentRequirementType;
            }
        }

        private IRepository<OpEquipmentRequirementPropertyType> _OpEquipmentRequirementPropertyType;
        public IRepository<OpEquipmentRequirementPropertyType> OpEquipmentRequirementPropertyType
        {
            get
            {
                if (_OpEquipmentRequirementPropertyType == null)
                {
                    _OpEquipmentRequirementPropertyType =
                        new EntityFrameworkRepository<OpEquipmentRequirementPropertyType>(context);
                }
                return _OpEquipmentRequirementPropertyType;
            }
        }

        private IRepository<OpPhysicalAssetRequirementType> _OpPhysicalAssetRequirementType;
        public IRepository<OpPhysicalAssetRequirementType> OpPhysicalAssetRequirementType
        {
            get
            {
                if (_OpPhysicalAssetRequirementType == null) { _OpPhysicalAssetRequirementType = new EntityFrameworkRepository<OpPhysicalAssetRequirementType>(context); }
                return _OpPhysicalAssetRequirementType;
            }
        }

        private IRepository<OpPhysicalAssetRequirementPropertyType> _OpPhysicalAssetRequirementPropertyType;
        public IRepository<OpPhysicalAssetRequirementPropertyType> OpPhysicalAssetRequirementPropertyType
        {
            get
            {
                if (_OpPhysicalAssetRequirementPropertyType == null) { _OpPhysicalAssetRequirementPropertyType = new EntityFrameworkRepository<OpPhysicalAssetRequirementPropertyType>(context); }
                return _OpPhysicalAssetRequirementPropertyType;
            }
        }

        private IRepository<OpMaterialRequirementType> _OpMaterialRequirementType;
        public IRepository<OpMaterialRequirementType> OpMaterialRequirementType
        {
            get
            {
                if (_OpMaterialRequirementType == null) { _OpMaterialRequirementType = new EntityFrameworkRepository<OpMaterialRequirementType>(context); }
                return _OpMaterialRequirementType;
            }
        }

        private IRepository<OpMaterialRequirementPropertyType> _OpMaterialRequirementPropertyType;
        public IRepository<OpMaterialRequirementPropertyType> OpMaterialRequirementPropertyType
        {
            get
            {
                if (_OpMaterialRequirementPropertyType == null) { _OpMaterialRequirementPropertyType = new EntityFrameworkRepository<OpMaterialRequirementPropertyType>(context); }
                return _OpMaterialRequirementPropertyType;
            }
        }

        private IRepository<OperationsPerformanceType> _OperationsPerformanceType;
        public IRepository<OperationsPerformanceType> OperationsPerformanceType
        {
            get
            {
                if (_OperationsPerformanceType == null) { _OperationsPerformanceType = new EntityFrameworkRepository<OperationsPerformanceType>(context); }
                return _OperationsPerformanceType;
            }
        }

        private IRepository<OperationsResponseType> _OperationsResponseType;
        public IRepository<OperationsResponseType> OperationsResponseType
        {
            get
            {
                if (_OperationsResponseType == null) { _OperationsResponseType = new EntityFrameworkRepository<OperationsResponseType>(context); }
                return _OperationsResponseType;
            }
        }

        private IRepository<OpSegmentResponseType> _OpSegmentResponseType;
        public IRepository<OpSegmentResponseType> OpSegmentResponseType
        {
            get
            {
                if (_OpSegmentResponseType == null) { _OpSegmentResponseType = new EntityFrameworkRepository<OpSegmentResponseType>(context); }
                return _OpSegmentResponseType;
            }
        }

        private IRepository<OpSegmentDataType> _OpSegmentDataType;
        public IRepository<OpSegmentDataType> OpSegmentDataType
        {
            get
            {
                if (_OpSegmentDataType == null) { _OpSegmentDataType = new EntityFrameworkRepository<OpSegmentDataType>(context); }
                return _OpSegmentDataType;
            }
        }

        private IRepository<OpPersonnelActualType> _OpPersonnelActualType;
        public IRepository<OpPersonnelActualType> OpPersonnelActualType
        {
            get
            {
                if (_OpPersonnelActualType == null) { _OpPersonnelActualType = new EntityFrameworkRepository<OpPersonnelActualType>(context); }
                return _OpPersonnelActualType;
            }
        }

        private IRepository<OpPersonnelActualPropertyType> _OpPersonnelActualPropertyType;
        public IRepository<OpPersonnelActualPropertyType> OpPersonnelActualPropertyType
        {
            get
            {
                if (_OpPersonnelActualPropertyType == null) { _OpPersonnelActualPropertyType = new EntityFrameworkRepository<OpPersonnelActualPropertyType>(context); }
                return _OpPersonnelActualPropertyType;
            }
        }

        private IRepository<OpEquipmentActualType> _OpEquipmentActualType;
        public IRepository<OpEquipmentActualType> OpEquipmentActualType
        {
            get
            {
                if (_OpEquipmentActualType == null) { _OpEquipmentActualType = new EntityFrameworkRepository<OpEquipmentActualType>(context); }
                return _OpEquipmentActualType;
            }
        }

        private IRepository<OpEquipmentActualPropertyType> _OpEquipmentActualPropertyType;
        public IRepository<OpEquipmentActualPropertyType> OpEquipmentActualPropertyType
        {
            get
            {
                if (_OpEquipmentActualPropertyType == null) { _OpEquipmentActualPropertyType = new EntityFrameworkRepository<OpEquipmentActualPropertyType>(context); }
                return _OpEquipmentActualPropertyType;
            }
        }

        private IRepository<OpPhysicalAssetActualType> _OpPhysicalAssetActualType;
        public IRepository<OpPhysicalAssetActualType> OpPhysicalAssetActualType
        {
            get
            {
                if (_OpPhysicalAssetActualType == null) { _OpPhysicalAssetActualType = new EntityFrameworkRepository<OpPhysicalAssetActualType>(context); }
                return _OpPhysicalAssetActualType;
            }
        }

        private IRepository<OpPhysicalAssetActualPropertyType> _OpPhysicalAssetActualPropertyType;
        public IRepository<OpPhysicalAssetActualPropertyType> OpPhysicalAssetActualPropertyType
        {
            get
            {
                if (_OpPhysicalAssetActualPropertyType == null) { _OpPhysicalAssetActualPropertyType = new EntityFrameworkRepository<OpPhysicalAssetActualPropertyType>(context); }
                return _OpPhysicalAssetActualPropertyType;
            }
        }

        private IRepository<OpMaterialActualType> _OpMaterialActualType;
        public IRepository<OpMaterialActualType> OpMaterialActualType
        {
            get
            {
                if (_OpMaterialActualType == null) { _OpMaterialActualType = new EntityFrameworkRepository<OpMaterialActualType>(context); }
                return _OpMaterialActualType;
            }
        }

        private IRepository<OpMaterialActualPropertyType> _OpMaterialActualPropertyType;
        public IRepository<OpMaterialActualPropertyType> OpMaterialActualPropertyType
        {
            get
            {
                if (_OpMaterialActualPropertyType == null) { _OpMaterialActualPropertyType = new EntityFrameworkRepository<OpMaterialActualPropertyType>(context); }
                return _OpMaterialActualPropertyType;
            }
        }

        private IRepository<ResourceRelationshipNetworkType> _ResourceRelationshipNetworkType;
        public IRepository<ResourceRelationshipNetworkType> ResourceRelationshipNetworkType
        {
            get
            {
                if (_ResourceRelationshipNetworkType == null) { _ResourceRelationshipNetworkType = new EntityFrameworkRepository<ResourceRelationshipNetworkType>(context); }
                return _ResourceRelationshipNetworkType;
            }
        }

        private IRepository<RRNPropertyType> _RRNPropertyType;
        public IRepository<RRNPropertyType> RRNPropertyType
        {
            get
            {
                if (_RRNPropertyType == null) { _RRNPropertyType = new EntityFrameworkRepository<RRNPropertyType>(context); }
                return _RRNPropertyType;
            }
        }

        private IRepository<ResourceNetworkConnectionType> _ResourceNetworkConnectionType;
        public IRepository<ResourceNetworkConnectionType> ResourceNetworkConnectionType
        {
            get
            {
                if (_ResourceNetworkConnectionType == null) { _ResourceNetworkConnectionType = new EntityFrameworkRepository<ResourceNetworkConnectionType>(context); }
                return _ResourceNetworkConnectionType;
            }
        }

        private IRepository<RNCPropertyType> _RNCPropertyType;
        public IRepository<RNCPropertyType> RNCPropertyType
        {
            get
            {
                if (_RNCPropertyType == null) { _RNCPropertyType = new EntityFrameworkRepository<RNCPropertyType>(context); }
                return _RNCPropertyType;
            }
        }

        private IRepository<ResourceNetworkConnectionTypeType> _ResourceNetworkConnectionTypeType;
        public IRepository<ResourceNetworkConnectionTypeType> ResourceNetworkConnectionTypeType
        {
            get
            {
                if (_ResourceNetworkConnectionTypeType == null) { _ResourceNetworkConnectionTypeType = new EntityFrameworkRepository<ResourceNetworkConnectionTypeType>(context); }
                return _ResourceNetworkConnectionTypeType;
            }
        }

        private IRepository<RNCTypePropertyType> _RNCTypePropertyType;
        public IRepository<RNCTypePropertyType> RNCTypePropertyType
        {
            get
            {
                if (_RNCTypePropertyType == null) { _RNCTypePropertyType = new EntityFrameworkRepository<RNCTypePropertyType>(context); }
                return _RNCTypePropertyType;
            }
        }

        private IRepository<ResourceReferenceType> _ResourceReferenceType;
        public IRepository<ResourceReferenceType> ResourceReferenceType
        {
            get
            {
                if (_ResourceReferenceType == null) { _ResourceReferenceType = new EntityFrameworkRepository<ResourceReferenceType>(context); }
                return _ResourceReferenceType;
            }
        }

        private IRepository<ResourceReferencePropertyType> _ResourceReferencePropertyType;
        public IRepository<ResourceReferencePropertyType> ResourceReferencePropertyType
        {
            get
            {
                if (_ResourceReferencePropertyType == null) { _ResourceReferencePropertyType = new EntityFrameworkRepository<ResourceReferencePropertyType>(context); }
                return _ResourceReferencePropertyType;
            }
        }

        private IRepository<WorkAlertDefinitionType> _WorkAlertDefinitionType;
        public IRepository<WorkAlertDefinitionType> WorkAlertDefinitionType
        {
            get
            {
                if (_WorkAlertDefinitionType == null) { _WorkAlertDefinitionType = new EntityFrameworkRepository<WorkAlertDefinitionType>(context); }
                return _WorkAlertDefinitionType;
            }
        }

        private IRepository<WorkAlertDefinitionPropertyType> _WorkAlertDefinitionPropertyType;
        public IRepository<WorkAlertDefinitionPropertyType> WorkAlertDefinitionPropertyType
        {
            get
            {
                if (_WorkAlertDefinitionPropertyType == null) { _WorkAlertDefinitionPropertyType = new EntityFrameworkRepository<WorkAlertDefinitionPropertyType>(context); }
                return _WorkAlertDefinitionPropertyType;
            }
        }

        private IRepository<WorkAlertType> _WorkAlertType;
        public IRepository<WorkAlertType> WorkAlertType
        {
            get
            {
                if (_WorkAlertType == null) { _WorkAlertType = new EntityFrameworkRepository<WorkAlertType>(context); }
                return _WorkAlertType;
            }
        }

        private IRepository<WorkAlertPropertyType> _WorkAlertPropertyType;
        public IRepository<WorkAlertPropertyType> WorkAlertPropertyType
        {
            get
            {
                if (_WorkAlertPropertyType == null)
                {
                    _WorkAlertPropertyType =
                        new EntityFrameworkRepository<WorkAlertPropertyType>(context);
                }
                return _WorkAlertPropertyType;
            }
        }

        private IRepository<WorkCalendarDefinitionEntryType> _WorkCalendarDefinitionEntryType;
        public IRepository<WorkCalendarDefinitionEntryType> WorkCalendarDefinitionEntryType
        {
            get
            {
                if (_WorkCalendarDefinitionEntryType == null) { _WorkCalendarDefinitionEntryType = new EntityFrameworkRepository<WorkCalendarDefinitionEntryType>(context); }
                return _WorkCalendarDefinitionEntryType;
            }
        }

        private IRepository<WorkCalendarDefinitionEntryPropertyType> _WorkCalendarDefinitionEntryPropertyType;
        public IRepository<WorkCalendarDefinitionEntryPropertyType> WorkCalendarDefinitionEntryPropertyType
        {
            get
            {
                if (_WorkCalendarDefinitionEntryPropertyType == null) { _WorkCalendarDefinitionEntryPropertyType = new EntityFrameworkRepository<WorkCalendarDefinitionEntryPropertyType>(context); }
                return _WorkCalendarDefinitionEntryPropertyType;
            }
        }

        private IRepository<WorkCalendarDefinitionType> _WorkCalendarDefinitionType;
        public IRepository<WorkCalendarDefinitionType> WorkCalendarDefinitionType
        {
            get
            {
                if (_WorkCalendarDefinitionType == null) { _WorkCalendarDefinitionType = new EntityFrameworkRepository<WorkCalendarDefinitionType>(context); }
                return _WorkCalendarDefinitionType;
            }
        }

        private IRepository<WorkCalendarDefinitionPropertyType> _WorkCalendarDefinitionPropertyType;
        public IRepository<WorkCalendarDefinitionPropertyType> WorkCalendarDefinitionPropertyType
        {
            get
            {
                if (_WorkCalendarDefinitionPropertyType == null) { _WorkCalendarDefinitionPropertyType = new EntityFrameworkRepository<WorkCalendarDefinitionPropertyType>(context); }
                return _WorkCalendarDefinitionPropertyType;
            }
        }

        private IRepository<WorkCalendarType> _WorkCalendarType;
        public IRepository<WorkCalendarType> WorkCalendarType
        {
            get
            {
                if (_WorkCalendarType == null) { _WorkCalendarType = new EntityFrameworkRepository<WorkCalendarType>(context); }
                return _WorkCalendarType;
            }
        }

        private IRepository<WorkCalendarPropertyType> _WorkCalendarPropertyType;
        public IRepository<WorkCalendarPropertyType> WorkCalendarPropertyType
        {
            get
            {
                if (_WorkCalendarPropertyType == null) { _WorkCalendarPropertyType = new EntityFrameworkRepository<WorkCalendarPropertyType>(context); }
                return _WorkCalendarPropertyType;
            }
        }

        private IRepository<WorkCalendarEntryType> _WorkCalendarEntryType;
        public IRepository<WorkCalendarEntryType> WorkCalendarEntryType
        {
            get
            {
                if (_WorkCalendarEntryType == null) { _WorkCalendarEntryType = new EntityFrameworkRepository<WorkCalendarEntryType>(context); }
                return _WorkCalendarEntryType;
            }
        }

        private IRepository<WorkCalendarEntryPropertyType> _WorkCalendarEntryPropertyType;
        public IRepository<WorkCalendarEntryPropertyType> WorkCalendarEntryPropertyType
        {
            get
            {
                if (_WorkCalendarEntryPropertyType == null)
                {
                    _WorkCalendarEntryPropertyType =
                        new EntityFrameworkRepository<WorkCalendarEntryPropertyType>(context);
                }
                return _WorkCalendarEntryPropertyType;
            }
        }

        private IRepository<WorkCapabilityType> _WorkCapabilityType;
        public IRepository<WorkCapabilityType> WorkCapabilityType
        {
            get
            {
                if (_WorkCapabilityType == null) { _WorkCapabilityType = new EntityFrameworkRepository<WorkCapabilityType>(context); }
                return _WorkCapabilityType;
            }
        }

        private IRepository<WorkMasterCapabilityType> _WorkMasterCapabilityType;
        public IRepository<WorkMasterCapabilityType> WorkMasterCapabilityType
        {
            get
            {
                if (_WorkMasterCapabilityType == null)
                {
                    _WorkMasterCapabilityType =
                        new EntityFrameworkRepository<WorkMasterCapabilityType>(context);
                }
                return _WorkMasterCapabilityType;
            }
        }

        private IRepository<WorkMasterType> _WorkMasterType;
        public IRepository<WorkMasterType> WorkMasterType
        {
            get
            {
                if (_WorkMasterType == null)
                {
                    _WorkMasterType =
                        new EntityFrameworkRepository<WorkMasterType>(context);
                }
                return _WorkMasterType;
            }
        }

        private IRepository<WorkDirectiveType> _WorkDirectiveType;
        public IRepository<WorkDirectiveType> WorkDirectiveType
        {
            get
            {
                if (_WorkDirectiveType == null)
                {
                    _WorkDirectiveType
                        = new EntityFrameworkRepository<WorkDirectiveType>(context);
                }
                return _WorkDirectiveType;
            }
        }

        private IRepository<WorkflowSpecificationType> _WorkflowSpecificationType;
        public IRepository<WorkflowSpecificationType> WorkflowSpecificationType
        {
            get
            {
                if (_WorkflowSpecificationType == null)
                {
                    _WorkflowSpecificationType
                        = new EntityFrameworkRepository<WorkflowSpecificationType>(context);
                }
                return _WorkflowSpecificationType;
            }
        }

        private IRepository<WorkRecordType> _WorkRecordType;
        public IRepository<WorkRecordType> WorkRecordType
        {
            get
            {
                if (_WorkRecordType == null) { _WorkRecordType = new EntityFrameworkRepository<WorkRecordType>(context); }
                return _WorkRecordType;
            }
        }

        private IRepository<WorkRecordEntryType> _WorkRecordEntryType;
        public IRepository<WorkRecordEntryType> WorkRecordEntryType
        {
            get
            {
                if (_WorkRecordEntryType == null)
                {
                    _WorkRecordEntryType =
                        new EntityFrameworkRepository<WorkRecordEntryType>(context);
                }
                return _WorkRecordEntryType;
            }
        }

        private IRepository<WorkScheduleType> _WorkScheduleType;
        public IRepository<WorkScheduleType> WorkScheduleType
        {
            get
            {
                if (_WorkScheduleType == null) { _WorkScheduleType = new EntityFrameworkRepository<WorkScheduleType>(context); }
                return _WorkScheduleType;
            }
        }

        private IRepository<WorkRequestType> _WorkRequestType;
        public IRepository<WorkRequestType> WorkRequestType
        {
            get
            {
                if (_WorkRequestType == null) { _WorkRequestType = new EntityFrameworkRepository<WorkRequestType>(context); }
                return _WorkRequestType;
            }
        }

        private IRepository<WorkResponseType> _WorkResponseType;
        public IRepository<WorkResponseType> WorkResponseType
        {
            get
            {
                if (_WorkResponseType == null) { _WorkResponseType = new EntityFrameworkRepository<WorkResponseType>(context); }
                return _WorkResponseType;
            }
        }

        private IRepository<JobOrderType> _JobOrderType;
        public IRepository<JobOrderType> JobOrderType
        {
            get
            {
                if (_JobOrderType == null) { _JobOrderType = new EntityFrameworkRepository<JobOrderType>(context); }
                return _JobOrderType;
            }
        }

        private IRepository<JobResponseType> _JobResponseType;
        public IRepository<JobResponseType> JobResponseType
        {
            get
            {
                if (_JobResponseType == null) { _JobResponseType = new EntityFrameworkRepository<JobResponseType>(context); }
                return _JobResponseType;
            }
        }

        private IRepository<JobListType> _JobListType;
        public IRepository<JobListType> JobListType
        {
            get
            {
                if (_JobListType == null) { _JobListType = new EntityFrameworkRepository<JobListType>(context); }
                return _JobListType;
            }
        }

        private IRepository<WorkPerformanceType> _WorkPerformanceType;
        public IRepository<WorkPerformanceType> WorkPerformanceType
        {
            get
            {
                if (_WorkPerformanceType == null) { _WorkPerformanceType = new EntityFrameworkRepository<WorkPerformanceType>(context); }
                return _WorkPerformanceType;
            }
        }

        private IRepository<WorkflowSpecificationPropertyType> _WorkflowSpecificationPropertyType;
        public IRepository<WorkflowSpecificationPropertyType> WorkflowSpecificationPropertyType
        {
            get
            {
                if (_WorkflowSpecificationPropertyType == null) { _WorkflowSpecificationPropertyType = new EntityFrameworkRepository<WorkflowSpecificationPropertyType>(context); }
                return _WorkflowSpecificationPropertyType;
            }
        }

        private IRepository<WorkflowSpecificationNodeTypeType> _WorkflowSpecificationNodeTypeType;
        public IRepository<WorkflowSpecificationNodeTypeType> WorkflowSpecificationNodeTypeType
        {
            get
            {
                if (_WorkflowSpecificationNodeTypeType == null) { _WorkflowSpecificationNodeTypeType = new EntityFrameworkRepository<WorkflowSpecificationNodeTypeType>(context); }
                return _WorkflowSpecificationNodeTypeType;
            }
        }

        private IRepository<WorkflowSpecificationNodeTypePropertyType> _WorkflowSpecificationNodeTypePropertyType;
        public IRepository<WorkflowSpecificationNodeTypePropertyType> WorkflowSpecificationNodeTypePropertyType
        {
            get
            {
                if (_WorkflowSpecificationNodeTypePropertyType == null) { _WorkflowSpecificationNodeTypePropertyType = new EntityFrameworkRepository<WorkflowSpecificationNodeTypePropertyType>(context); }
                return _WorkflowSpecificationNodeTypePropertyType;
            }
        }

        private IRepository<WorkflowSpecificationNodeType> _WorkflowSpecificationNodeType;
        public IRepository<WorkflowSpecificationNodeType> WorkflowSpecificationNodeType
        {
            get
            {
                if (_WorkflowSpecificationNodeType == null) { _WorkflowSpecificationNodeType = new EntityFrameworkRepository<WorkflowSpecificationNodeType>(context); }
                return _WorkflowSpecificationNodeType;
            }
        }

        private IRepository<WorkflowSpecificationNodePropertyType> _WorkflowSpecificationNodePropertyType;
        public IRepository<WorkflowSpecificationNodePropertyType> WorkflowSpecificationNodePropertyType
        {
            get
            {
                if (_WorkflowSpecificationNodePropertyType == null) { _WorkflowSpecificationNodePropertyType = new EntityFrameworkRepository<WorkflowSpecificationNodePropertyType>(context); }
                return _WorkflowSpecificationNodePropertyType;
            }
        }

        private IRepository<WorkflowSpecificationConnectionType> _WorkflowSpecificationConnectionType;
        public IRepository<WorkflowSpecificationConnectionType> WorkflowSpecificationConnectionType
        {
            get
            {
                if (_WorkflowSpecificationConnectionType == null) { _WorkflowSpecificationConnectionType = new EntityFrameworkRepository<WorkflowSpecificationConnectionType>(context); }
                return _WorkflowSpecificationConnectionType;
            }
        }

        private IRepository<WorkflowSpecificationConnectionPropertyType> _WorkflowSpecificationConnectionPropertyType;
        public IRepository<WorkflowSpecificationConnectionPropertyType> WorkflowSpecificationConnectionPropertyType
        {
            get
            {
                if (_WorkflowSpecificationConnectionPropertyType == null) { _WorkflowSpecificationConnectionPropertyType = new EntityFrameworkRepository<WorkflowSpecificationConnectionPropertyType>(context); }
                return _WorkflowSpecificationConnectionPropertyType;
            }
        }

        private IRepository<WorkflowSpecificationConnectionTypeType> _WorkflowSpecificationConnectionTypeType;
        public IRepository<WorkflowSpecificationConnectionTypeType> WorkflowSpecificationConnectionTypeType
        {
            get
            {
                if (_WorkflowSpecificationConnectionTypeType == null) { _WorkflowSpecificationConnectionTypeType = new EntityFrameworkRepository<WorkflowSpecificationConnectionTypeType>(context); }
                return _WorkflowSpecificationConnectionTypeType;
            }
        }

        private IRepository<WorkflowSpecificationConnectionTypePropertyType> _WorkflowSpecificationConnectionTypePropertyType;
        public IRepository<WorkflowSpecificationConnectionTypePropertyType> WorkflowSpecificationConnectionTypePropertyType
        {
            get
            {
                if (_WorkflowSpecificationConnectionTypePropertyType == null) { _WorkflowSpecificationConnectionTypePropertyType = new EntityFrameworkRepository<WorkflowSpecificationConnectionTypePropertyType>(context); }
                return _WorkflowSpecificationConnectionTypePropertyType;
            }
        }
    }
}